<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>本该如此轻松</title>
    <url>/2021/05/09/%E6%9C%AC%E8%AF%A5%E5%A6%82%E6%AD%A4%E8%BD%BB%E6%9D%BE/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="本该如此轻松"><a href="#本该如此轻松" class="headerlink" title="本该如此轻松"></a>本该如此轻松</h2><p>我们立志让计算机和金融商科专业背景的同学能够在所有的课程中获得高GPA</p>
<h3 id="RESPONSIVE"><a href="#RESPONSIVE" class="headerlink" title="RESPONSIVE"></a>RESPONSIVE</h3><p>7*24小时不间断服务，平均回复时长不超过1分钟，高效沟通，只为解决你的疑惑</p>
<h3 id="QUALITY"><a href="#QUALITY" class="headerlink" title="QUALITY"></a>QUALITY</h3><p>作业质量经过层层把关，杜绝抄袭、重复赘述等问题，详细注释，思路解析，一点就通</p>
<h3 id="SUPPORT"><a href="#SUPPORT" class="headerlink" title="SUPPORT"></a>SUPPORT</h3><p>7天售后，作业有问题全额退款，精英导师手把手答疑解惑</p>
<p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
  </entry>
  <entry>
    <title>基于SpringBoot的旅游景区项目</title>
    <url>/2022/05/21/Java%E6%99%AF%E5%8C%BA%E6%97%85%E6%B8%B8%E9%A1%B9%E7%9B%AE%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的旅游景区项目.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>支付宝沙盒支付<br>百度地图JS</p>
<p>民宿管理员：订单数量统计，订单交易额统计，客房统计饼图，酒店信息修改，房间订单查询，房间入住状态修改，查看住宿订单详情，酒店房间管理，查看用户房间订单评价</p>
<p>超级管理员：景点民宿导航，公告管理，订单评价，民宿管理，民宿订单，论坛管理，消息回复，房间信息，景点管理，用户管理，景区订单</p>
<p>用户：邮箱注册，修改个人信息，订单支付，我的贴子，订单评价，发帖回复，修改密码</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[民宿管理员]<br>xierdun<br>1234qwer</p>
<p>[用户]<br>test<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/19cdd8902c7bfe98b09d68bfaf98f8f.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/ba5c5fff53c65a43b2f23c025a0a547.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/4dcc19ff60e2e6b8bd273ed4fa05f78.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/b8419f48a6cbb09c5b6407f63bc76dd.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/efb6b69ea9d388047c8d577d474f958.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/aa88009b005b782315efef594bb1daa.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/eed87da40340d9959518a49e29e32ff.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/52656293d7fdab487a9f6328416fb14.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/edbd46abf5196711972c5dbacaec0d9.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/4984aed0d5c9bd52671e397236892f1.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/e3d3c27c56607aea71d58de6340c105.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/79d53e9a9fb2002f6ea3aabf6b2b5b0.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/d406956ccb5decffb1753eceddcd49d.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/65e62461fe9da3b6c2328d85c56e5a2.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/c20e7f36c52b84facd02a3ebf4b0de2.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/29fba70b80bd636fea365ec7f81c8a1.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p><a href="https://www.bilibili.com/video/BV1S94y1f7Dg/">项目视频：基于Spring的旅游住宿小程序</a></p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#97;&#110;&#49;&#107;&#101;&#x32;&#x6b;&#101;&#64;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#111;&#109;">&#102;&#97;&#110;&#49;&#107;&#101;&#x32;&#x6b;&#101;&#64;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>Java8 Stream完全使用指南</title>
    <url>/2022/05/21/Java8%20Stream%E5%AE%8C%E5%85%A8%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h2 id="什么是Stream"><a href="#什么是Stream" class="headerlink" title="什么是Stream"></a>什么是Stream</h2><p>Stream是Java 1.8版本开始提供的一个接口，主要提供对数据集合使用流的方式进行操作，流中的元素不可变且只会被消费一次，所有方法都设计成支持链式调用。使用Stream API可以极大生产力，写出高效率、干净、简洁的代码。</p>
<h2 id="如何获得Stream实例"><a href="#如何获得Stream实例" class="headerlink" title="如何获得Stream实例"></a>如何获得Stream实例</h2><p>Stream提供了静态构建方法，可以基于不同的参数创建返回Stream实例<br>使用Collection的子类实例调用stream()或者parallelStream()方法也可以得到Stream实例，两个方法的区别在于后续执行Stream其他方法的时候是单线程还是多线程</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;String&gt; stringStream = Stream.of(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br><span class="line"><span class="comment">//无限长的偶数流</span></span><br><span class="line">Stream&lt;Integer&gt; evenNumStream = Stream.iterate(<span class="number">0</span>, n -&gt; n + <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">List&lt;String&gt; strList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">strList.add(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">strList.add(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">strList.add(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">Stream&lt;String&gt; strStream = strList.stream();</span><br><span class="line">Stream&lt;String&gt; strParallelStream = strList.parallelStream();</span><br></pre></td></tr></table></figure>

<h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p>filter方法用于根据指定的条件做过滤，返回符合条件的流</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; numStream = Stream.of(-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">//获得只包含正数的流，positiveNumStream -&gt; (1，2，3)</span></span><br><span class="line">Stream&lt;Integer&gt; positiveNumStream = numStream.filter(num -&gt; num &gt; <span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>map方法用于将流中的每个元素执行指定的转换逻辑，返回其他类型元素的流</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; numStream = Stream.of(-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">//转换成字符串流</span></span><br><span class="line">Stream&lt;String&gt; strStream = numStream.map(String::valueOf);</span><br></pre></td></tr></table></figure>

<h2 id="mapToInt-mapToLong-mapToDouble"><a href="#mapToInt-mapToLong-mapToDouble" class="headerlink" title="mapToInt mapToLong mapToDouble"></a>mapToInt mapToLong mapToDouble</h2><p>这三个方法是对map方法的封装，返回的是官方为各个类型单独定义的Stream，该Stream还提供了适合各自类型的其他操作方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;String&gt; stringStream = Stream.of(<span class="string">&quot;-2&quot;</span>, <span class="string">&quot;-1&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br><span class="line">IntStream intStream = stringStream.mapToInt(Integer::parseInt);</span><br><span class="line">LongStream longStream = stringStream.mapToLong(Long::parseLong);</span><br><span class="line">DoubleStream doubleStream = stringStream.mapToDouble(Double::parseDouble);</span><br></pre></td></tr></table></figure>

<h2 id="flatMap"><a href="#flatMap" class="headerlink" title="flatMap"></a>flatMap</h2><p>flatMap方法用于将流中的每个元素转换成其他类型元素的流，比如，当前有一个订单(Order)列表，每个订单又包含多个商品(itemList)，如果要得到所有订单的所有商品汇总，就可以使用该方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Item&gt; allItemStream = orderList.stream().flatMap(order -&gt; order.itemList.stream());</span><br></pre></td></tr></table></figure>

<h2 id="flatMapToInt-flatMapToLong-flatMapToDouble"><a href="#flatMapToInt-flatMapToLong-flatMapToDouble" class="headerlink" title="flatMapToInt flatMapToLong flatMapToDouble"></a>flatMapToInt flatMapToLong flatMapToDouble</h2><p>这三个方法是对flatMap方法的封装，返回的是官方为各个类型单独定义的Stream，使用方法同上</p>
<h2 id="distinct"><a href="#distinct" class="headerlink" title="distinct"></a>distinct</h2><p>distinct方法用于对流中的元素去重，判断元素是否重复使用的是equals方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; numStream = Stream.of(-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">//不重复的数字流，uniqueNumStream -&gt; (-2, -1, 0, 1, 2, 3)</span></span><br><span class="line">Stream&lt;Integer&gt; uniqueNumStream = numStream.distinct();</span><br></pre></td></tr></table></figure>

<h2 id="sorted"><a href="#sorted" class="headerlink" title="sorted"></a>sorted</h2><p>sorted有一个无参和一个有参的方法，用于对流中的元素进行排序。无参方法要求流中的元素必须实现Comparable接口，不然会报java.lang.ClassCastException异常</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; unorderedStream = Stream.of(<span class="number">5</span>, <span class="number">6</span>, <span class="number">32</span>, <span class="number">7</span>, <span class="number">27</span>, <span class="number">4</span>);</span><br><span class="line"><span class="comment">//按从小到大排序完成的流，orderedStream -&gt; (4, 5, 6, 7, 27, 32)</span></span><br><span class="line">Stream&lt;Integer&gt; orderedStream = unorderedStream.sorted();</span><br></pre></td></tr></table></figure>

<p>有参方法sorted(Comparator&lt;? super T&gt; comparator)不需要元素实现Comparable接口，通过指定的元素比较器对流内的元素进行排序</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;String&gt; unorderedStream = Stream.of(<span class="string">&quot;1234&quot;</span>, <span class="string">&quot;123&quot;</span>, <span class="string">&quot;12&quot;</span>, <span class="string">&quot;12345&quot;</span>, <span class="string">&quot;123456&quot;</span>, <span class="string">&quot;1&quot;</span>);</span><br><span class="line"><span class="comment">//按字符串长度从小到大排序完成的流，orderedStream -&gt; (&quot;1&quot;, &quot;12&quot;, &quot;123&quot;, &quot;1234&quot;, &quot;12345&quot;, &quot;123456&quot;)</span></span><br><span class="line">Stream&lt;String&gt; orderedStream = unorderedStream.sorted(Comparator.comparingInt(String::length));</span><br></pre></td></tr></table></figure>

<h2 id="peek"><a href="#peek" class="headerlink" title="peek"></a>peek</h2><p>peek方法可以不调整元素顺序和数量的情况下消费每一个元素，然后产生新的流，按文档上的说明，主要是用于对流执行的中间过程做debug的时候使用，因为Stream使用的时候一般都是链式调用的，所以可能会执行多次流操作，如果想看每个元素在多次流操作中间的流转情况，就可以使用这个方法实现</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream.of(<span class="string">&quot;one&quot;</span>, <span class="string">&quot;two&quot;</span>, <span class="string">&quot;three&quot;</span>, <span class="string">&quot;four&quot;</span>)</span><br><span class="line">     .filter(e -&gt; e.length() &gt; <span class="number">3</span>)</span><br><span class="line">     .peek(e -&gt; System.out.println(<span class="string">&quot;Filtered value: &quot;</span> + e))</span><br><span class="line">     .map(String::toUpperCase)</span><br><span class="line">     .peek(e -&gt; System.out.println(<span class="string">&quot;Mapped value: &quot;</span> + e))</span><br><span class="line">     .collect(Collectors.toList());</span><br><span class="line">     </span><br><span class="line">输出：</span><br><span class="line">Filtered value: three</span><br><span class="line">Mapped value: THREE</span><br><span class="line">Filtered value: four</span><br><span class="line">Mapped value: FOUR</span><br></pre></td></tr></table></figure>

<h2 id="limit-long-maxSize"><a href="#limit-long-maxSize" class="headerlink" title="limit(long maxSize)"></a>limit(long maxSize)</h2><p>limit方法会对流进行顺序截取，从第1个元素开始，保留最多maxSize个元素</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;String&gt; stringStream = Stream.of(<span class="string">&quot;-2&quot;</span>, <span class="string">&quot;-1&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br><span class="line"><span class="comment">//截取前3个元素，subStringStream -&gt; (&quot;-2&quot;, &quot;-1&quot;, &quot;0&quot;)</span></span><br><span class="line">Stream&lt;String&gt; subStringStream = stringStream.limit(<span class="number">3</span>);</span><br></pre></td></tr></table></figure>

<h2 id="skip-long-n"><a href="#skip-long-n" class="headerlink" title="skip(long n)"></a>skip(long n)</h2><p>skip方法用于跳过前n个元素，如果流中的元素数量不足n，则返回一个空的流</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;String&gt; stringStream = Stream.of(<span class="string">&quot;-2&quot;</span>, <span class="string">&quot;-1&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br><span class="line"><span class="comment">//跳过前3个元素，subStringStream -&gt; (&quot;1&quot;, &quot;2&quot;, &quot;3&quot;)</span></span><br><span class="line">Stream&lt;String&gt; subStringStream = stringStream.skip(<span class="number">3</span>);</span><br></pre></td></tr></table></figure>

<h2 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h2><p>forEach方法的作用跟普通的for循环类似，不过这个可以支持多线程遍历，但是不保证遍历的顺序</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;String&gt; stringStream = Stream.of(<span class="string">&quot;-2&quot;</span>, <span class="string">&quot;-1&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br><span class="line"><span class="comment">//单线程遍历输出元素</span></span><br><span class="line">stringStream.forEach(System.out::println);</span><br><span class="line"><span class="comment">//多线程遍历输出元素</span></span><br><span class="line">stringStream.parallel().forEach(System.out::println);</span><br></pre></td></tr></table></figure>

<h2 id="forEachOrdered"><a href="#forEachOrdered" class="headerlink" title="forEachOrdered"></a>forEachOrdered</h2><p>forEachOrdered方法可以保证顺序遍历，比如这个流是从外部传进来的，然后在这之前调用过parallel方法开启了多线程执行，就可以使用这个方法保证单线程顺序遍历</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;String&gt; stringStream = Stream.of(<span class="string">&quot;-2&quot;</span>, <span class="string">&quot;-1&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br><span class="line"><span class="comment">//顺序遍历输出元素</span></span><br><span class="line">stringStream.forEachOrdered(System.out::println);</span><br><span class="line"><span class="comment">//多线程遍历输出元素，下面这行跟上面的执行结果是一样的</span></span><br><span class="line"><span class="comment">//stringStream.parallel().forEachOrdered(System.out::println);</span></span><br></pre></td></tr></table></figure>

<h2 id="toArray"><a href="#toArray" class="headerlink" title="toArray"></a>toArray</h2><p>toArray有一个无参和一个有参的方法，无参方法用于把流中的元素转换成Object数组</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;String&gt; stringStream = Stream.of(<span class="string">&quot;-2&quot;</span>, <span class="string">&quot;-1&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br><span class="line">Object[] objArray = stringStream.toArray();</span><br></pre></td></tr></table></figure>

<p>有参方法toArray(IntFunction&lt;A[]&gt; generator)支持把流中的元素转换成指定类型的元素数组</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;String&gt; stringStream = Stream.of(<span class="string">&quot;-2&quot;</span>, <span class="string">&quot;-1&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br><span class="line">String[] strArray = stringStream.toArray(String[]::<span class="keyword">new</span>);</span><br></pre></td></tr></table></figure>

<h2 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h2><p>reduce有三个重载方法，作用是对流内元素做累进操作</p>
<p>第一个reduce(BinaryOperator<T> accumulator)</p>
<p>accumulator 为累进操作的具体计算</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; numStream = Stream.of(-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">//查找最小值</span></span><br><span class="line">Optional&lt;Integer&gt; min = numStream.reduce(BinaryOperator.minBy(Integer::compareTo));</span><br><span class="line"><span class="comment">//输出 -2</span></span><br><span class="line">System.out.println(min.get());</span><br><span class="line"></span><br><span class="line"><span class="comment">//过滤出大于5的元素流</span></span><br><span class="line">numStream = Stream.of(-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>).filter(num -&gt; num &gt; <span class="number">5</span>);</span><br><span class="line"><span class="comment">//查找最小值</span></span><br><span class="line">min = numStream.reduce(BinaryOperator.minBy(Integer::compareTo));</span><br><span class="line"><span class="comment">//输出 Optional.empty</span></span><br><span class="line">System.out.println(min);</span><br></pre></td></tr></table></figure>

<p>第二个reduce(T identity, BinaryOperator<T> accumulator)</p>
<p>identity 为累进操作的初始值<br>accumulator 同上</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; numStream = Stream.of(-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">//累加计算所有元素的和，sum=3</span></span><br><span class="line"><span class="keyword">int</span> sum = numStream.reduce(<span class="number">0</span>, Integer::sum);</span><br></pre></td></tr></table></figure>

<h2 id="collect"><a href="#collect" class="headerlink" title="collect"></a>collect</h2><p>主要作用是把流中的元素作为集合转换成其他Collection的子类，其内部实现类似于前面的累进操作</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; numStream = Stream.of(-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">List&lt;Integer&gt; numList = numStream.collect(Collectors.toList());</span><br><span class="line">Set&lt;Integer&gt; numSet = numStream.collect(Collectors.toSet());</span><br></pre></td></tr></table></figure>

<h2 id="min"><a href="#min" class="headerlink" title="min"></a>min</h2><p>min方法用于计算流内元素的最小值</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; numStream = Stream.of(-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">Optional&lt;Integer&gt; min = numStream.min(Integer::compareTo);</span><br></pre></td></tr></table></figure>

<h2 id="max"><a href="#max" class="headerlink" title="max"></a>max</h2><p>min方法用于计算流内元素的最大值</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; numStream = Stream.of(-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">Optional&lt;Integer&gt; max = numStream.max(Integer::compareTo);</span><br></pre></td></tr></table></figure>

<h2 id="count"><a href="#count" class="headerlink" title="count"></a>count</h2><p>count方法用于统计流内元素的总个数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; numStream = Stream.of(-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">//count=6</span></span><br><span class="line"><span class="keyword">long</span> count = numStream.count();</span><br></pre></td></tr></table></figure>

<h2 id="anyMatch"><a href="#anyMatch" class="headerlink" title="anyMatch"></a>anyMatch</h2><p>anyMatch方法用于匹配校验流内元素是否有符合指定条件的元素</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; numStream = Stream.of(-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">//判断是否包含正数，hasPositiveNum=true</span></span><br><span class="line"><span class="keyword">boolean</span> hasPositiveNum = numStream.anyMatch(num -&gt; num &gt; <span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<h2 id="allMatch"><a href="#allMatch" class="headerlink" title="allMatch"></a>allMatch</h2><p>noneMatch方法用于匹配校验流内元素是否都不符合指定条件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; numStream = Stream.of(-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">//判断是否没有小于0的元素，noNegativeNum=false</span></span><br><span class="line"><span class="keyword">boolean</span> noNegativeNum = numStream.noneMatch(num -&gt; num &lt; <span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<h2 id="findFirst"><a href="#findFirst" class="headerlink" title="findFirst"></a>findFirst</h2><p>findFirst方法用于获取第一个元素，如果流是空的，则返回Optional.empty</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; numStream = Stream.of(-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">//获取第一个元素，firstNum=-2</span></span><br><span class="line">Optional&lt;Integer&gt; firstNum = numStream.findFirst();</span><br></pre></td></tr></table></figure>

<h2 id="findAny"><a href="#findAny" class="headerlink" title="findAny"></a>findAny</h2><p>findAny方法用于获取流中的任意一个元素，如果流是空的，则返回Optional.empty，因为可能会使用多线程，所以不保证每次返回的是同一个元素</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Stream&lt;Integer&gt; numStream = Stream.of(-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">Optional&lt;Integer&gt; anyNum = numStream.findAny();</span><br></pre></td></tr></table></figure>

<h2 id="多属性过滤"><a href="#多属性过滤" class="headerlink" title="多属性过滤"></a>多属性过滤</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;SupplierEvaluationYear&gt; filter = supEvaluationYearList.stream()</span><br><span class="line">        .distinct()</span><br><span class="line">        .filter(e -&gt; !(supplierEvaluationYears.stream()</span><br><span class="line">                .map(y -&gt; y.getSupplierId() + <span class="string">&quot;:&quot;</span> + y.getPurchaseId() + <span class="string">&quot;:&quot;</span> + y.getProductType() + <span class="string">&quot;:&quot;</span> + y.getYear())</span><br><span class="line">                .collect(toList())</span><br><span class="line">                .contains(e.getSupplierId() + <span class="string">&quot;:&quot;</span> + e.getPurchaseId() + <span class="string">&quot;:&quot;</span> + e.getProductType() + <span class="string">&quot;:&quot;</span> + e.getYear())))</span><br><span class="line">        .collect(toList());</span><br></pre></td></tr></table></figure>

<h2 id="根据部门进行分组，并获取汇总人数"><a href="#根据部门进行分组，并获取汇总人数" class="headerlink" title="根据部门进行分组，并获取汇总人数"></a>根据部门进行分组，并获取汇总人数</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Map&lt;String, Long&gt; collect4 = inputForms.stream().collect(Collectors.groupingBy(InputForm::getCreateDeptName, Collectors.counting()));</span><br></pre></td></tr></table></figure>


<h2 id="拼接某个字段的值，可以设置前缀，后缀或者分隔符"><a href="#拼接某个字段的值，可以设置前缀，后缀或者分隔符" class="headerlink" title="拼接某个字段的值，可以设置前缀，后缀或者分隔符"></a>拼接某个字段的值，可以设置前缀，后缀或者分隔符</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String collect3 = inputForms.stream().map(InputForm::getCreateUserName).collect(Collectors.joining(<span class="string">&quot;,&quot;</span>, <span class="string">&quot;我是前缀&quot;</span>, <span class="string">&quot;我是后缀&quot;</span>));</span><br></pre></td></tr></table></figure>


<p>More info: <a href="https://segmentfault.com/a/1190000022791696">MartinDai</a></p>
]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot学习论坛系统</title>
    <url>/2022/05/22/Java%E5%AD%A6%E4%B9%A0%E8%AE%BA%E5%9D%9B%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot学习论坛系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>（1）用户的注册登录</p>
<p>（2）帖子的发布与评论</p>
<p>（3）前台不同学科帖子的分类与展示</p>
<p>（4）搜索功能，对于想要搜索的学科与具体帖子进行搜索</p>
<p>（5）基于用户喜欢的帖子的类型进行相关学科类别的帖子进行内容推荐</p>
<p>（6）用户对于自己帖子的管理</p>
<p>（7）用户对于自己喜欢的帖子点赞及收藏</p>
<p>（8）对敏感词汇的屏蔽处理</p>
<p>（9）管理员对用户帖子以及评论的管理</p>
<p>（10）管理员对于帖子的板块分类管理</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>test<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><p>暂无</p>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p><a href="https://www.bilibili.com/video/BV1RB4y1174A/">项目视频：基于Spring学习论坛系统</a></p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#x61;&#110;&#49;&#107;&#101;&#x32;&#x6b;&#x65;&#x40;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#x6d;">&#102;&#x61;&#110;&#49;&#107;&#101;&#x32;&#x6b;&#x65;&#x40;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的学生选课系统</title>
    <url>/2022/05/22/Java%E5%AD%A6%E7%94%9F%E9%80%89%E8%AF%BE%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的学生选课系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>教员，学生账号注册；管理员，教员，学生账号登陆，系统公告管理，系统动态管理，系统数据统计（学生统计，教员统计，课程统计， 缺席统计）</p>
<p>学生专业分布状况统计图，访问记录统计图，课程预约人数统计图，参加课程学生情况，学生选课信息，教员代课信息</p>
<p>管理员：课程管理，学生管理，教员管理，选课管理，系统用户管理，系统公告管理，系统动态管理，系统账户封禁</p>
<p>教员：教员信息管理，查看学生列表信息，教学任务管理，选课或停课，查看当前课程学生情况</p>
<p>学生：个人信息修改，课程预约，学生课程管理</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[教员]<br>test1<br>1234qwer</p>
<p>[学生]<br>fkkk<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><p>暂无</p>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p><a href="https://www.bilibili.com/video/BV1ui4y1Q7oS/">项目视频：基于Spring的学生选课系统</a></p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#x61;&#110;&#49;&#107;&#101;&#50;&#x6b;&#101;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;">&#102;&#x61;&#110;&#49;&#107;&#101;&#50;&#x6b;&#101;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的实验室耗材管理系统</title>
    <url>/2022/05/22/Java%E5%AE%9E%E9%AA%8C%E5%AE%A4%E8%80%97%E6%9D%90%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的实验室耗材管理系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>学生管理，套餐管理，申请记录，库房管理，入库记录，出库记录，采购计划，报表统计，耗材类别，出入库物品明细</p>
<p>学生制定申请耗材-&gt;管理员审批制定采购计划-&gt;采购员采购-&gt;入库-&gt;出库</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[采购员]<br>caigou<br>1234qwer</p>
<p>[学生]<br>lisi<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><p>暂无</p>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p><a href="https://www.bilibili.com/video/BV1y94y1f783/">项目视频：基于Spring的实验室耗材管理系统</a></p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#x6e;&#x31;&#107;&#101;&#50;&#107;&#x65;&#x40;&#103;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#109;">&#x66;&#x61;&#x6e;&#x31;&#107;&#101;&#50;&#107;&#x65;&#x40;&#103;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的小区物业管理系统</title>
    <url>/2022/05/22/Java%E5%B0%8F%E5%8C%BA%E7%89%A9%E4%B8%9A%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的小区物业管理系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>1、实现小区信息管理（包括业主信息，楼宇信息，房间信息的管理，业主数量统计，房间数量统计（包括无人居住房与居住））；<br>2、实现物业费用缴纳管理（水电煤气清洁电梯停车位物业管理等费用数据管理，能够生成物业缴费的信息报表，缴费记录管理）；<br>3、物业项管理（包括水，电，煤气，清洁，消防，停车位等信息的管理）；<br>4、物业抄表入库管理（包括根据不同物业项以及业主的统计生成物业报表并将报表入库）；<br>5、业主日常管理（包括业主投诉，维修上报，业主评论及建议）；<br>6、物业抄表入库管理（包括根据不同物业项以及业主的统计生成物业报表并将报表入库）；<br>7、防疫登记管理（包括体温，健康码情况，进入时间以及地点）；<br>8、工作人员管理（包括管理员信息，管理人员权限，物业工作人员信息）；<br>9、公告管理（管理人员对相关的物业信息给予公告，包括停电停水暖气等相关信息）。</p>
<p>还有就是人脸识别  百度人工智能云的sdk<br>以及一个梯度上升算法，<br>支付的话用支付宝的沙箱，</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[业主]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683869976647.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683870102442.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683869959954.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683870083299.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683869945143.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683870057559.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683869930483.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683870036434.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683869919340.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683870025857.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683869893832.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683870016187.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683869994451.png"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p><a href="https://www.bilibili.com/video/BV1yu411v7oZ/">项目视频：基于Spring的小区物业管理系统</a></p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#110;&#49;&#x6b;&#101;&#50;&#x6b;&#101;&#x40;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;">&#x66;&#x61;&#110;&#49;&#x6b;&#101;&#50;&#x6b;&#101;&#x40;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的旅游住宿小程序</title>
    <url>/2022/05/22/Java%E6%97%85%E6%B8%B8%E4%BD%8F%E5%AE%BF%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<p>基于SpringBoot的旅游住宿小程序.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>百度地图JS<br>微信小程序</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>实现权限的分布控制，如管理员和民宿管理员，二则所能够操作的权限有质的区别。</p>
<p>实现控制前端页面的导航展示(添加，修改，删除，查询)。</p>
<p>实现景点的发布(添加，修改，删除，查询)。</p>
<p>实现旅游攻略的发布(添加，修改，删除，查询)。</p>
<p>实现民宿预定(添加，修改，删除，查询)。</p>
<p>实现民宿房间管理(添加，修改，删除，查询)。</p>
<p>订单统计，订单评价</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[民宿管理员]<br>xierdun<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><p>暂无</p>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p><a href="https://www.bilibili.com/video/BV1S94y1f7Dg/">项目视频：基于Spring的旅游住宿小程序</a></p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#97;&#110;&#49;&#x6b;&#x65;&#50;&#107;&#101;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#x63;&#111;&#x6d;">&#x66;&#97;&#110;&#49;&#x6b;&#x65;&#50;&#107;&#101;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#x63;&#111;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的小程序商城</title>
    <url>/2022/05/22/Java%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%95%86%E5%9F%8E/</url>
    <content><![CDATA[<p>基于SpringBoot的小程序商城.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>管理员数据统计，管理员设计师审核，商品管理，设计师管理，订单管理，订单评价，公告信息管理，论坛管理，论坛回复，用户与设计师消息通知，用户收货地址管理</p>
<p>用户申请设计师，用户订单添加购物车，订单付款评价，论坛消息回复，收货地址新增修改，修改商品信息</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 用户登陆注册</span></span><br><span class="line">String openid = JSON.parseObject(res).get(<span class="string">&quot;openid&quot;</span>).toString();</span><br><span class="line">System.out.println(<span class="string">&quot;openid&quot;</span> + openid);</span><br><span class="line">Integer count = userInfoService.count(Wrappers.&lt;UserInfo&gt;lambdaQuery().eq(UserInfo::getOpenId, openid));</span><br><span class="line"><span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> R.ok(userInfoService.getOne(Wrappers.&lt;UserInfo&gt;lambdaQuery().eq(UserInfo::getOpenId, openid)));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    user.setOpenId(openid);</span><br><span class="line">    user.setCreateDate(DateUtil.formatDateTime(<span class="keyword">new</span> Date()));</span><br><span class="line">    user.setCode(<span class="string">&quot;U-&quot;</span>+<span class="keyword">new</span> Date().getTime());</span><br><span class="line">    user.setType(<span class="number">1</span>);</span><br><span class="line">    userInfoService.save(user);</span><br><span class="line">    <span class="keyword">return</span> R.ok(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 查找聊天信息</span></span><br><span class="line"><span class="keyword">if</span> (takeUser == userId) &#123;</span><br><span class="line">    messageInfoService.update(Wrappers.&lt;MessageInfo&gt;lambdaUpdate().set(MessageInfo::getTaskStatus, <span class="number">1</span>)</span><br><span class="line">            .eq(MessageInfo::getTakeUser, takeUser).eq(MessageInfo::getSendUser, sendUser));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    messageInfoService.update(Wrappers.&lt;MessageInfo&gt;lambdaUpdate().set(MessageInfo::getTaskStatus, <span class="number">1</span>)</span><br><span class="line">            .eq(MessageInfo::getTakeUser, sendUser).eq(MessageInfo::getSendUser, takeUser));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> R.ok(messageInfoService.getMessageDetail(takeUser, sendUser));</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 订单统计</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">DATE_FORMAT( spo.days, <span class="string">&#x27;%m-%d&#x27;</span> ) <span class="keyword">AS</span> days,</span><br><span class="line"><span class="built_in">COUNT</span>( oi.`code` ) <span class="keyword">AS</span> count,</span><br><span class="line">IFNULL( <span class="built_in">SUM</span>( oi.price ), <span class="number">0</span> ) <span class="keyword">AS</span> orderPrice</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    DATE_SUB( curdate(), <span class="type">INTERVAL</span> <span class="operator">+</span> <span class="number">0</span> <span class="keyword">DAY</span> ) days <span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    DATE_SUB( curdate(), <span class="type">INTERVAL</span> <span class="operator">+</span> <span class="number">1</span> <span class="keyword">DAY</span> ) <span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    DATE_SUB( curdate(), <span class="type">INTERVAL</span> <span class="operator">+</span> <span class="number">2</span> <span class="keyword">DAY</span> ) <span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    DATE_SUB( curdate(), <span class="type">INTERVAL</span> <span class="operator">+</span> <span class="number">3</span> <span class="keyword">DAY</span> ) <span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    DATE_SUB( curdate(), <span class="type">INTERVAL</span> <span class="operator">+</span> <span class="number">4</span> <span class="keyword">DAY</span> ) <span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    DATE_SUB( curdate(), <span class="type">INTERVAL</span> <span class="operator">+</span> <span class="number">5</span> <span class="keyword">DAY</span> ) <span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">DATE_SUB( curdate(), <span class="type">INTERVAL</span> <span class="operator">+</span> <span class="number">6</span> <span class="keyword">DAY</span> )) spo</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> order_info oi <span class="keyword">ON</span> (</span><br><span class="line">DATE_FORMAT( oi.create_date, <span class="string">&#x27;%Y-%m-%d&#x27;</span> ) <span class="operator">=</span> DATE_FORMAT( spo.days, <span class="string">&#x27;%Y-%m-%d&#x27;</span> ))</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">days</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> days <span class="keyword">ASC</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 根据商铺获取订单统计</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="built_in">COUNT</span>( <span class="number">1</span> ) <span class="keyword">AS</span> orderNum,</span><br><span class="line">IFNULL( <span class="built_in">SUM</span>( oi.price ), <span class="number">0</span> ) <span class="keyword">AS</span> orderPrice,</span><br><span class="line">ui.avatar,</span><br><span class="line">ui.user_name,</span><br><span class="line">si.tag,</span><br><span class="line">si.introduction</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">order_info oi</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> commodity_info ci <span class="keyword">ON</span> ( ci.id <span class="operator">=</span> oi.commodity_id )</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> shop_info si <span class="keyword">ON</span> ( si.id <span class="operator">=</span> ci.shop_id )</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> user_info ui <span class="keyword">ON</span> ( ui.id <span class="operator">=</span> si.user_id )</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line"><span class="number">1</span> <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">si.id</span><br></pre></td></tr></table></figure>


<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 本月收益占比</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="built_in">COUNT</span>( oi.commodity_id ) <span class="keyword">AS</span> orderNum,</span><br><span class="line">IFNULL( <span class="built_in">SUM</span>( oi.price ), <span class="number">0</span> ) <span class="keyword">AS</span> orderPrice,</span><br><span class="line">ci.`name`</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">order_info oi</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> commodity_info ci <span class="keyword">ON</span> ( ci.id <span class="operator">=</span> oi.commodity_id )</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line"><span class="number">1</span> <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">AND</span> DATE_FORMAT( oi.create_date, <span class="string">&#x27;%Y-%m&#x27;</span> ) <span class="operator">=</span> DATE_FORMAT( NOW(), <span class="string">&#x27;%Y-%m&#x27;</span> )</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">oi.commodity_id</span><br></pre></td></tr></table></figure>

<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><p>暂无</p>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p><a href="https://www.bilibili.com/video/BV1dP4y1N7wp/">项目视频：基于Spring小程序商城</a></p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#x61;&#110;&#49;&#x6b;&#x65;&#x32;&#x6b;&#x65;&#64;&#x67;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#109;">&#102;&#x61;&#110;&#49;&#x6b;&#x65;&#x32;&#x6b;&#x65;&#64;&#x67;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>桶装水配送小程序和管理平台</title>
    <url>/2022/05/22/Java%E6%A1%B6%E8%A3%85%E6%B0%B4%E9%85%8D%E9%80%81%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<p>桶装水配送小程序和管理平台.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>微信小程序</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>管理员：账户登陆， 密码修改，订单收益，订单量统计，待发货商品统计，月统计订单量，月统计交易额，用户收货地址管理，公告信息管理，订单评价管理，用户订单管理，商品信息管理，消息回复，用户购物车，商铺管理，小程序用户管理</p>
<p>用户：小程序授权登陆，商铺搜索，商品查询，添加购物车，查看公告信息，商品下单，订单评价，收货地址管理</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><p>暂无</p>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p><a href="https://www.bilibili.com/video/BV1k5411R7RF/">项目视频：桶装水配送小程序</a></p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#97;&#x6e;&#x31;&#107;&#x65;&#50;&#x6b;&#101;&#x40;&#x67;&#109;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;">&#102;&#97;&#x6e;&#x31;&#107;&#x65;&#50;&#x6b;&#101;&#x40;&#x67;&#109;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>谷粒商城-微服务架构划分</title>
    <url>/2022/05/23/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E5%88%92%E5%88%86/</url>
    <content><![CDATA[<h2 id="分布式基础概念"><a href="#分布式基础概念" class="headerlink" title="分布式基础概念"></a>分布式基础概念</h2><p>集群是个物理形态，分布式是个工作方式。</p>
<p>远程调用：在分布式系统中，各个服务可能处于不同主机，但是服务之间不可避免的相互调用，我们成为远程调用</p>
<p>springcloud中使用HTTP+JSON的方式完成远程调用</p>
<h3 id="服务注册-发现-amp-注册中心"><a href="#服务注册-发现-amp-注册中心" class="headerlink" title="服务注册/发现&amp;注册中心"></a>服务注册/发现&amp;注册中心</h3><p>A服务调用B服务，A服务并不知道B服务当前在哪几台服务器有，那些是正常的，那些服务已经下线。解决这个问题可以引入注册中心。</p>
<p>配置中心用来几种管理微服务的配置信息。</p>
<h3 id="服务熔断-amp-服务降级"><a href="#服务熔断-amp-服务降级" class="headerlink" title="服务熔断&amp;服务降级"></a>服务熔断&amp;服务降级</h3><p>在微服务架构中，微服务之间通过网络进行通信，存在相互依赖，当其中一个服务不可用时，有可能会造成雪崩效应。要防止这样的情况，必须要有容错机制来保护服务。</p>
<p>rpc远程调用情景：</p>
<p>订单服务 –&gt; 商品服务 –&gt; 库存服务</p>
<p>库存服务出现故障导致响应慢，导致商品服务需要等待，可能等到10s后库存服务才能响应。库存服务的不可用导致商品服务阻塞，商品服务等的期间，订单服务也处于阻塞。一个服务不可用导致整个服务链都阻塞。如果是高并发，第一个请求调用后阻塞10s得不到结果，第二个请求直接阻塞10s。更多的请求进来导致请求积压，全部阻塞，最终服务器的资源耗尽。导致雪崩</p>
<p>解决方案：</p>
<ol>
<li>服务熔断</li>
</ol>
<p>指定超时时间，库存服务3s没有响应就超时，如果经常失败，比如10s内100个请求都失败了。开启断路保护机制，下一次请求进来不调用库存服务了，因为上一次100%错误都出现了，我们直接在此中断，商品服务直接返回，返回一些默认数据或者null，而不调用库存服务了，这样就不会导致请求积压。</p>
<p>设置服务的超时，当被调用的服务经常失败到达某个阈值，我们可以开启断路保护机制，后来的请求不再去调用这个服务。本地直接返回默认的数据</p>
<ol start="2">
<li>服务降级</li>
</ol>
<p>在运维期间，当系统处于高峰期，系统资源紧张，我们可以让非核心业务降级运行。降级：某些服务不处理，或者处理简单【抛异常、返回NULL、调用Mock数据、调用Fallback处理逻辑】</p>
<h3 id="API网关"><a href="#API网关" class="headerlink" title="API网关"></a>API网关</h3><p>客户端发送请求到服务器路途中，设置一个网关，请求都先到达网关，网关对请求进行统一认证（合法非法）和处理等操作。他是安检。</p>
<p>在微服务架构中，API gateway作为整体架构的重要组件，它抽象了微服务中都需要的公共功能，同时提供了客户端负载均衡，服务自动熔断，灰度发布，统一认证，限流流控，日志统计等丰富的功能，帮助我们解决很多API管理难题。</p>
<p><a href="https://img-blog.csdnimg.cn/img_convert/b3a972ccdb5aa17ffaa4a443542032f0.png"><img src="https://img-blog.csdnimg.cn/img_convert/b3a972ccdb5aa17ffaa4a443542032f0.png" alt="OIVagf.png"></a></p>
<p>前后分离开发，分为内网部署和外网部署，外网是面向公众访问的，部署前端项目，可以有手机APP，电脑网页；内网部署的是后端集群，前端在页面上操作发送请求到后端，在这途中会经过Nginx集群，Nginx把请求转交给API网关(springcloud gateway)（网关可以根据当前请求动态地路由到指定的服务，看当前请求是想调用商品服务还是购物车服务还是检索），从路由过来如果请求很多，可以负载均衡地调用商品服务器中一台（商品服务复制了多份），当商品服务器出现问题也可以在网关层面对服务进行熔断或降级（使用阿里的sentinel组件），网关还有其他的功能如认证授权、限流（只放行部分到服务器）等。</p>
<p>到达服务器后进行处理（springboot为微服务），服务与服务可能会相互调用（使用OpenFeign组件），有些请求可能经过登录才能进行（基于OAuth2.0的认证中心。安全和权限使用springSecurity控制）</p>
<p>服务可能保存了一些数据或者需要使用缓存，我们使用redis集群（分片+哨兵集群）。持久化使用mysql，读写分离和分库分表。</p>
<p>服务和服务之间会使用消息队列（RabbitMQ），来完成异步解耦，分布式事务的一致性。有些服务可能需要全文检索，检索商品信息，使用ElaticSearch。</p>
<p>服务可能需要存取数据，使用阿里云的对象存储服务OSS。</p>
<p>项目上线后为了快速定位问题，使用ELK对日志进行处理，使用LogStash收集业务里的各种日志，把日志存储到ES中，用Kibana可视化页面从ES中检索出相关信息，帮助我们快速定位问题所在。</p>
<p>在分布式系统中，由于我们每个服务都可能部署在很多台机器，服务和服务可能相互调用，就得知道彼此都在哪里，所以需要将所有服务都注册到注册中心。服务从注册中心发现其他服务所在位置（使用阿里Nacos作为注册中心）。</p>
<p>每个服务的配置众多，为了实现改一处配置相同配置就同步更改，就需要配置中心，也使用阿里的Nacos，服务从配置中心中动态取配置。</p>
<p>服务追踪，追踪服务调用链哪里出现问题，使用springcloud提供的Sleuth、Zipkin、Metrics，把每个服务的信息交给开源的Prometheus进行聚合分析，再由Grafana进行可视化展示，提供Prometheus提供的AlterManager实时得到服务的告警信息，以短信/邮件的方式告知服务开发人员。</p>
<p>还提供了持续集成和持续部署。项目发布起来后，因为微服务众多，每一个都打包部署到服务器太麻烦，有了持续集成后开发人员可以将修改后的代码提交到github，运维人员可以通过自动化工具Jenkins Pipeline将github中获取的代码打包成docker镜像，最终是由k8s集成docker服务，将服务以docker容器的方式运行。</p>
<h3 id="相关功能技术"><a href="#相关功能技术" class="headerlink" title="相关功能技术"></a>相关功能技术</h3><ul>
<li>商品服务：商品的增删改查、商品的上下架、商品详情</li>
<li>支付服务</li>
<li>优惠服务</li>
<li>用户服务：用户的个人中心、收货地址</li>
<li>仓储服务：商品的库存</li>
<li>秒杀服务：定时任务与redis</li>
<li>订单服务：订单增删改查、验价、幂等性token</li>
<li>检索服务：商品的检索ES</li>
<li>中央认证服务：登录、注册、单点登录、社交登录</li>
<li>购物车服务：redis</li>
<li>后台管理系统：添加优惠信息等</li>
</ul>
]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>关于最近的一些选择</title>
    <url>/2022/05/23/%E5%85%B3%E4%BA%8E%E6%9C%80%E8%BF%91%E7%9A%84%E4%B8%80%E4%BA%9B%E9%80%89%E6%8B%A9/</url>
    <content><![CDATA[<h2 id="卷土重来"><a href="#卷土重来" class="headerlink" title="卷土重来"></a>卷土重来</h2><p>2021年十月，我向上家公司提交了离职申请，在11月份正式离职。在家的很长时间都是自己一个人，计划的被打乱，唯一一件正事“驾照到手”。在家呆了四个月…</p>
<p>从今年二月底来到北京后，好兄弟陆陆续续给我介绍了几个毕设的定制项目，总共加起来也有两千多块钱</p>
<p>准备加紧做项目平台，但最近很不顺利。</p>
<ol>
<li><p>从四月七号入职开始，这家公司的加班算是严重，每天晚上都得九点左右到家，下班后的个人自由时间被排的满满的</p>
</li>
<li><p>28号晚上下班回来，鸿博家园一期B区发现一例阳性，目前隔离到现在已经持续一个月</p>
</li>
<li><p>入职这家公司后，我开始觉得自己是不是不适合做程序员这一行业</p>
</li>
</ol>
<p>对于今年找到的这份工作，我觉得自己很幸运，本身对自己的期望并没有那么高</p>
<h2 id="之后打算"><a href="#之后打算" class="headerlink" title="之后打算"></a>之后打算</h2><p>项目平台搁置到八月，最近一段时间准备好好卷卷尚硅谷的课程</p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>基于VisualBox的Linux环境搭建</title>
    <url>/2022/05/24/%E5%9F%BA%E4%BA%8EVisualBox%E7%9A%84Linux%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p><code>VisualBox进行安装需要cpu开启虚拟化，在开机启动的时候设置主板，CPU configuration，然后点击Intel Vitualization Technology。重启电脑</code></p>
<h2 id="Linux镜像"><a href="#Linux镜像" class="headerlink" title="Linux镜像"></a>Linux镜像</h2><p>普通安装linux虚拟机太麻烦，可以利用vagrant可以帮助我们快速地创建一个虚拟机。装了vitualbox，vagrant可以帮助我们快速创建出一个虚拟机</p>
<p>去<a href="https://www.vagrantup.com/">https://www.vagrantup.com/</a> 下载vagrant安装，安装后重启系统。cmd中输入vagrant有版本代表成功了</p>
<p>输入<code>vagrant init centos/7</code>，即可初始化一个centos7系统。（注意这个命令在哪个目录下执行的，他的Vagrantfile就生成在哪里）</p>
<p>输入<code>vagrant up</code>启动虚拟机环境</p>
<p>启动后出现default folder:/cygdrive/c/User/… =&gt;/vagrant</p>
<p>vagrant ssh 就会连上虚拟机。可以使用exit退出</p>
<p>下次使用也可以直接vagrant up直接启动，但要确保当前目录在C:/用户/ 文件夹下，他下面有一个Vagrantfile，不过我们也可以配置环境变量。</p>
<p>启动后再次vagrant ssh连上即可</p>
<h2 id="虚拟机IP地址"><a href="#虚拟机IP地址" class="headerlink" title="虚拟机IP地址"></a>虚拟机IP地址</h2><p>使用的网络方式是网络地址转换NAT（端口转发），如果其他主机要访问虚拟机，必须由windows端口如3333断发给虚拟机端口如3306。这样每在linux里安一个软件都要进行端口映射，不方便，（也可以在virualBox里挨个设置）。我们想要给虚拟机一个固定的ip地址，windows和虚拟机可以互相ping通。</p>
<ol>
<li>在虚拟机中配置静态IP</li>
</ol>
<h2 id="添加账户密码"><a href="#添加账户密码" class="headerlink" title="添加账户密码"></a>添加账户密码</h2><p>默认只允许ssh登录方式，为了后来操作方便，文件上传等，我们可以配置允许账号密码登录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">修改</span><br><span class="line">PasswordAuthentication yes</span><br><span class="line">重启</span><br><span class="line">service sshd restart</span><br><span class="line">账号root</span><br><span class="line">密码vagrant</span><br></pre></td></tr></table></figure>

<h2 id="配置YUM源"><a href="#配置YUM源" class="headerlink" title="配置YUM源"></a>配置YUM源</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 备份原yum源</span></span><br><span class="line"></span><br><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line"><span class="comment"># 使用新yum源</span></span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.<span class="built_in">help</span>/CentOS7-Base-163.repo</span><br><span class="line"><span class="comment"># 生成缓存</span></span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>

<h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p><code>https://docs.docker.com/engine/install/centos/</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#卸载系统之前的docker </span></span><br><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br><span class="line">                  </span><br><span class="line">                  </span><br><span class="line">sudo yum install -y yum-utils</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置镜像</span></span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">    </span><br><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br><span class="line"></span><br><span class="line">sudo systemctl start docker</span><br><span class="line"><span class="comment"># 设置开机自启动</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line">docker -v</span><br><span class="line">sudo docker images</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="配置镜像加速"><a href="#配置镜像加速" class="headerlink" title="配置镜像加速"></a>配置镜像加速</h3><p>目前主流 Linux 发行版均已使用 systemd 进行服务管理，这里介绍如何在使用 systemd 的 Linux 发行版中配置镜像加速器。</p>
<p>请首先执行以下命令，查看是否在 docker.service 文件中配置过镜像地址</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">systemctl cat docker | grep <span class="string">&#x27;\-\-registry\-mirror&#x27;</span></span><br></pre></td></tr></table></figure>

<p>如果该命令有输出，那么请执行 $ systemctl cat docker 查看 ExecStart= 出现的位置，修改对应的文件内容去掉 –registry-mirror 参数及其值，并按接下来的步骤进行配置</p>
<p>如果以上命令没有任何输出，那么就可以在 /etc/docker/daemon.json 中写入如下内容（如果文件不存在请新建该文件）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;https://hub-mirror.c.163.com&quot;,</span><br><span class="line">    &quot;https://mirror.baidubce.com&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>之后重新启动服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>

<p>检查加速器是否生效</p>
<p>执行 $ docker info，如果从结果中看到了如下内容，说明配置成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Registry Mirrors:</span><br><span class="line"> https://hub-mirror.c.163.com/</span><br></pre></td></tr></table></figure>

<h2 id="安装mysql-docker"><a href="#安装mysql-docker" class="headerlink" title="安装mysql-docker"></a>安装mysql-docker</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo docker pull mysql:5.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># --name指定容器名字 -v目录挂载 -p指定端口映射  -e设置mysql参数 -d后台运行</span></span><br><span class="line">sudo docker run -p 3306:3306 --name mysql \</span><br><span class="line">-v /mydata/mysql/<span class="built_in">log</span>:/var/<span class="built_in">log</span>/mysql \</span><br><span class="line">-v /mydata/mysql/data:/var/lib/mysql \</span><br><span class="line">-v /mydata/mysql/conf:/etc/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=root \</span><br><span class="line">-d mysql:5.7</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入已启动的容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mysql bin/bash</span><br><span class="line"><span class="comment"># 退出进入的容器</span></span><br><span class="line"><span class="built_in">exit</span>;</span><br><span class="line"></span><br><span class="line">因为有目录映射，所以我们可以直接在镜像外执行</span><br><span class="line">vi /mydata/mysql/conf/my.conf </span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br><span class="line">[mysqld]</span><br><span class="line">init_connect=<span class="string">&#x27;SET collation_connection = utf8_unicode_ci&#x27;</span></span><br><span class="line">init_connect=<span class="string">&#x27;SET NAMES utf8&#x27;</span></span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_unicode_ci</span><br><span class="line">skip-character-set-client-handshake</span><br><span class="line">skip-name-resolve</span><br><span class="line"></span><br><span class="line">docker restart mysql</span><br></pre></td></tr></table></figure>

<h2 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h2><p>如果直接挂载的话docker会以为挂载的是一个目录，所以我们先创建一个文件然后再挂载，在虚拟机中</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在虚拟机中</span></span><br><span class="line">mkdir -p /mydata/redis/conf</span><br><span class="line">touch /mydata/redis/conf/redis.conf</span><br><span class="line"></span><br><span class="line">docker pull redis</span><br><span class="line"></span><br><span class="line">docker run -p 6379:6379 --name redis \</span><br><span class="line">-v /mydata/redis/data:/data \</span><br><span class="line">-v /mydata/redis/conf/redis.conf:/etc/redis/redis.conf \</span><br><span class="line">-d redis redis-server /etc/redis/redis.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接进去redis客户端。</span></span><br><span class="line">docker <span class="built_in">exec</span> -it redis redis-cli</span><br></pre></td></tr></table></figure>

<p>默认是不持久化的。在配置文件中输入appendonly yes，就可以aof持久化了。修改完docker restart redis，docker -it redis redis-cli</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">vim /mydata/redis/conf/redis.conf</span><br><span class="line"><span class="comment"># 插入下面内容</span></span><br><span class="line">appendonly yes</span><br><span class="line">保存</span><br><span class="line"></span><br><span class="line">docker restart redis</span><br></pre></td></tr></table></figure>

<p>设置redis容器在docker启动的时候启动</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker update redis --restart=always</span><br></pre></td></tr></table></figure>

<h2 id="安装nginx-docker"><a href="#安装nginx-docker" class="headerlink" title="安装nginx docker"></a>安装nginx docker</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull nginx:1.10</span><br><span class="line"><span class="comment"># 随便启动一个nginx实例，只是为了复制出配置，放到docker里作为镜像的统一配置</span></span><br><span class="line">docker run -p 80:80 --name nginx -d nginx:1.10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把nginx里的东西复制出来</span></span><br><span class="line"><span class="built_in">cd</span> /mydata/nginx</span><br><span class="line">docker container cp nginx:/etc/nginx .</span><br><span class="line">然后在外部 /mydata/nginx/nginx 有了一堆文件</span><br><span class="line">mv /mydata/nginx/nginx /mydata/nginx/conf</span><br><span class="line"><span class="comment"># 停掉nginx</span></span><br><span class="line">docker stop nginx</span><br><span class="line">docker rm nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新的nginx，使用刚才复制出来的配置文件</span></span><br><span class="line">docker run -p 80:80 --name nginx \</span><br><span class="line">-v /mydata/nginx/html:/usr/share/nginx/html \</span><br><span class="line">-v /mydata/nginx/logs:/var/<span class="built_in">log</span>/nginx \</span><br><span class="line">-v /mydata/nginx/conf:/etc/nginx \</span><br><span class="line">-d nginx:1.10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意一下这个路径映射到了/usr/share/nginx/html，我们在nginx配置文件中是写/usr/share/nginx/html，不是写/mydata/nginx/html</span></span><br><span class="line"></span><br><span class="line">docker update nginx --restart=always</span><br></pre></td></tr></table></figure>

<p>测试</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /mydata/nginx/html/</span><br><span class="line">vim index.html</span><br><span class="line">随便写写</span><br><span class="line">测试 http://192.168.56.10:80</span><br></pre></td></tr></table></figure>

<h2 id="如何通过其他工具链接ssh"><a href="#如何通过其他工具链接ssh" class="headerlink" title="如何通过其他工具链接ssh"></a>如何通过其他工具链接ssh</h2><p>修改/etc/ssh/sshd_config</p>
<p>修改 PasswordAuthentication yes</p>
<p>systemctl restart sshd.service 或 service sshd restart</p>
<p>连接192.168.56.10:22端口成功，用户名root，密码vagrant</p>
<p>也可以通过vagrant ssh-config查看ip和端口，此时是127.0.0.1:2222</p>
]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>突然感觉压力好大</title>
    <url>/2022/05/26/%E7%AA%81%E7%84%B6%E6%84%9F%E8%A7%89%E5%8E%8B%E5%8A%9B%E5%A5%BD%E5%A4%A7/</url>
    <content><![CDATA[<p>最近一直在家办公，每天都要和同事互通电话，昨晚甚至做梦梦到同事给我发微信消息</p>
<p>压力当然不一定是成长的动力</p>
<p>至少尼采说过这么一句话</p>
<blockquote>
<p>杀不死我的，让我更加强大</p>
</blockquote>
<p>这句话说的很有道理，如果压力过大以至于让你无暇他顾，严重损害了你的身体健康，甚至由于过劳而死，那很显然这不是什么好事情</p>
<p>我感觉压力是否能变成动力，除了不能过于强，还有就是取决于这个人的心态，如果他把压力看作成挑战，那么就容易成为动力，如果他总是充满了埋怨，那么就只能是折磨</p>
<p>心里很乱，不过也没有抱怨任何人，只是一时的负面情绪作祟，我想应该有部分人有这样的经历，在某个时间因为不经意的一句话或者一件很小的事突然引爆内心的负面情绪</p>
<p>最快乐的时光是刚毕业那两年，穷但是快乐，但是回想这一段经历，其实每个阶段都有各自的开心和烦恼</p>
<p>我知道你最近很累，是那种看不见的，身体上和精神上的疲惫感，但是请你一定要坚持下去。就算无人问津也<br>好，技不如人也罢，千万别让烦恼和焦虑毁了你本就不多的热情和定力。别贪心，我们不可能什么都有，别担<br>心，我们也不可能什么都没有。</p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>本年答辩通过率100%</title>
    <url>/2022/05/25/%E9%A1%B9%E7%9B%AE%E4%BA%A4%E6%98%93%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<img src="https://s1.ax1x.com/2022/05/26/XA5QsI.jpg" alt="XE8dIg.jpg" border="0" height="100"/>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote>
<p><a href="https://www.zhihu.com/question/31020988">计算机毕设答辩时都会问到哪些问题？</a></p>
</blockquote>
<blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/145911029">计算机专业毕业答辩小tips</a></p>
</blockquote>
<h2 id="现场提问"><a href="#现场提问" class="headerlink" title="现场提问"></a>现场提问</h2><p>首先一定是问你毕业设计的课题或者系统相关的问题，所以只要毕设是你自己做的，一般不会有问题的。一定要做到对课题或者系统做到熟悉，了如指掌，当老师让你展示某个部分的内容时要能及时准确的展示，并作出相关的讲解，给大家分享一些可能会问的问题，大家可以结合自己的项目试着回答一下</p>
<p><code>一定要注意不会不要瞎回答，诚实点，偶尔一个问题不会不影响什么的</code></p>
<ol>
<li>你这个系统所用到的新技术，它的优缺点，特点是什么？</li>
<li>你的论文价值是什么？</li>
<li>你数据库整体的设计是怎么样的？</li>
<li>某个表，某个字段作用是什么？</li>
<li>你系统核心功能怎么实现？</li>
<li>你的文献综述是如何形成的？</li>
<li>你整个系统的优缺点是什么?</li>
<li>功能还有什么地方需要完善?</li>
<li>你系统的整体设计是怎么样？</li>
<li>你系统用了什么技术,这些技术应用的好处是什么？</li>
<li>你的毕业论文进行的研究方法是什么？</li>
<li>你为什么要选这个题目，你对这个题目怎么理解的？</li>
<li>数据库的一些基础知识，三大范式是什么？</li>
<li>时序图，ER图你是怎么画的，有什么要注意的？</li>
</ol>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://imgtu.com/i/XA5MQA"><img src="https://s1.ax1x.com/2022/05/26/XA5MQA.jpg" alt="XA5MQA.jpg"></a></td>
<td><a href="https://imgtu.com/i/XA5uzd"><img src="https://s1.ax1x.com/2022/05/26/XA5uzd.jpg" alt="XA5uzd.jpg"></a></td>
</tr>
<tr>
<td><a href="https://imgtu.com/i/XA5nRH"><img src="https://s1.ax1x.com/2022/05/26/XA5nRH.jpg" alt="XA5nRH.jpg"></a></td>
<td><a href="https://imgtu.com/i/XA5mJe"><img src="https://s1.ax1x.com/2022/05/26/XA5mJe.jpg" alt="XA5mJe.jpg"></a></td>
</tr>
<tr>
<td><a href="https://imgtu.com/i/XA5eiD"><img src="https://s1.ax1x.com/2022/05/26/XA5eiD.jpg" alt="XA5eiD.jpg"></a></td>
<td><a href="https://imgtu.com/i/XA58df"><img src="https://s1.ax1x.com/2022/05/26/XA58df.jpg" alt="XA58df.jpg"></a></td>
</tr>
<tr>
<td><a href="https://imgtu.com/i/XA5lLt"><img src="https://s1.ax1x.com/2022/05/26/XA5lLt.jpg" alt="XA5lLt.jpg"></a></td>
<td><a href="https://imgtu.com/i/XA5Go8"><img src="https://s1.ax1x.com/2022/05/26/XA5Go8.jpg" alt="XA5Go8.jpg"></a></td>
</tr>
<tr>
<td><a href="https://imgtu.com/i/XA53eP"><img src="https://s1.ax1x.com/2022/05/26/XA53eP.jpg" alt="XA53eP.jpg"></a></td>
<td><a href="https://imgtu.com/i/XA5YFS"><img src="https://s1.ax1x.com/2022/05/26/XA5YFS.jpg" alt="XA5YFS.jpg"></a></td>
</tr>
<tr>
<td><a href="https://imgtu.com/i/XA5tJg"><img src="https://s1.ax1x.com/2022/05/26/XA5tJg.jpg" alt="XA5tJg.jpg"></a></td>
<td><a href="https://imgtu.com/i/XA5NWQ"><img src="https://s1.ax1x.com/2022/05/26/XA5NWQ.jpg" alt="XA5NWQ.jpg"></a></td>
</tr>
<tr>
<td><a href="https://imgtu.com/i/XA5Uzj"><img src="https://s1.ax1x.com/2022/05/26/XA5Uzj.jpg" alt="XA5Uzj.jpg"></a></td>
<td><a href="https://imgtu.com/i/XA5dQs"><img src="https://s1.ax1x.com/2022/05/26/XA5dQs.jpg" alt="XA5dQs.jpg"></a></td>
</tr>
<tr>
<td><a href="https://imgtu.com/i/XE8dIg"><img src="https://s1.ax1x.com/2022/05/26/XE8dIg.md.jpg" alt="XE8dIg.md.jpg"></a></td>
<td><a href="https://imgse.com/i/zJjaZ9"><img src="https://s1.ax1x.com/2022/11/25/zJjaZ9.jpg" alt="zJjaZ9.jpg"></a></td>
</tr>
<tr>
<td><a href="https://imgse.com/i/zJjNqJ"><img src="https://s1.ax1x.com/2022/11/25/zJjNqJ.jpg" alt="zJjNqJ.jpg"></a></td>
<td><a href="https://imgse.com/i/zJjtr4"><img src="https://s1.ax1x.com/2022/11/25/zJjtr4.jpg" alt="zJjtr4.jpg"></a></td>
</tr>
<tr>
<td><a href="https://imgse.com/i/zJjdaR"><img src="https://s1.ax1x.com/2022/11/25/zJjdaR.jpg" alt="zJjdaR.jpg"></a></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>Navicat使用SQL文件将MySQL8.0导入到MySQL5.7</title>
    <url>/2022/05/26/MYSQL8%E6%96%87%E4%BB%B6%E8%BF%90%E8%A1%8C/</url>
    <content><![CDATA[<p>utf8mb4替换为utf8</p>
<p>utf8mb4_0900_ai_ci替换为utf8_general_ci</p>
<p>utf8_croatian_ci替换为utf8_general_ci</p>
<p>utf8mb4_general_ci替换为utf8_general_ci</p>
]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>Java两个List间并集与差集</title>
    <url>/2022/05/27/Java%E4%B8%A4%E4%B8%AAList%E9%97%B4%E5%8F%96%E5%B9%B6%E9%9B%86%E4%B8%8E%E5%B7%AE%E9%9B%86/</url>
    <content><![CDATA[<blockquote>
<p>今天下午在家办公遇到个问题，手动调用公式计算得分，需要对之前的得分进行修改操作，条件是根据多个字段，确实难搞哇，弄了一下午</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置综合得分返回数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> scoreParam 综合得分信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> evaluationType 评价类型（年度、季度）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> calculateScoreList 当前计算的得分数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 综合得分数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;SupplierComscore&gt; <span class="title">comScoreUpsert</span><span class="params">(SupplierComscore scoreParam, String evaluationType, List&lt;SupplierComscore&gt; calculateScoreList)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    List&lt;SupplierComscore&gt; updateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 已入库的得分数据</span></span><br><span class="line">    List&lt;SupplierComscore&gt; scoreList = supplierComscoreService.selectComscoreList(scoreParam, evaluationType);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改的数据</span></span><br><span class="line">    List&lt;SupplierComscore&gt; resultList = calculateScoreList.stream()</span><br><span class="line">            .filter(item -&gt; scoreList.stream().map(e -&gt; e.getSupplierCode() + <span class="string">&quot;|&quot;</span> + e.getProductType())</span><br><span class="line">                    .collect(Collectors.toList()).contains(item.getSupplierCode() + <span class="string">&quot;|&quot;</span> + item.getProductType()))</span><br><span class="line">            .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取得分结果信息</span></span><br><span class="line">    <span class="keyword">if</span> (CollectionUtils.isNotEmpty(resultList)) &#123;</span><br><span class="line">        resultList.forEach(item -&gt; &#123;</span><br><span class="line">            scoreList.stream().filter(e -&gt; e.getSupplierCode().equals(item.getSupplierCode()) &amp;&amp; e.getProductType().equals(item.getProductType()))</span><br><span class="line">                    .findFirst().ifPresent(s -&gt; &#123;</span><br><span class="line">                item.setId(s.getId());</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断综合评分是否修改</span></span><br><span class="line">                <span class="keyword">if</span> (s.getBaseScore() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    item.setBaseScore(item.getScore());</span><br><span class="line">                    item.setScore(s.getScore());</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断指标得分是否修改</span></span><br><span class="line">                <span class="keyword">if</span> (StrUtil.isNotBlank(s.getBaseIndexData())) &#123;</span><br><span class="line">                    item.setBaseIndexData(item.getIndexData());</span><br><span class="line">                    item.setIndexData(s.getIndexData());</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断供应商评级是否修改</span></span><br><span class="line">                <span class="keyword">if</span> (s.getBaseSupplierLevel() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    item.setBaseSupplierLevel(item.getSupplierLevel());</span><br><span class="line">                    item.setSecretLevel(s.getSecretLevel());</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 设置原先数据状态</span></span><br><span class="line">                item.setStatus(s.getStatus());</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">        updateList = resultList.stream().filter(e -&gt;</span><br><span class="line">                StrUtil.toString(e.getStatus()).equals(SalmKpiConstants.ASSESS_STATUS_EVALUATE_RELEASED) || StrUtil.toString(e.getStatus()).equals(SalmKpiConstants.ASSESS_STATUS_EVALUATE_REJECTED))</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 新增的数据</span></span><br><span class="line">    List&lt;SupplierComscore&gt; otherList = calculateScoreList.stream().filter(item -&gt; !resultList.contains(item)).collect(Collectors.toList());</span><br><span class="line">    <span class="keyword">return</span> ListUtils.union(otherList, updateList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>APEX</title>
    <url>/2022/05/29/APEX5.28/</url>
    <content><![CDATA[<blockquote>
<p>2022.5.28</p>
</blockquote>
<p>今天是本年来北京第一次玩APEX，爽！</p>
<p><img src="https://s1.ax1x.com/2022/05/28/XKsbv9.md.png" alt="XKsbv9.md.png"></p>
<blockquote>
<p>2022.5.29</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2022/05/30/XlZap4.png" alt="XlZap4.png"></p>
<p><img src="https://s1.ax1x.com/2022/05/30/XlZNhF.png" alt="XlZNhF.png"></p>
<blockquote>
<p>2022.5.30</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2022/05/30/X3kwo8.png" alt="X3kwo8.png"></p>
<p><img src="https://s1.ax1x.com/2022/05/30/X3kddf.png" alt="X3kddf.png"></p>
<blockquote>
<p>2022.6.2</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2022/06/03/XNr9bT.png" alt="XNr9bT.png"></p>
<blockquote>
<p>2022.6.5</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2022/06/11/XcMfeK.png" alt="XcMfeK.png"></p>
<blockquote>
<p>2022.6.7</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2022/06/11/XcM2sx.png" alt="XcM2sx.png"></p>
<blockquote>
<p>2022.6.8</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2022/06/11/XcMRL6.png" alt="XcMRL6.png"></p>
<blockquote>
<p>2022.6.12</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2022/06/19/XXK7T0.png" alt="XXK7T0.png"></p>
<blockquote>
<p>2022.6.18</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2022/06/19/XXKTwq.png" alt="XXKTwq.png"></p>
]]></content>
      <tags>
        <tag>APEX</tag>
      </tags>
  </entry>
  <entry>
    <title>代码规范</title>
    <url>/2022/05/28/%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<p>【基础】<br>1，变量/类/文件命名要规范（大小写，含义）<br>2，注释适度<br>3，代码整形<br>4，禁止相同处理重复copy</p>
<p>【提高】<br>1，考虑空指针场景<br>2，考虑数据类型精度<br>3，考虑事务的回滚（后端）<br>4，考虑异常时的处理机制</p>
<p>【性能】<br>1，减少无效循环次数<br>2，减少数据库访问次数（后端）</p>
<h2 id="方法名"><a href="#方法名" class="headerlink" title="方法名"></a>方法名</h2><table>
<thead>
<tr>
<th>前缀名</th>
<th>意义</th>
<th>举例</th>
</tr>
</thead>
<tbody><tr>
<td>create</td>
<td>创建</td>
<td>createOrder()</td>
</tr>
<tr>
<td>delete</td>
<td>删除</td>
<td>deleteOrder()</td>
</tr>
<tr>
<td>add</td>
<td>创建，暗示新创建的对象属于某个集合</td>
<td>addPaidOrder()</td>
</tr>
<tr>
<td>remove</td>
<td>删除</td>
<td>removeOrder()</td>
</tr>
<tr>
<td>init或则initialize</td>
<td>初始化，暗示会做些诸如获取资源等特殊动作</td>
<td>initializeObjectPool()</td>
</tr>
<tr>
<td>destroy</td>
<td>销毁，暗示会做些诸如释放资源的特殊动作</td>
<td>destroyObjectPool()</td>
</tr>
<tr>
<td>open</td>
<td>打开</td>
<td>openConnection()</td>
</tr>
<tr>
<td>close</td>
<td>关闭</td>
<td>closeConnection()</td>
</tr>
<tr>
<td>read</td>
<td>读取</td>
<td>readUserName()</td>
</tr>
<tr>
<td>write</td>
<td>写入</td>
<td>writeUserName()</td>
</tr>
<tr>
<td>get</td>
<td>获得</td>
<td>getName()</td>
</tr>
<tr>
<td>set</td>
<td>设置</td>
<td>setName()</td>
</tr>
<tr>
<td>prepare</td>
<td>准备</td>
<td>prepareOrderList()</td>
</tr>
<tr>
<td>copy</td>
<td>复制</td>
<td>copyCustomerList()</td>
</tr>
<tr>
<td>modity</td>
<td>修改</td>
<td>modifyActualTotalAmount()</td>
</tr>
<tr>
<td>calculate</td>
<td>数值计算</td>
<td>calculateCommission()</td>
</tr>
<tr>
<td>do</td>
<td>执行某个过程或流程</td>
<td>doOrderCancelJob()</td>
</tr>
<tr>
<td>dispatch</td>
<td>判断程序流程转向</td>
<td>dispatchUserRequest()</td>
</tr>
<tr>
<td>start</td>
<td>开始</td>
<td>startOrderProcessing()</td>
</tr>
<tr>
<td>stop</td>
<td>结束</td>
<td>stopOrderProcessing()</td>
</tr>
<tr>
<td>send</td>
<td>发送某个消息或事件</td>
<td>sendOrderPaidMessage()</td>
</tr>
<tr>
<td>receive</td>
<td>接受消息或时间</td>
<td>receiveOrderPaidMessgae()</td>
</tr>
<tr>
<td>respond</td>
<td>响应用户动作</td>
<td>responseOrderListItemClicked()</td>
</tr>
<tr>
<td>find</td>
<td>查找对象</td>
<td>findNewSupplier()</td>
</tr>
<tr>
<td>update</td>
<td>更新对象</td>
<td>updateCommission()</td>
</tr>
</tbody></table>
<h2 id="减少代码嵌套层次"><a href="#减少代码嵌套层次" class="headerlink" title="减少代码嵌套层次"></a>减少代码嵌套层次</h2><p>代码嵌套层次达 3 层以上时，一般人理解起来都会困难</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &gt; c) &#123;</span><br><span class="line">            doJobA();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (b &lt; c) &#123;</span><br><span class="line">            doJobB()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (b &gt; c) &#123;</span><br><span class="line">                <span class="keyword">if</span> (a &lt; c) &#123;</span><br><span class="line">                    doJobC();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>减少嵌套的方法</p>
<ol>
<li>合并条件</li>
<li>利用 return 以省略后面的 else</li>
<li>利用子方法</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b &amp;&amp; b &gt; c) &#123;</span><br><span class="line">        doJobA();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b &amp;&amp; c &gt; b) &#123;</span><br><span class="line">        doJobB();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a &lt;= b &amp;&amp; c &lt; b &amp;&amp; a &lt; c) &#123;</span><br><span class="line">        doJobC();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="接口类中的方法和属性不要加任何修饰符号"><a href="#接口类中的方法和属性不要加任何修饰符号" class="headerlink" title="接口类中的方法和属性不要加任何修饰符号"></a>接口类中的方法和属性不要加任何修饰符号</h2><p>接口类中的方法和属性不要加任何修饰符号（public 也不要加），保持代码的简洁<br>性，并加上有效的 Javadoc 注释。尽量不要在接口里定义变量，如果一定要定义变量，肯定是<br>与接口方法相关，并且是整个应用的基础常量。</p>
<h2 id="各层命名规约"><a href="#各层命名规约" class="headerlink" title="各层命名规约"></a>各层命名规约</h2><blockquote>
<p>Service/DAO 层方法命名规约</p>
</blockquote>
<p>1） 获取单个对象的方法用 get 做前缀。</p>
<p>2） 获取多个对象的方法用 list 做前缀。</p>
<p>3） 获取统计值的方法用 count 做前缀。</p>
<p>4） 插入的方法用 save/insert 做前缀。</p>
<p>5） 删除的方法用 remove/delete 做前缀。</p>
<p>6） 修改的方法用 update 做前缀。</p>
<blockquote>
<p>领域模型命名规约</p>
</blockquote>
<p>1） 数据对象：xxxDO，xxx 即为数据表名。</p>
<p>2） 数据传输对象：xxxDTO，xxx 为业务领域相关的名称。</p>
<p>3） 展示对象：xxxVO，xxx 一般为网页名称。</p>
<p>4） POJO 是 DO/DTO/BO/VO 的统称，禁止命名成 xxxPOJO。</p>
<h2 id="常量定义"><a href="#常量定义" class="headerlink" title="常量定义"></a>常量定义</h2><blockquote>
<p>不允许任何魔法值（即未经定义的常量）直接出现在代码中</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">反例：String key = <span class="string">&quot;Id#taobao_&quot;</span> + tradeId;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>long 或者 Long 初始赋值时，使用大写的 L，不能是小写的 l，小写容易跟数字 1 混<br>淆，造成误解。</p>
</blockquote>
<blockquote>
<p>大括号的使用约定</p>
</blockquote>
<p>如果是大括号内为空，则简洁地写成{}即可，不需要换行；如果<br>是非空代码块则</p>
<p>1.左大括号前不换行。</p>
<p>2.左大括号后换行。</p>
<p>3.右大括号前换行。</p>
<p>4.右大括号后还有 else 等代码则不换行；表示终止的右大括号后必须换行。</p>
<h2 id="OOP-规约"><a href="#OOP-规约" class="headerlink" title="OOP 规约"></a>OOP 规约</h2><blockquote>
<p>避免通过一个类的对象引用访问此类的静态变量或静态方法，无谓增加编译器解析成<br>本，直接用类名来访问即可</p>
</blockquote>
<blockquote>
<p>相同参数类型，相同业务含义，才可以使用 Java 的可变参数，避免使用 Object。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">正例：<span class="function"><span class="keyword">public</span> User <span class="title">getUsers</span><span class="params">(String type, Integer... ids)</span> </span>&#123;...&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>外部正在调用或者二方库依赖的接口，不允许修改方法签名，避免对接口调用方产生<br>影响。接口过时必须加@Deprecated 注解，并清晰地说明采用的新接口或者新服务是什么。</p>
</blockquote>
<blockquote>
<p>Object 的 equals 方法容易抛空指针异常，应使用常量或确定有值的对象来调用<br>equals。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">正例：<span class="string">&quot;test&quot;</span>.equals(object);</span><br><span class="line">反例：object.equals(<span class="string">&quot;test&quot;</span>);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>所有的相同类型的包装类对象之间值的比较，全部使用 equals 方法比较。</p>
</blockquote>
<p>对于 Integer var = ? 在-128 至 127 范围内的赋值，Integer 对象是在<br>IntegerCache.cache 产生，会复用已有对象，这个区间内的 Integer 值可以直接使用==进行<br>判断，但是这个区间之外的所有数据，都会在堆上产生，并不会复用已有对象，这是一个大坑，<br>推荐使用 equals 方法进行判断。</p>
<blockquote>
<p>关于基本数据类型与包装数据类型的使用标准</p>
</blockquote>
<p>1） 【强制】所有的 POJO 类属性必须使用包装数据类型。</p>
<p>2） 【强制】RPC 方法的返回值和参数必须使用包装数据类型。</p>
<p>3） 【推荐】所有的局部变量使用基本数据类型。</p>
<h2 id="集合处理"><a href="#集合处理" class="headerlink" title="集合处理"></a>集合处理</h2><blockquote>
<p>关于 hashCode 和 equals 的处理</p>
</blockquote>
<p>1） 只要重写 equals，就必须重写 hashCode。</p>
<p>2） 因为 Set 存储的是不重复的对象，依据 hashCode 和 equals 进行判断，所以 Set 存储的<br>对象必须重写这两个方法。</p>
<p>3） 如果自定义对象做为 Map 的键，那么必须重写 hashCode 和 equals。</p>
<blockquote>
<p>使用集合转数组的方法，必须使用集合的 toArray(T[] array)</p>
</blockquote>
<p>使用 toArray 带参方法，入参分配的数组空间不够大时，toArray 方法内部将重新分配<br>内存空间，并返回新数组地址；如果数组元素大于实际所需，下标为[ list.size() ]的数组<br>元素将被置为 null，其它数组元素保持原值，因此最好将方法入参数组大小定义与集合元素<br>个数一致。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;(<span class="number">2</span>); </span><br><span class="line">list.add(<span class="string">&quot;guan&quot;</span>); </span><br><span class="line">list.add(<span class="string">&quot;bao&quot;</span>); </span><br><span class="line">String[] array = <span class="keyword">new</span> String[list.size()]; </span><br><span class="line">array = list.toArray(array);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>使用工具类 Arrays.asList()把数组转换成集合时，不能使用其修改集合相关的方<br>法</p>
</blockquote>
<p>asList 的返回对象是一个 Arrays 内部类，并没有实现集合的修改方法。Arrays.asList<br>体现的是适配器模式，只是转换接口，后台的数据仍是数组。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String[] str = <span class="keyword">new</span> String[] &#123; <span class="string">&quot;you&quot;</span>, <span class="string">&quot;wu&quot;</span> &#125;;</span><br><span class="line"> List list = Arrays.asList(str);</span><br><span class="line">第一种情况：list.add(<span class="string">&quot;yangguanbao&quot;</span>); 运行时异常。</span><br><span class="line">第二种情况：str[<span class="number">0</span>] = <span class="string">&quot;gujin&quot;</span>; 那么 list.get(<span class="number">0</span>)也会随之修改。</span><br></pre></td></tr></table></figure>

<blockquote>
<p>不要在 foreach 循环里进行元素的 remove/add 操作。remove 元素请使用 Iterator<br>方式，如果并发操作，需要对 Iterator 对象加锁</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Iterator&lt;String&gt; iterator = list.iterator(); </span><br><span class="line">    <span class="keyword">while</span> (iterator.hasNext()) &#123; </span><br><span class="line">        String item = iterator.next(); </span><br><span class="line">        <span class="keyword">if</span> (删除元素的条件) &#123; </span><br><span class="line">            iterator.remove(); </span><br><span class="line">        &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>集合初始化时，指定集合初始值大小</p>
</blockquote>
<p>HashMap 使用 HashMap(int initialCapacity) 初始化</p>
<p>initialCapacity = (需要存储的元素个数 / 负载因子) + 1。注意负载因子（即 loader<br>factor）默认为 0.75，如果暂时无法确定初始值大小，请设置为 16（即默认值）</p>
<blockquote>
<p>使用 entrySet 遍历 Map 类集合 KV，而不是 keySet 方式进行遍历</p>
</blockquote>
<p>keySet 其实是遍历了 2 次，一次是转为 Iterator 对象，另一次是从 hashMap 中取出<br>key 所对应的 value。而 entrySet 只是遍历了一次就把 key 和 value 都放到了 entry 中，效<br>率更高。如果是 JDK8，使用 Map.foreach 方法。</p>
<blockquote>
<p>利用 Set 元素唯一的特性，可以快速对一个集合进行去重操作，避免使用 List 的<br>contains 方法进行遍历、对比、去重操作</p>
</blockquote>
<h2 id="控制语句"><a href="#控制语句" class="headerlink" title="控制语句"></a>控制语句</h2><blockquote>
<p>在一个 switch 块内，每个 case 要么通过 break/return 等来终止，要么注释说明程<br>序将继续执行到哪一个 case 为止；在一个 switch 块内，都必须包含一个 default 语句并且<br>放在最后，即使它什么代码也没有</p>
</blockquote>
<blockquote>
<p>在 if/else/for/while/do 语句中必须使用大括号。即使只有一行代码，避免采用<br>单行的编码方式：if (condition) statements;</p>
</blockquote>
<blockquote>
<p>表达异常的分支时，少用 if-else 方式</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (condition) &#123; </span><br><span class="line"> ... </span><br><span class="line"> <span class="keyword">return</span> obj; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 接着写 else 的业务逻辑代码; </span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>循环体中的语句要考量性能，以下操作尽量移至循环体外处理，如定义对象、变量、<br>获取数据库连接，进行不必要的 try-catch 操作（这个 try-catch 是否可以移至循环体外）</p>
</blockquote>
<blockquote>
<p>下列情形，需要进行参数校验</p>
</blockquote>
<p>1） 调用频次低的方法。</p>
<p>2） 执行时间开销很大的方法。此情形中，参数校验时间几乎可以忽略不计，但如果因为参<br>数错误导致中间执行回退，或者错误，那得不偿失。</p>
<p>3） 需要极高稳定性和可用性的方法。</p>
<p>4） 对外提供的开放接口，不管是 RPC/API/HTTP 接口。</p>
<p>5） 敏感权限入口。</p>
<h2 id="SQL-语句"><a href="#SQL-语句" class="headerlink" title="SQL 语句"></a>SQL 语句</h2><blockquote>
<p>不要使用 count(列名)或 count(常量)来替代 count(<em>)，count(</em>)是 SQL92 定义的<br>标准统计行数的语法，跟数据库无关，跟 NULL 和非 NULL 无关</p>
</blockquote>
<p>count(*)会统计值为 NULL 的行，而 count(列名)不会统计此列为 NULL 值的行</p>
<blockquote>
<p>当某一列的值全是 NULL 时，count(col)的返回结果为 0，但 sum(col)的返回结果为<br>NULL，因此使用 sum()时需注意 NPE 问题</p>
</blockquote>
<blockquote>
<p>使用 ISNULL()来判断是否为 NULL 值</p>
</blockquote>
<blockquote>
<p>不得使用外键与级联，一切外键概念必须在应用层解决</p>
</blockquote>
<blockquote>
<p>禁止使用存储过程，存储过程难以调试和扩展，更没有移植性</p>
</blockquote>
<blockquote>
<p>in 操作能避免则避免，若实在避免不了，需要仔细评估 in 后边的集合元素数量，控<br>制在 1000 个之内。</p>
</blockquote>
]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>前后端分离微信扫码登陆token授权方案</title>
    <url>/2022/05/31/Vue%E5%BE%AE%E4%BF%A1%E6%89%AB%E7%A0%81%E7%99%BB%E9%99%86/</url>
    <content><![CDATA[<blockquote>
<p>前端Vue 后端SpringBoot</p>
</blockquote>
<p>页面加载时声明一个变量state=’时间戳+6位随机数’，其中有个state参数需要我们传递，这个参数你传什么，微信回调的时候就会给你返回什么。 我们用之前生成那个state，当用户点击微信登录的按钮，我们就通过以state值为key和后端进行websocket连接</p>
<h2 id="前端设置socket链接"><a href="#前端设置socket链接" class="headerlink" title="前端设置socket链接"></a>前端设置socket链接</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> wsname = <span class="string">&quot;ws://xxxxx:xxx/socketServer/&quot;</span> + <span class="built_in">this</span>.state;</span><br><span class="line"><span class="built_in">this</span>.ws = <span class="keyword">new</span> WebSocket(wsname);</span><br><span class="line"><span class="comment">//连接成功触发</span></span><br><span class="line"><span class="built_in">this</span>.ws.onopen = <span class="function"><span class="keyword">function</span>(<span class="params">evt</span>) </span>&#123;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//这个是接收后台发送信息的方法</span></span><br><span class="line"><span class="built_in">this</span>.ws.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">evt</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(evt.data);</span><br><span class="line">  <span class="built_in">console</span>.log(data)</span><br><span class="line"> <span class="comment">//在这里判断后台给的用户信息和token  并进行相应的操作</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="websocket"><a href="#websocket" class="headerlink" title="websocket"></a>websocket</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ServerEndpoint(value = &quot;/socketServer/&#123;userid&#125;&quot;)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocketServer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Session session;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String,Session&gt; sessionPool = <span class="keyword">new</span> HashMap&lt;String,Session&gt;();</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String,String&gt; sessionIds = <span class="keyword">new</span> HashMap&lt;String,String&gt;();</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 用户连接时触发</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> session</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> userid</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@OnOpen</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(Session session,<span class="meta">@PathParam(value=&quot;userid&quot;)</span>String userid)</span></span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.session = session;</span><br><span class="line">		sessionPool.put(userid, session);</span><br><span class="line">		sessionIds.put(session.getId(), userid);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 收到信息时触发</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@OnMessage</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;当前发送人sessionid为&quot;</span>+session.getId()+<span class="string">&quot;发送内容为&quot;</span>+message);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 连接关闭触发</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@OnClose</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClose</span><span class="params">()</span></span>&#123;</span><br><span class="line">		sessionPool.remove(sessionIds.get(session.getId()));</span><br><span class="line">		sessionIds.remove(session.getId());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 发生错误时触发</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> session</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> error</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">    <span class="meta">@OnError</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(Session session, Throwable error)</span> </span>&#123;</span><br><span class="line">        error.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 *信息发送的方法</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(String message,String userId)</span></span>&#123;</span><br><span class="line">		Session s = sessionPool.get(userId);</span><br><span class="line">		<span class="keyword">if</span>(s!=<span class="keyword">null</span>)&#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				s.getBasicRemote().sendText(message);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="提供给前端发送信息的api"><a href="#提供给前端发送信息的api" class="headerlink" title="提供给前端发送信息的api"></a>提供给前端发送信息的api</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/sendpost&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sendPost</span><span class="params">(<span class="meta">@RequestBody</span> Params params)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (params.getJson() == <span class="keyword">null</span> || params.getUserid() == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    SocketServer.sendMessage(params.getJson(),params.getUserid());</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="微信回调代码"><a href="#微信回调代码" class="headerlink" title="微信回调代码"></a>微信回调代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/callback&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">(AuthCallback callback)</span> </span>&#123;</span><br><span class="line">    AuthUser authUser = <span class="keyword">null</span>;</span><br><span class="line">    AuthRequest authRequest = getAuthRequest();</span><br><span class="line">    AuthResponse response = authRequest.login(callback);</span><br><span class="line">    UserInfo user = <span class="keyword">new</span> UserInfo();</span><br><span class="line">    <span class="keyword">if</span>(response.getData() <span class="keyword">instanceof</span> AuthUser) &#123;</span><br><span class="line">        authUser =  (AuthUser)response.getData();</span><br><span class="line">        <span class="comment">//插入数据</span></span><br><span class="line">        WechatUserInfo wechatUser = <span class="keyword">new</span> WechatUserInfo();</span><br><span class="line">        wechatUser.setOpenId(authUser.getRawUserInfo().get(<span class="string">&quot;openid&quot;</span>).toString());</span><br><span class="line">        wechatUser.setNickName(authUser.getRawUserInfo().get(<span class="string">&quot;nickname&quot;</span>).toString());</span><br><span class="line">        <span class="keyword">if</span> (authUser.getRawUserInfo().get(<span class="string">&quot;sex&quot;</span>) == <span class="keyword">null</span> || authUser.getRawUserInfo().get(<span class="string">&quot;sex&quot;</span>).toString().equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            wechatUser.setSex(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            wechatUser.setSex(Integer.parseInt(authUser.getRawUserInfo().get(<span class="string">&quot;sex&quot;</span>).toString()));</span><br><span class="line">        &#125;</span><br><span class="line">        wechatUser.setHeadImgUrl(authUser.getRawUserInfo().get(<span class="string">&quot;headimgurl&quot;</span>).toString());</span><br><span class="line">        user = userInfoService.wxCallBack(wechatUser);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 添加访问记录</span></span><br><span class="line">    HttpServletRequest request = HttpContextUtil.getHttpServletRequest();</span><br><span class="line">    String ip = IPUtil.getIpAddr(request);</span><br><span class="line">    accessInfoService.save(<span class="keyword">new</span> AccessInfo(ip, AddressUtil.getCityInfo(ip), DateUtil.formatDateTime(<span class="keyword">new</span> Date())));</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//这里是将结果通过websocket返回给前端</span></span><br><span class="line">        System.out.println(HttpUtil.doPost(“http:<span class="comment">//www.niezhiliang.com:8086/websocket/sendpost”,user));</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>知识记录</title>
    <url>/2022/06/01/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E8%AF%AD%E6%B3%95%E7%B3%96/</url>
    <content><![CDATA[<h2 id="使用Stream流获取唯一一个或首个的操作"><a href="#使用Stream流获取唯一一个或首个的操作" class="headerlink" title="使用Stream流获取唯一一个或首个的操作"></a>使用Stream流获取唯一一个或首个的操作</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (CollectionUtils.isNotEmpty(supplierList)) &#123;</span><br><span class="line">    supplierList.stream().filter(s -&gt; s.getSupplierCode().equals(resultData.getSupplierCode())).findFirst().ifPresent(s -&gt; resultData.setSupplierName(s.getSupplierName()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>分组</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Map&lt;Integer, List&lt;Apple&gt;&gt; groupBy = appleList.stream().collect(Collectors.groupingBy(Apple::getId));</span><br></pre></td></tr></table></figure>

<blockquote>
<p>List转Map</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Map&lt;Integer, Apple&gt; appleMap = appleList.stream().collect(Collectors.toMap(Apple::getId, a -&gt; a,(k1,k2)-&gt;k1));</span><br></pre></td></tr></table></figure>

<blockquote>
<p>total</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">BigDecimal totalMoney = appleList.stream().map(Apple::getMoney).reduce(BigDecimal.ZERO, BigDecimal::add);</span><br></pre></td></tr></table></figure>

<h2 id="groupBy-实现的-list-转-map"><a href="#groupBy-实现的-list-转-map" class="headerlink" title="groupBy 实现的 list 转 map"></a>groupBy 实现的 list 转 map</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T, K&gt; <span class="function">Map&lt;K, T&gt; <span class="title">list2Map</span><span class="params">(<span class="meta">@NonNull</span> Collection&lt;T&gt; list, <span class="meta">@NonNull</span> Function&lt;? <span class="keyword">super</span> T, K&gt; keyFunc)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.stream().collect(Collectors.toMap(keyFunc, Function.identity(),</span><br><span class="line">                (u, v) -&gt; &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(String.format(<span class="string">&quot;Multiple entries with same key,%s=%s,%s=%s&quot;</span>,</span><br><span class="line">                            keyFunc.apply(u), u,</span><br><span class="line">                            keyFunc.apply(v), v));</span><br><span class="line">                &#125;,</span><br><span class="line">                HashMap::<span class="keyword">new</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;Player&gt; newList = playerList.stream().collect(Collectors .collectingAndThen( Collectors.toCollection(() -&gt; <span class="keyword">new</span> TreeSet&lt;&gt;(Comparator.comparing(Player::getName))), ArrayList::<span class="keyword">new</span>)); newList.forEach(System.out::println);</span><br></pre></td></tr></table></figure>

<h2 id="创建空集合"><a href="#创建空集合" class="headerlink" title="创建空集合"></a>创建空集合</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Collections.emptyList()</span><br></pre></td></tr></table></figure>

<h2 id="获取集合最小值-为空添加默认值"><a href="#获取集合最小值-为空添加默认值" class="headerlink" title="获取集合最小值(为空添加默认值)"></a>获取集合最小值(为空添加默认值)</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">evaluateBaseEntry.getValue().stream()</span><br><span class="line">        .map(SupplierEvaluateBaseinfo::getSecretLevel)</span><br><span class="line">        .filter(Objects::nonNull)</span><br><span class="line">        .min(Comparator.comparing(Integer::valueOf)).orElse(<span class="string">&quot;5&quot;</span>);</span><br></pre></td></tr></table></figure>

<h2 id="list对象两个属性相乘在相加"><a href="#list对象两个属性相乘在相加" class="headerlink" title="list对象两个属性相乘在相加"></a>list对象两个属性相乘在相加</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">item.stream().map(p -&gt; p.getQuantity().multiply(p.getUnitPrice())).reduce(BigDecimal::add).orElse(BigDecimal.ZERO)</span><br></pre></td></tr></table></figure>

<h2 id="Java-Stream递归"><a href="#Java-Stream递归" class="headerlink" title="Java Stream递归"></a>Java Stream递归</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Java Stream递归</span></span><br><span class="line"><span class="comment">* 当找不到子级权限的时候map操作不会再递归调用covert</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> UmsPermissionNode <span class="title">covert</span><span class="params">(UmsPermission permission, List&lt;UmsPermission&gt; permissionList)</span> </span>&#123;</span><br><span class="line">    UmsPermissionNode node = <span class="keyword">new</span> UmsPermissionNode();</span><br><span class="line">    BeanUtils.copyProperties(permission, node);</span><br><span class="line">    List&lt;UmsPermissionNode&gt; children = permissionList.stream()</span><br><span class="line">           .filter(subPermission -&gt; subPermission.getPid().equals(permission.getId()))</span><br><span class="line">           .map(subPermission -&gt; covert(subPermission, permissionList)).collect(Collectors.toList());</span><br><span class="line">    node.setChildren(children);</span><br><span class="line">    <span class="keyword">return</span> node;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="java-stream-多属性过滤"><a href="#java-stream-多属性过滤" class="headerlink" title="java stream 多属性过滤"></a>java stream 多属性过滤</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;SupplierEvaluationYear&gt; filter = supEvaluationYearList.stream()</span><br><span class="line">        .distinct()</span><br><span class="line">        .filter(e -&gt; !(supplierEvaluationYears.stream()</span><br><span class="line">                .map(y -&gt; y.getSupplierId() + <span class="string">&quot;:&quot;</span> + y.getPurchaseId() + <span class="string">&quot;:&quot;</span> + y.getProductType() + <span class="string">&quot;:&quot;</span> + y.getYear())</span><br><span class="line">                .collect(toList())</span><br><span class="line">                .contains(e.getSupplierId() + <span class="string">&quot;:&quot;</span> + e.getPurchaseId() + <span class="string">&quot;:&quot;</span> + e.getProductType() + <span class="string">&quot;:&quot;</span> + e.getYear())))</span><br><span class="line">        .collect(toList());</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>Java枚举类的使用</title>
    <url>/2022/06/11/Java%E6%9E%9A%E4%B8%BE%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="使用枚举类可以帮助我们更方便的获取固定属性值"><a href="#使用枚举类可以帮助我们更方便的获取固定属性值" class="headerlink" title="使用枚举类可以帮助我们更方便的获取固定属性值"></a>使用枚举类可以帮助我们更方便的获取固定属性值</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 季度年度标识枚举</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> FanK</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022-06-09</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">IndexConfigurationSuffixEnum</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 季度标识</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SUPPLIER_SCORES_CONFIGURATION_QUARTER_STR(<span class="string">&quot;1&quot;</span>,<span class="string">&quot;季&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 年度标识</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SUPPLIER_SCORES_CONFIGURATION_YEAR_STR(<span class="string">&quot;3&quot;</span>, <span class="string">&quot;年&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String time;</span><br><span class="line">    <span class="keyword">private</span> String indexConfigurationTimeStr;</span><br><span class="line"></span><br><span class="line">    IndexConfigurationSuffixEnum(String time, String indexConfigurationTimeStr) &#123;</span><br><span class="line">        <span class="keyword">this</span>.time = time;</span><br><span class="line">        <span class="keyword">this</span>.indexConfigurationTimeStr = indexConfigurationTimeStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据数值 获取对应的名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time 数值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getValueByTime</span><span class="params">(String time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (IndexConfigurationSuffixEnum categoryEnum : IndexConfigurationSuffixEnum.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (categoryEnum.getTime().equals(time)) &#123;</span><br><span class="line">                <span class="keyword">return</span> categoryEnum.getIndexConfigurationTimeStr();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> time;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTime</span><span class="params">(String time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.time = time;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getIndexConfigurationTimeStr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> indexConfigurationTimeStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIndexConfigurationTimeStr</span><span class="params">(String indexConfigurationTimeStr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.indexConfigurationTimeStr = indexConfigurationTimeStr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>调用</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String suffix = IndexConfigurationSuffixEnum.getValueByTime(time);</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>Java批量入库异步多线程更新</title>
    <url>/2022/06/19/Java%E6%89%B9%E9%87%8F%E5%85%A5%E5%BA%93%E6%9B%B4%E6%96%B0%E5%BC%82%E6%AD%A5%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
    <content><![CDATA[<blockquote>
<p>数据量极大的情况下的批量操作，效率问题</p>
</blockquote>
<ol>
<li>获取需要进行批量更新的大集合A，对大集合进行拆分操作，分成N个小集合A-1 ~ A-N </li>
<li>开启线程池，针对集合的大小进行调参，对小集合进行批量更新操作</li>
<li>对流程进行控制，控制线程执行顺序</li>
</ol>
<h2 id="按照指定大小拆分集合的工具类"><a href="#按照指定大小拆分集合的工具类" class="headerlink" title="按照指定大小拆分集合的工具类"></a>按照指定大小拆分集合的工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.CollectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拆分结合工具类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> shiwen</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/12/27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SplitListUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拆分集合</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; 泛型对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resList 需要拆分的集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> subListLength 每个子集合的元素个数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回拆分后的各个集合组成的列表</span></span><br><span class="line"><span class="comment">     * 代码里面用到了guava和common的结合工具类</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; List&lt;List&lt;T&gt;&gt; split(List&lt;T&gt; resList, <span class="keyword">int</span> subListLength) &#123;</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(resList) || subListLength &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Lists.newArrayList();</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;List&lt;T&gt;&gt; ret = Lists.newArrayList();</span><br><span class="line">        <span class="keyword">int</span> size = resList.size();</span><br><span class="line">        <span class="keyword">if</span> (size &lt;= subListLength) &#123;</span><br><span class="line">            <span class="comment">// 数据量不足 subListLength 指定的大小</span></span><br><span class="line">            ret.add(resList);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> pre = size / subListLength;</span><br><span class="line">            <span class="keyword">int</span> last = size % subListLength;</span><br><span class="line">            <span class="comment">// 前面pre个集合，每个大小都是 subListLength 个元素</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pre; i++) &#123;</span><br><span class="line">                List&lt;T&gt; itemList = Lists.newArrayList();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; subListLength; j++) &#123;</span><br><span class="line">                    itemList.add(resList.get(i * subListLength + j));</span><br><span class="line">                &#125;</span><br><span class="line">                ret.add(itemList);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// last的进行处理</span></span><br><span class="line">            <span class="keyword">if</span> (last &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                List&lt;T&gt; itemList = Lists.newArrayList();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; last; i++) &#123;</span><br><span class="line">                    itemList.add(resList.get(pre * subListLength + i));</span><br><span class="line">                &#125;</span><br><span class="line">                ret.add(itemList);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 运行代码</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; list = Lists.newArrayList();</span><br><span class="line">        <span class="keyword">int</span> size = <span class="number">1099</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            list.add(<span class="string">&quot;hello-&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 大集合里面包含多个小集合</span></span><br><span class="line">        List&lt;List&lt;String&gt;&gt; temps = split(list, <span class="number">100</span>);</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 对大集合里面的每一个小集合进行操作</span></span><br><span class="line">        <span class="keyword">for</span> (List&lt;String&gt; obj : temps) &#123;</span><br><span class="line">            System.out.println(String.format(<span class="string">&quot;row:%s -&gt; size:%s,data:%s&quot;</span>, ++j, obj.size(), obj));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="开启异步执行任务的线程池"><a href="#开启异步执行任务的线程池" class="headerlink" title="开启异步执行任务的线程池"></a>开启异步执行任务的线程池</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">threadMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    List&lt;T&gt; updateList = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    <span class="comment">// 初始化线程池, 参数一定要一定要一定要调好！！！！</span></span><br><span class="line">    ThreadPoolExecutor threadPool = <span class="keyword">new</span> ThreadPoolExecutor(<span class="number">20</span>, <span class="number">50</span>,</span><br><span class="line">            <span class="number">4</span>, TimeUnit.SECONDS, <span class="keyword">new</span> ArrayBlockingQueue(<span class="number">10</span>), <span class="keyword">new</span> ThreadPoolExecutor.AbortPolicy());</span><br><span class="line">    <span class="comment">// 大集合拆分成N个小集合, 这里集合的size可以稍微小一些（这里我用100刚刚好）, 以保证多线程异步执行, 过大容易回到单线程</span></span><br><span class="line">    List&lt;T&gt; splitNList = SplitListUtils.split(totalList, <span class="number">100</span>);</span><br><span class="line">    <span class="comment">// 记录单个任务的执行次数</span></span><br><span class="line">    CountDownLatch countDownLatch = <span class="keyword">new</span> CountDownLatch(splitNList.size());</span><br><span class="line">    <span class="comment">// 对拆分的集合进行批量处理, 先拆分的集合, 再多线程执行</span></span><br><span class="line">    <span class="keyword">for</span> (List&lt;T&gt; singleList : splitNList) &#123;</span><br><span class="line">        <span class="comment">// 线程池执行</span></span><br><span class="line">        threadPool.execute(<span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (Entity yangshiwen : singleList) &#123;</span><br><span class="line">                    <span class="comment">// 将每一个对象进行数据封装, 并添加到一个用于存储更新数据的list</span></span><br><span class="line">                    <span class="comment">// ......</span></span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;));</span><br><span class="line">        <span class="comment">// 任务个数 - 1, 直至为0时唤醒await()</span></span><br><span class="line">        countDownLatch.countDown();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 让当前线程处于阻塞状态，直到锁存器计数为零</span></span><br><span class="line">        countDownLatch.await();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BusinessLogException(ResponseEnum.FAIL);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通过mybatis的批量插入的方式来进行数据的插入, 这一步还是要做判空</span></span><br><span class="line">    <span class="keyword">if</span> (GeneralUtil.listNotNull(updateList)) &#123;</span><br><span class="line">        batchUpdateEntity(updateList);</span><br><span class="line">        LogUtil.info(<span class="string">&quot;xxxxxxxxxxxxxxx&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>Java浅拷贝工具类</title>
    <url>/2022/06/18/Java%E6%B5%85%E6%8B%B7%E8%B4%9D%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> net.sf.cglib.beans.BeanCopier;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.CollectionUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对象拷贝</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/7/05 09:15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CloneUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拷贝对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source 拷贝源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> classTargetType 对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T, E&gt; <span class="function">E <span class="title">clone</span><span class="params">(T source, Class&lt;E&gt; classTargetType)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (source == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        E targetInstance;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            targetInstance = classTargetType.newInstance();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InstantiationException | IllegalAccessException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(source, targetInstance);</span><br><span class="line">        <span class="keyword">return</span> targetInstance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拷贝数组对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sourceList 拷贝源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> classType 对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T, E&gt; <span class="function">List&lt;E&gt; <span class="title">batchClone</span><span class="params">(List&lt;T&gt; sourceList, Class&lt;E&gt; classType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sourceList == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;E&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (T t : sourceList) &#123;</span><br><span class="line">            result.add(clone(t, classType));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 浅拷贝对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sourceObj   被拷贝对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> targetClass 拷贝类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">convertToTarget</span><span class="params">(Object sourceObj, Class&lt;T&gt; targetClass)</span> </span>&#123;</span><br><span class="line">        T targetObj;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            targetObj = targetClass.newInstance();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InstantiationException | IllegalAccessException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        BeanUtils.copyProperties(sourceObj, targetObj);</span><br><span class="line">        <span class="keyword">return</span> targetObj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 浅拷贝数组对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sourceList  被拷贝数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> targetClass 拷贝类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">convertToTargetList</span><span class="params">(List&lt;?&gt; sourceList, Class&lt;T&gt; targetClass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(sourceList)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (targetClass == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;T&gt; targetList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Object sourceObj : sourceList) &#123;</span><br><span class="line">            T targetObj = convertToTarget(sourceObj, targetClass);</span><br><span class="line">            targetList.add(targetObj);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> targetList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 浅拷贝对象(性能++)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source  被拷贝数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dest 拷贝类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;S, T&gt; <span class="function">T <span class="title">convert</span><span class="params">(S source, Class&lt;T&gt; dest, Function&lt;T, T&gt; function)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (source == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            T result = dest.newInstance();</span><br><span class="line">            <span class="keyword">final</span> BeanCopier copier = BeanCopier.create(source.getClass(), dest, <span class="keyword">false</span>);</span><br><span class="line">            copier.copy(source, result, <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (function != <span class="keyword">null</span>) &#123;</span><br><span class="line">                function.apply(result);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 浅拷贝对象(性能++)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> copier 代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dest 目标类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> function 功能校验</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;S, T&gt; <span class="function">T <span class="title">convert</span><span class="params">(BeanCopier copier, S source, Class&lt;T&gt; dest, Function&lt;T, T&gt; function)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (source == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            T result = dest.newInstance();</span><br><span class="line">            copier.copy(source, result, <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (function != <span class="keyword">null</span>) &#123;</span><br><span class="line">                function.apply(result);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 浅拷贝数组(性能++)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sourceList 被拷贝数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dest 目标类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> function 功能校验</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标类型数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;S, T&gt; <span class="function">List&lt;T&gt; <span class="title">convertList</span><span class="params">(List&lt;S&gt; sourceList, Class&lt;T&gt; dest, Function&lt;T, T&gt; function)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(sourceList)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;T&gt; resultList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">final</span> BeanCopier copier = BeanCopier.create(sourceList.get(<span class="number">0</span>).getClass(), dest, <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">for</span> (S source : sourceList) &#123;</span><br><span class="line">                T result = dest.newInstance();</span><br><span class="line">                copier.copy(source, result, <span class="keyword">null</span>);</span><br><span class="line">                resultList.add(result);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (function != <span class="keyword">null</span>) &#123;</span><br><span class="line">                resultList.forEach(function::apply);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> resultList;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source 源类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dest 目标类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 代理对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;S, T&gt; <span class="function">BeanCopier <span class="title">createCopier</span><span class="params">(Class&lt;S&gt; source, Class&lt;T&gt; dest)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BeanCopier.create(source, dest, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis加锁操作注解</title>
    <url>/2022/06/17/Redis%E5%8A%A0%E9%94%81%E6%93%8D%E4%BD%9C%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * redis锁</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(ElementType.METHOD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> RedisLock &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**redis 锁名 */</span></span><br><span class="line">    <span class="function">String <span class="title">lockName</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**redis 锁持续时间 默认30min */</span></span><br><span class="line">    <span class="function"><span class="keyword">long</span> <span class="title">lockTime</span><span class="params">()</span> <span class="keyword">default</span> 30 * 60 * 1000L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**redis 是否需要锁用户 */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">lockUser</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">**</span><br><span class="line"> * redis锁</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisLockAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(RedisLockAspect.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisService redisService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(cn.avicnet.uap.common.redis.annotation.RedisLock)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pointCut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;pointCut()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line"></span><br><span class="line">        RedisLock annotation = getAnnotation(joinPoint);</span><br><span class="line">        <span class="keyword">if</span> (annotation == <span class="keyword">null</span> || StringUtils.isBlank(annotation.lockName())) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> CustomException(<span class="string">&quot;请设置锁名！：&quot;</span> + joinPoint.getSignature());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取锁名</span></span><br><span class="line">        String lockName = annotation.lockName();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//是否需要锁定用户</span></span><br><span class="line">        <span class="keyword">if</span> (annotation.lockUser()) &#123;</span><br><span class="line">            Long userId = AsyncSecurityUtils.getUserId() != <span class="keyword">null</span> ? AsyncSecurityUtils.getUserId() : <span class="keyword">this</span>.getUserId();</span><br><span class="line">            lockName = lockName + <span class="string">&quot;:&quot;</span> + userId;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置失效时间</span></span><br><span class="line">        <span class="keyword">long</span> lockTime;</span><br><span class="line">        <span class="keyword">if</span> (annotation.lockTime() &lt;= <span class="number">0L</span>) &#123;</span><br><span class="line">            lockTime = <span class="number">30</span> * <span class="number">60</span> * <span class="number">1000L</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            lockTime = annotation.lockTime();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String timeTags = String.valueOf(System.currentTimeMillis() + lockTime);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!redisService.lock(lockName, timeTags)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> CustomException(<span class="string">&quot;已有用户正在操作！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Object obj;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            obj = joinPoint.proceed();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(e.getMessage());</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//执行解锁</span></span><br><span class="line">                redisService.unlock(lockName, timeTags);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                log.error(<span class="string">&quot;redis 解锁失败&quot;</span> + e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从方法切入点获取注解</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> joinPoint 切入点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 注解信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> RedisLock <span class="title">getAnnotation</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">        Signature signature = joinPoint.getSignature();</span><br><span class="line">        MethodSignature methodSignature = (MethodSignature) signature;</span><br><span class="line">        Method method = methodSignature.getMethod();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (method != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> method.getAnnotation(RedisLock.class);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getUserId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ServletUtils.getRequest() == <span class="keyword">null</span> ? <span class="keyword">null</span> : Convert.toLong(ServletUtils.getRequest().getHeader(CacheConstants.DETAILS_USER_ID));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>关于上级领导通报最低工时这件事</title>
    <url>/2022/06/24/%E5%85%B3%E4%BA%8E%E4%B8%8A%E7%BA%A7%E9%A2%86%E5%AF%BC%E9%80%9A%E6%8A%A5%E6%9C%80%E4%BD%8E%E5%B7%A5%E6%97%B6%E8%BF%99%E4%BB%B6%E4%BA%8B/</url>
    <content><![CDATA[<p><img src="https://s1.ax1x.com/2022/06/24/jFwwFJ.png" alt="jFwwFJ.png"></p>
<h2 id="事件前提"><a href="#事件前提" class="headerlink" title="事件前提"></a>事件前提</h2><p>今天周五准备下班的时候，发现领导把本月的工时和最短的两人发了出来，我一开始很震惊，我竟然平均工时最短（可能是因为月初在家隔离了一段时间，但这也不重要）。公司正常模式为早9晚6，入职时HR也跟我通知了会加班这件事，我觉得只要当天把自己本职工作完成就好，应该不会说其他什么事吧。</p>
<p>我看到消息后感觉有些好笑，其主要目的是为了让我加班 OR 杀鸡儆猴，让员工自己卷，加班费一毛都不用出，打算每天按最短工时打卡，晚上仔细考虑下对于现在这个问题不宜过度冲动，这种现象折射的，就是所谓的人口红利，背面隐藏的就是 爱干干 不干 gun，女生为啥常说没安全感呢， 这种风气下，人人自危，难怪千军万马考公务员</p>
<p>贷款了就永远给公司当🐶吧，自己活得快乐睁眼闭眼一辈子就过去了，家庭孩子啥的，不强求，来缘分了就上，没有就算了。人这一辈子累死累活，卷这卷那最后只不过沧海一粟</p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA插件</title>
    <url>/2022/07/19/IDEA%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<h2 id="Alibaba-Java-Coding-Guidelines"><a href="#Alibaba-Java-Coding-Guidelines" class="headerlink" title="Alibaba Java Coding Guidelines"></a>Alibaba Java Coding Guidelines</h2><p>阿里巴巴 Java 开发规约插件</p>
<h2 id="CodeGlance"><a href="#CodeGlance" class="headerlink" title="CodeGlance"></a>CodeGlance</h2><p>侧边缩略图</p>
<h2 id="GitToolBox"><a href="#GitToolBox" class="headerlink" title="GitToolBox"></a>GitToolBox</h2><p>点击的代码行之后显示 git 用户名，commit 等一些信息。</p>
<h2 id="Mario-Progress-Bar"><a href="#Mario-Progress-Bar" class="headerlink" title="Mario Progress Bar"></a>Mario Progress Bar</h2><p>NyanProgressBar</p>
<p>Mario加载条</p>
<h2 id="MybatisX"><a href="#MybatisX" class="headerlink" title="MybatisX"></a>MybatisX</h2><p>懂得都懂</p>
<h2 id="Pokemon-Progress"><a href="#Pokemon-Progress" class="headerlink" title="Pokémon Progress"></a>Pokémon Progress</h2><p>Pokémon加载条</p>
<h2 id="Rainbow-Brackets"><a href="#Rainbow-Brackets" class="headerlink" title="Rainbow Brackets"></a>Rainbow Brackets</h2><p>智能AI辅助。。。（我的评价是不如Copilot一根）</p>
<h2 id="RESTfulToolKit"><a href="#RESTfulToolKit" class="headerlink" title="RESTfulToolKit"></a>RESTfulToolKit</h2><p>1.根据 URL 直接跳转到对应的方法定义 ( Ctrl \ or Ctrl Alt N );</p>
<p>2.提供了一个 Services tree 的显示窗口;</p>
<p>3.一个简单的 http 请求工具;</p>
<p>4.在请求方法上添加了有用功能: 复制生成 URL;,复制方法参数…</p>
<p>5.其他功能: java 类上添加 Convert to JSON 功能，格式化 json 数据 ( Windows: Ctrl + Enter; Mac: Command + Enter )。</p>
<h2 id="SQL-Param-Setter"><a href="#SQL-Param-Setter" class="headerlink" title="SQL Param Setter"></a>SQL Param Setter</h2><p>A simple tool that helps you to extract a executable sql from mybatis logs like below:<br>    ==&gt; Preparing: select * from table where name = ?<br>    ==&gt; Parameters: Tom(String)</p>
<p>After selecting these two lines of logs above, you can right click your mouse and select “SQL Params Setter” in the popup menu, then the result executable sql, i.e. “select * from table where name = ‘Tom’” will be copied to your clipboard.</p>
<h2 id="Rainbow-brackets"><a href="#Rainbow-brackets" class="headerlink" title="Rainbow brackets"></a>Rainbow brackets</h2><p>它为每组左中括号和右中括号提供了各自的颜色，使跟踪代码块的起始和结束位置更加容易</p>
<h2 id="Extra-Icons"><a href="#Extra-Icons" class="headerlink" title="Extra Icons"></a>Extra Icons</h2><p>它增加了一组默认情况下 IntelliJ IDEA 不支持的图标。 这些图标不仅美观，还将简化文件之间的导航，因为您可以更直观地识别文件类型</p>
<h2 id="Activate-power-mode"><a href="#Activate-power-mode" class="headerlink" title="Activate-power-mode"></a>Activate-power-mode</h2>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>KINGYO</title>
    <url>/2022/06/29/KINGYO/</url>
    <content><![CDATA[<p>一开始就这样 接下来会如何？醒醒吧 别再蒙混过关了，上下颠倒的空档里。<br>无法避开的痛处 是在威胁我吗、<br>身无分文 虽然牛仔裤还没破 可是口袋里只有一把辛酸泪、</p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>10KM跑步经验</title>
    <url>/2022/08/31/10KM%E8%B7%91%E6%AD%A5%E7%BB%8F%E9%AA%8C/</url>
    <content><![CDATA[<h2 id="大体重跑步伤膝盖吗？"><a href="#大体重跑步伤膝盖吗？" class="headerlink" title="大体重跑步伤膝盖吗？"></a>大体重跑步伤膝盖吗？</h2><p>只要你不是先天性的膝关节弯曲，或者半月板问题等等，正常是不会对膝盖造成多大损伤的。可以参考大多数马拉松运动员，很少出现严重的膝关节问题。很多业余马拉松爱好者，都是大体重入门，刷脂成功再进阶，他们都没有严重的膝伤问题，所以如果你想刷脂，想跑步，跑就完事了，不要整天操心伤不伤膝盖。如果你的 BMI 比我的低，放心，你跑起来应该也没问题。</p>
<p>如果你实在害怕，可以挂号看看运动康复科目之类的医生，检查下自己的关节是不是可以进行跑步。</p>
<h2 id="运动损伤自测"><a href="#运动损伤自测" class="headerlink" title="运动损伤自测"></a>运动损伤自测</h2><p>刚跑步肯定会出现各种不舒服，小腿酸痛，大腿酸痛，膝盖酸痛，踝关节酸痛，足底酸痛等等。只要不是静息疼痛，也就是坐着不动，躺着不动都疼，就说明不严重，继续跑就完事了。如果出现严重的静息疼痛，你真的需要去看医生。</p>
<p>我刚开始跑步，膝盖酸痛明显，我也是真的害怕，所以都打算放弃了。</p>
<p>但是我的膝盖不是静息疼痛，而是跑到 3-5km 的时候，开始疼痛的。</p>
<p>我开始找寻解决办法，索性我的身体还行，改变了跑姿，我从后掌跑法，切换到了前掌。（我不建议大家尝试，正常跑步什么姿势，就什么姿势），我的膝盖确实减轻了很多。</p>
<p>但是陆续出现了小腿严重酸痛，大腿酸痛，伤痛又一次让我想要放弃。</p>
<p>强忍着，进行了一次又一次 3KM ，5KM ，减轻了很多，到现在 10KM 也很轻松，酸痛感逐渐逐渐消失了。</p>
<h2 id="跑步需要热身和拉伸吗"><a href="#跑步需要热身和拉伸吗" class="headerlink" title="跑步需要热身和拉伸吗"></a>跑步需要热身和拉伸吗</h2><p>很需要，怎么拉伸和热身，建议去搜寻专业的视频。</p>
<p>当然，力量锻炼也很重要。不过如果，你没怎么跑过步，可能更不会去锻炼了</p>
<h2 id="跑步需要哪些装备"><a href="#跑步需要哪些装备" class="headerlink" title="跑步需要哪些装备"></a>跑步需要哪些装备</h2><p>如果你想要跑的快乐，跑步是需要装备的。</p>
<ul>
<li>一块手表，或者手环，有 GPS ，可以检测实时心率。</li>
<li>T 恤短裤，我只推荐 Nike dri fit adv ，在炎热的夏天，其他 T 恤出汗非常黏，adv 相对好一点。驮着几斤的衣服黏在身上，是真的很难受。</li>
<li>跑鞋，真的很重要！！！！如果你是入门跑者，不要考虑，线下你能买到的跑鞋，尤其是国产的碳板跑鞋，多半是竞速的，稳定性都很差。</li>
</ul>
<h2 id="如何进行-5KM-慢跑"><a href="#如何进行-5KM-慢跑" class="headerlink" title="如何进行 5KM 慢跑"></a>如何进行 5KM 慢跑</h2><p>如果你是小白，我相信你可能这辈子都没跑过 5KM 的距离。如何突破，有以下几点</p>
<ul>
<li>掌握呼吸节奏，比如 3 步呼吸法，就是每跑三步就呼吸一次，如果你发现喘不过来，就降速</li>
<li>适当走路，慢跑是个枯燥难熬的运动，并不是竞速，顶不住了，可以适当停下来走路缓缓</li>
<li>不断的练习跑步。跑步虽然说是人类的天性，但是不锻炼，很难突破</li>
<li>压好心率，慢跑不是竞速，把心率控制在自己能自由说话的区间，就算 8 分配也没关系</li>
</ul>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>Java8的几个实用新特性</title>
    <url>/2022/08/20/Java8%E7%9A%84%E5%87%A0%E4%B8%AA%E5%AE%9E%E7%94%A8%E6%96%B0%E7%89%B9%E6%80%A7/</url>
    <content><![CDATA[<h2 id="延迟队列-【Delay-Queue】"><a href="#延迟队列-【Delay-Queue】" class="headerlink" title="延迟队列 【Delay Queue】"></a>延迟队列 【Delay Queue】</h2><p><code>它是一种特定类型的 Java 集合，它允许我们根据元素的延迟时间对元素进行排序。老实说，这是一门非常有趣的课。尽管 DelayQueue该类是 Java 集合的成员，但它属于 java.util.concurrent 包。它实现了BlockingQueue接口。只有当元素的时间到期时，才能从队列中取出元素</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> record <span class="title">DelayedEvent</span><span class="params">(<span class="keyword">long</span> startTime, String msg)</span> implements Delayed </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getDelay</span><span class="params">(TimeUnit unit)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> diff = startTime - System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">return</span> unit.convert(diff, TimeUnit.MILLISECONDS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Delayed o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) (<span class="keyword">this</span>.startTime - ((DelayedEvent) o).startTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>假设我们想推迟元素10秒。我们只需要设置当前时间增加了10秒DelayedEvent类</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> DelayQueue&lt;DelayedEvent&gt; delayQueue = <span class="keyword">new</span> DelayQueue&lt;&gt;();</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">long</span> timeFirst = System.currentTimeMillis() + <span class="number">10000</span>;</span><br><span class="line">delayQueue.offer(<span class="keyword">new</span> DelayedEvent(timeFirst, <span class="string">&quot;1&quot;</span>));</span><br><span class="line">log.info(<span class="string">&quot;Done&quot;</span>);</span><br><span class="line">log.info(delayQueue.take().msg());</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>绿萝水培养殖方法</title>
    <url>/2022/09/02/%E7%BB%BF%E8%90%9D%E6%B0%B4%E5%9F%B9%E5%85%BB%E6%AE%96%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="家庭如何水培空气净化能手——绿萝"><a href="#家庭如何水培空气净化能手——绿萝" class="headerlink" title="家庭如何水培空气净化能手——绿萝"></a>家庭如何水培空气净化能手——绿萝</h2><p>它能清除一氧化碳、亚硫酸等室内有害气体，清新室内空气，拉丁学名为Epipremnum aureum。绿萝是常绿藤本植物，生长在热带雨林的岩石和树干上，它缠绕能力强，气根非常发达</p>
<h2 id="生长习性"><a href="#生长习性" class="headerlink" title="生长习性"></a>生长习性</h2><p>绿萝喜阴，忌阳光直射。在室内栽培时可放置在窗旁，我们需要注意当阳光过强时，绿萝叶面就会被灼伤，当然，完全没有阳光时，绿萝叶面会出现斑纹消失的现象，建议让绿萝接受4小时的散射光，这样可以完全满足绿萝生长发育的需要</p>
<h2 id="绿萝的水培方法"><a href="#绿萝的水培方法" class="headerlink" title="绿萝的水培方法"></a>绿萝的水培方法</h2><p>水培绿萝首先需选择绿萝带有根的枝茎作为水培对象，将其放入清水中，10天就能长出水生根，需要注意放入水中的枝茎部分不能带有叶片，因为叶片泡在水中很容易影响到水质。同时，也可以选取株型较好的盆栽绿萝植株，洗净根系上的泥土，剪去多余的老根，放入清水中</p>
<p>水培绿萝，刚开始要注意换水，2天换一次与室温相同的水，当绿萝的水生根长出1周后，就可以换1次水了。绿萝的新叶长出后，每隔10天加1次营养液，或者向叶片上喷洒稀释的营养液，使叶片翠绿有光泽</p>
<p>水培绿萝的根系要注意时常清洗修剪，为避免营养流失，水培绿萝根系过长时，应及时修剪。如果根系有腐烂发粘的现象，需及时对植株根系进行清洗，剪去烂根，并用高锰酸钾溶液浸泡消毒后再恢复养护。同时，采取与绿萝水培初期一样的方法，2天换1次水，待绿萝植株完全恢复长势后再10天换1次水</p>
<p>水培绿萝适合放置在有足够散射光的地方，适宜15—21℃温暖湿润的环境。在干燥的季节需要经常的往叶片上喷水，增加绿萝生长环境的湿度，起到清洁叶片表面，去除灰尘的作用。冬季水培绿萝注意防冻，因水培叶片娇嫩，对温度变化十分敏感，请注意，不要将水培绿萝靠近暖气，冬季保持室温在10℃以上。 </p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>运动燃脂</title>
    <url>/2022/09/05/%E8%BF%90%E5%8A%A8%E7%87%83%E8%84%82/</url>
    <content><![CDATA[<h2 id="运动燃脂"><a href="#运动燃脂" class="headerlink" title="运动燃脂"></a>运动燃脂</h2><p>增加耐力训练。研究表明，与传统运动相比，间歇性锻炼或者交替进行短暂的爆发与休息可以改善肌肉并增强耐力</p>
<p>燃烧卡路里。有氧运动能够提高心率，加快燃烧卡路里，有益于全身减脂。只去做某项腹部运动来减掉肚子上的赘肉是不可能的，但是当你做全身有氧运动时，最先消耗的就是腹部的脂肪。</p>
<ul>
<li>记录运动的时间。记录跑1000米需要多长时间。随着耐力的增加，你花费的时间会越来越少。</li>
<li>克服跑步时的小腿疼痛问题。如果你在跑步时小腿前侧有疼痛症状，那么可能是由于身体过于前倾造成的。（也就是说，你在落脚时把重心过多地放在了脚的的外侧）选择专业运动鞋可以帮你减轻疼痛。</li>
<li>不要过量运动。刚开始做有氧运动时，请每周做3次就可以了。当你慢慢习惯时，可以增加到每周4次。过多的有氧运动会导致肌肉的流失，还容易造成肌肉损伤。</li>
</ul>
<p>增加阻力训练。2006年《国际体育营养与运动代谢杂志》上发表的一项研究表明，在腹部减脂方面，心血管（有氧）运动与阻力训练相结合比单独进行心血管运动更为有效。你可以通过力量训练器、健身器或阻力带来进行阻力训练，训练时让身体保持不稳定的姿势也很有用，因为这样会进一步提高肌肉的运动强度。</p>
<p>别再做仰卧起坐——至少暂时不要做。仰卧起坐的作用是增加肌肉，但是在增加肌肉前，你先需要减去腹部的脂肪。其实，仰卧起坐增加了大块肌肉，反而会让你的肚子看起来更大。</p>
<h2 id="保证正常的新陈代谢"><a href="#保证正常的新陈代谢" class="headerlink" title="保证正常的新陈代谢"></a>保证正常的新陈代谢</h2><p>减轻压力。科学研究表明皮质醇（一种人们在面临压力时分泌的荷尔蒙）会导致肚子上的赘肉增加</p>
<ul>
<li>正常的成年人需要每天至少7小时以上的睡眠来保证身体各项功能正常运转。</li>
<li>制定放松时间。哪怕仅仅是午饭后放松15分钟，闭上眼睛深呼吸一下，试着不去想那些生活琐事，也是有帮助的。</li>
<li>使压力远离睡眠环境。如果可能的话，不要在卧室里工作，或是做任何让你感到有压力的事。在你进入卧室时，告诉自己，我不会在去想那些烦心事。</li>
</ul>
<p>每天走10,000步。在一项研究中表明，如果你每天走路少于1,500步（而不改变饮食习惯的话），那么2星期后腹部脂肪就会增加7%。</p>
<ul>
<li>在合理的距离内尽量选择步行。如果可能，选择走路去上班、上学或购物。</li>
<li>尽量不使用电梯而爬楼梯。尽量不开车来选择步行。</li>
<li>每30分钟起来走动一下。如果你工作时总是坐着，那么买一些可以在室内运动的器械。</li>
</ul>
<p>补充足够的水。科学研究表明摄入足够的水能够加快新陈代谢。喝水还能帮助身体排出毒素，对身体有益。</p>
<ul>
<li>每天至少喝8杯水</li>
<li>随身带一个水壶，一旦渴了就喝水。</li>
<li>判断饮水是否足够的方法就是看一下检查一下小便的颜色。如果呈黄色的话意味着你还需要喝更多的水，直到尿色比较淡为止。</li>
<li>大幅减少酒精、含糖饮料（如甜茶、酷爱、果汁饮料、果汁、可乐、七喜和百事可乐）以及碳酸饮料的摄入。</li>
</ul>
<p>保证按时吃早餐。你可能会觉得，我要减肥的话，为什么还要吃呢？但是科学研究表明，在起床后1小时内吃早餐，能够保持胰岛素的稳定，并降低LDL-胆固醇（俗称坏胆固醇）的含量。</p>
<h2 id="准备健康早餐"><a href="#准备健康早餐" class="headerlink" title="准备健康早餐"></a>准备健康早餐</h2><ul>
<li>选择一种蛋白质：鸡蛋、豆类、花生酱、坚果、瘦肉</li>
<li>选择一种纤维：燕麦、新鲜水果、绿叶蔬菜</li>
<li>尽量减少精制糖：避开含糖的谷物、煎饼、糕点、速食燕麦片</li>
<li>小提示：燕麦和其它高纤维碳水化合物有助于保持健康的血糖水平，让减肥更容易。</li>
</ul>
<h3 id="节食减脂"><a href="#节食减脂" class="headerlink" title="节食减脂"></a>节食减脂</h3><p>减少卡路里的摄入。只有减少卡路里的摄入才能减少腹部的赘肉。</p>
<ul>
<li>每减少半斤脂肪需要消耗3700卡热量。因此要想减脂，你必须通过运动燃烧掉3700卡，或是每周少摄入3700卡的热量。</li>
<li>每周最多减掉一斤。减肥速度过快不但对身体无益，还会导致反弹。</li>
<li>记下每天吃了什么。人们经常低估自己所摄入的食物的量。试着记录下一周所吃的所有东西，并利用网上的卡路里热量表，查一查自己大概摄入了多少热量，是不是需要适当节食。</li>
<li>男士试着每天摄入2200卡，女士则尝试控制在2000卡。这会帮你每周减掉半斤到一斤的体重。当然，减重的多少和你的运动量也有关系。</li>
<li>每天的消耗不能少于1200卡。</li>
</ul>
<p>摄入健康脂肪。研究表明，摄入单不饱和脂肪酸（MUFAs)——比如鳄梨、坚果、种子、豆类和黑巧克力能够防止腹部脂肪的堆积。<br>反式脂肪酸（果酱、饼干、甜点以及其他任何用氢化油制作的食物）会导致腹部脂肪的堆积。所以请尽量远离它们。</p>
<p>在饮食中摄入更多膳食纤维。可溶性膳食纤维（富含于苹果、燕麦、樱桃等）可以降低胰岛素水平，加速燃烧内脏中的脂肪。</p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>自然改善视力</title>
    <url>/2022/09/06/%E8%87%AA%E7%84%B6%E6%94%B9%E5%96%84%E8%A7%86%E5%8A%9B/</url>
    <content><![CDATA[<p>练习慢速和快速眨眼，帮助减轻眼睛疲劳。眨眼让眼睛短暂休息，并滋润眼睛，避免它们变干。抽出2分钟，每30秒眨一次眼，眼睛一定要完全闭上再张开。缓慢眨眼后，再次抽出2分钟，这次每4秒眨一次眼。一整天不时重复上述步骤，训练眼睛多眨眼</p>
<p>用眼睛画8字，增强眼部肌肉</p>
<p>交替注视大拇指和远方的某个物体，以改善视力</p>
<p>用手掌捂住双眼5秒，让眼睛放松。这个方法有助于放松疲劳的双眼。双掌互相揉搓5-10秒，让它们变得温暖，然后轻轻地捂住紧闭的双眼。捂1分钟，保持深呼吸。每天重复2-3次，帮助缓解眼睛疲劳</p>
<h2 id="调整饮食"><a href="#调整饮食" class="headerlink" title="调整饮食"></a>调整饮食</h2><p>多吃深绿叶蔬菜，摄取维生素A。新鲜的绿叶蔬菜富含维生素A和叶黄素。叶黄素是一种抗氧化剂，有助于促进眼睛健康。将羽衣甘蓝、菠菜、西兰花和甘蓝菜叶等蔬菜纳入饮食中，每周至少吃3-4次，改善眼睛健康</p>
<p>吃柑橘类水果和其它维生素C来源。维生素C有助于降低罹患白内障的风险，同时促进眼部血液循环。将橙、葡萄柚、番茄、苹果等蔬果纳入饮食中，建议每天摄取75-90毫克维生素C。</p>
<p>吃富含脂肪酸和维生素D的食物，缓解眼睛干涩。欧米茄-3脂肪酸和维生素D有助于对抗视网膜黄斑变性，避免日后失明。每周吃三文鱼、鱼、核桃、亚麻籽、奇亚籽等食物3-4次，确保饮食均衡</p>
<h2 id="改变生活方式"><a href="#改变生活方式" class="headerlink" title="改变生活方式"></a>改变生活方式</h2><p>视线偶尔离开电视或电脑屏幕，让眼睛休息一下。长时间盯着电脑和电视屏幕，它们释放的蓝光会让眼睛感觉疲劳和干涩。如果你对着电脑工作，尽量每小时休息10分钟，让视线离开屏幕</p>
<p>在强光下戴墨镜，减轻眼睛疲劳。阳光会损伤眼睛，可能导致失明，并使眼睛慢慢变弱。外出时，如果阳光很强，不妨戴上墨镜。不管去哪里都随身携带墨镜，以便随时派上用场。如果你需要更多保护，选择可同时保护眼睛两侧的环绕包裹式墨镜</p>
<p>不要抽烟，避免眼睛损伤。抽烟会引起许多视力相关问题，比如视网膜黄斑变性、白内障和眼睛神经损伤。如果你没有抽烟，那就不要碰任何烟草产品。如果你有抽烟，减少每天的抽烟数量，慢慢把它彻底戒掉。</p>
<p>获取充足睡眠，好让眼睛休息。晚上没有获取充分休息，眼睛一整天都会酸痛、干涩。每晚至少睡6-8小时，让眼睛有时间放松和恢复。睡前至少30-60分钟停止看任何电子屏幕，否则你会更难入睡</p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>让我倍感煎熬的9.29</title>
    <url>/2022/09/29/%E8%AE%A9%E6%88%91%E5%80%8D%E6%84%9F%E7%85%8E%E7%86%AC%E7%9A%849.29/</url>
    <content><![CDATA[<p>今天我才深刻的意识到自己是多么的无能，多么的渺小，像一只蜷缩在下水道又油又臭的老鼠，终日不见阳光,看不到美丽的天空,闻不到鲜花的芬芳,终日在臭水沟里与那些可恶的老鼠们争抢那点可怜的食物,什么是什么?什么是什么?什么是什么?我不明白,从我离开象牙塔的那天起我就掉进了下水道里,再也没有爬出来过．</p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>冬虫夏草</title>
    <url>/2022/10/14/%E5%86%AC%E8%99%AB%E5%A4%8F%E8%8D%89%E7%9A%84%E6%95%85%E4%BA%8B/</url>
    <content><![CDATA[<p>我最近看到一句话，是俞敏洪老师说的，说如果没有女性和家庭，男人可能不在乎自己有没有钱，我觉得这句话说的真的太准确。看到这句话，我最先想到了父辈这一代人，就拿我父亲来说，其实这么多年回过头去看，我觉得他存在的价值就是一个家庭的供养机器，机器喜欢什么没有人知道，反正做好饭，桌子上摆啥，他吃啥，我们爱给他买什么，他穿什么，就算去外边玩，也很少有人征求他的意见，我们自己商量好就行了。这样的家庭定位和家庭地位适用于大部分男性，这也正是主流文明成功的秘诀，就是通过婚姻、家庭、后代捆绑男性，使男性从自由自在的不安稳因素变成可预测可掌握的社会劳动力。很多人觉得男人过了 35 岁或者 40 岁就开始认命了，不怎么折腾了，开始变得沉默，变得冷漠，开始循规蹈矩的工作生活了。但是其实这不叫认命，这叫黑化，就过了 35 岁以后，越来越多的男人开始不抽烟、不喝酒，不玩游戏，甚至连饭都会在公司吃，没有穿着要求，也没有特别的爱好。</p>
<p>生活成本接近于零，整个世界就是工作挣钱，存钱养家，带孩子玩，如果真的能一直做一个糊涂的工具人也很好，就是做一个父母的好儿子，老婆的好丈夫，孩子的好爸爸，领导的好下属。但偏偏大部分男人心里其实都是不糊涂的，他们知道没有人真正会在意一个中年男人到底需求什么，周围的家人貌似都很爱你，但是仔细一想，全部都是基于需求，你如果顺风顺水，那么万事达，一旦丧失劳动力家庭地位，分分钟还不如一条狗，毕竟狗还能卖萌讨主人开心。明白了这一点之后，世界会越来越真实，自己也会越来越沉默。如果你是女性，听到这里千万不要跑回去体贴的问你丈夫到底喜欢什么，最好别问，问了会很容易让他破房，关键是他破房以后没地方哭。男人的这种黑话是不可逆的，一瞬间他就会理解很多以前不理解的人和事。男人被需求我觉得是正常的，努力挣钱存钱也是对的，但其实对于大部分普通的中年男人来说，这辈子都挣不到足够东的。</p>
<p>钱，因为你挣钱的速度永远赶不上这个社会的要求，或者说你整个家庭的需求，遇到极端情况甚至会出现生存问题。但是不要因此怀疑自己的能力，挣不到足够多的钱并不完全是能力问题，这背后的真正原因是不能明说的。你可以想一下啊，如果说让你挣到足够多的钱，那谁来拉车呢？就是有部分人他是在制度之外的，专门搞制度设计，做极限施压的。男人的累正是因为一边要接受这种不成正比的付出和回报，另一方面还要努力去满足来自周围的需求，最关键的是自身并不能得到足够的理解。其实很多男人在结婚的那一刻就已经死了，后面的人生只不过是冬虫夏草里面的那只虫而已。</p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的超市成本管理系统</title>
    <url>/2022/10/15/%E5%9F%BA%E4%BA%8ESpringBoot%E7%9A%84%E8%B6%85%E5%B8%82%E6%88%90%E6%9C%AC%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的超市成本管理系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>管理员：系统登录，修改密码，系统定制，数据统计（七天内订单，入库，出库信息统计），订单类型统计，售出统计，供应商准入管理，订单管理，出库记录（查看出库详情，导出出库单），入库记录（查看入库详情，导出入库单）</p>
<p>员工管理（修改员工详细信息），员工薪资涨幅（员工涨幅统计），员工薪资发放记录，库房管理，盘库统计，物品出入库详情</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>system<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/b0ee63524e1473578f7f1c49e9ed534.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/3ad8a82ffa2d8bfd1293d5772b554c8.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/a6becf78bc5b5c47be476e73aab4229.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1e9d5f6a7142421fe5c09fa03d37ab2.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/60205b77c69c7ea0d9d4cb5e18e33d1.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/eb815c82c3b6b8b50c54d6f9288aabc.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/04083fe7f139860f7b8428b7f171756.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/bd14cfb08f1f2e0cac8f03b85a100af.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/7ba91cf08f3ddd2018424719dd9dbf8.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/b3819f127084af2444feeb1d283c816.jpg"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p><a href="https://www.bilibili.com/video/BV1Kg411a7jT/">项目视频：基于SpringBoot的超市成本管理系统</a></p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#x6e;&#x31;&#x6b;&#x65;&#x32;&#107;&#x65;&#64;&#x67;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;">&#x66;&#x61;&#x6e;&#x31;&#x6b;&#x65;&#x32;&#107;&#x65;&#64;&#x67;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>Optional使用</title>
    <url>/2022/10/21/Optional%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>利用Java8的新特性 Optional来尽量简化代码同时高效处理NPE</p>
<h3 id="使用Optional"><a href="#使用Optional" class="headerlink" title="使用Optional"></a>使用Optional</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 返回person对象，如果为空返回信息</span></span><br><span class="line">Person person=<span class="keyword">new</span> Person();</span><br><span class="line"><span class="keyword">return</span> Optional.ofNullable(person).orElse(<span class="string">&quot;person为null&quot;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="创建Optional对象"><a href="#创建Optional对象" class="headerlink" title="创建Optional对象"></a>创建Optional对象</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1、创建一个包装对象值为空的Optional对象</span></span><br><span class="line">Optional&lt;String&gt; optEmpty = Optional.empty();</span><br><span class="line"><span class="comment">// 2、创建包装对象值非空的Optional对象</span></span><br><span class="line">Optional&lt;String&gt; optOf = Optional.of(<span class="string">&quot;optional&quot;</span>);</span><br><span class="line"><span class="comment">// 3、创建包装对象值允许为空也可以不为空的Optional对象</span></span><br><span class="line">Optional&lt;String&gt; optOfNullable1 = Optional.ofNullable(<span class="keyword">null</span>);</span><br><span class="line">Optional&lt;String&gt; optOfNullable2 = Optional.ofNullable(<span class="string">&quot;optional&quot;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="Optional-get-方法-返回对象的值"><a href="#Optional-get-方法-返回对象的值" class="headerlink" title="Optional.get()方法(返回对象的值)"></a>Optional.get()方法(返回对象的值)</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchElementException(<span class="string">&quot;No value present&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Optional.ofNullable(person).get();</span><br></pre></td></tr></table></figure>
<h3 id="Optional-isPresent-方法-判读是否为空"><a href="#Optional-isPresent-方法-判读是否为空" class="headerlink" title="Optional.isPresent()方法(判读是否为空)"></a>Optional.isPresent()方法(判读是否为空)</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Boolean <span class="title">isPresent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> value != <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Optional.ofNullable(person).isPresent())&#123;</span><br><span class="line">    <span class="comment">//写不为空的逻辑</span></span><br><span class="line">    System.out.println(<span class="string">&quot;不为空&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//写为空的逻辑</span></span><br><span class="line">    System.out.println(<span class="string">&quot;为空&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Optional-ifPresent-方法-判读是否为空并返回函数"><a href="#Optional-ifPresent-方法-判读是否为空并返回函数" class="headerlink" title="Optional.ifPresent()方法(判读是否为空并返回函数)"></a>Optional.ifPresent()方法(判读是否为空并返回函数)</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 如果对象非空，则运行函数体</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ifPresent</span><span class="params">(Consumer&lt;? <span class="keyword">super</span> T&gt; consumer)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//如果value不为空，则运行accept方法体</span></span><br><span class="line">    <span class="keyword">if</span> (value != <span class="keyword">null</span>)</span><br><span class="line">        consumer.accept(value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Optional.ofNullable(person).ifPresent(p -&gt; System.out.println(<span class="string">&quot;年龄&quot;</span>+p.getAge()));</span><br></pre></td></tr></table></figure>

<h3 id="Optional-filter-方法-过滤对象"><a href="#Optional-filter-方法-过滤对象" class="headerlink" title="Optional.filter()方法(过滤对象)"></a>Optional.filter()方法(过滤对象)</h3><p>filter()方法大致意思是，接受一个对象，然后对他进行条件过滤，如果条件符合则返回Optional对象本身，如果不符合则返回空Optional</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Optional.ofNullable(person).filter(p -&gt; p.getAge()&gt;<span class="number">50</span>);</span><br></pre></td></tr></table></figure>

<h3 id="Optional-map-方法-对象进行二次包装"><a href="#Optional-map-方法-对象进行二次包装" class="headerlink" title="Optional.map()方法(对象进行二次包装)"></a>Optional.map()方法(对象进行二次包装)</h3><p>map()方法将对应Funcation函数式接口中的对象，进行二次运算，封装成新的对象然后返回在Optional中</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String optName = Optional.ofNullable(person).map(p -&gt; person.getName()).orElse(<span class="string">&quot;name为空&quot;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="Optional-orElse-方法-为空返回对象"><a href="#Optional-orElse-方法-为空返回对象" class="headerlink" title="Optional.orElse()方法(为空返回对象)"></a>Optional.orElse()方法(为空返回对象)</h3><p>如果包装对象为空的话，就执行orElse方法里的value，如果非空，则返回写入对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">orElse</span><span class="params">(T other)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//如果非空，返回value，如果为空，返回other</span></span><br><span class="line">    <span class="keyword">return</span> value != <span class="keyword">null</span> ? value : other;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Optional-orElseGet-方法-为空返回Supplier对象"><a href="#Optional-orElseGet-方法-为空返回Supplier对象" class="headerlink" title="Optional.orElseGet()方法(为空返回Supplier对象)"></a>Optional.orElseGet()方法(为空返回Supplier对象)</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">orElseGet</span><span class="params">(Supplier&lt;? extends T&gt; other)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> value != <span class="keyword">null</span> ? value : other.get();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Optional&lt;Supplier&lt;Person&gt;&gt; sup=Optional.ofNullable(Person::<span class="keyword">new</span>);</span><br><span class="line"><span class="comment">//调用get()方法，此时才会调用对象的构造方法，即获得到真正对象</span></span><br><span class="line">Optional.ofNullable(person).orElseGet(sup.get());</span><br></pre></td></tr></table></figure>

<h3 id="Optional-orElseThrow-方法-为空返回异常"><a href="#Optional-orElseThrow-方法-为空返回异常" class="headerlink" title="Optional.orElseThrow()方法(为空返回异常)"></a>Optional.orElseThrow()方法(为空返回异常)</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Optional.ofNullable(member).orElseThrow(() -&gt; <span class="keyword">new</span> ServiceException(<span class="string">&quot;没有查询的相关数据&quot;</span>));</span><br></pre></td></tr></table></figure>

<blockquote>
<p>实战场景再现</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//查询一个对象</span></span><br><span class="line">Member member = memberService.selectByIdNo(request.getCertificateNo());</span><br><span class="line"><span class="comment">//使用ofNullable加orElseThrow做判断和操作</span></span><br><span class="line">Optional.ofNullable(member).orElseThrow(() -&gt; <span class="keyword">new</span> ServiceException(<span class="string">&quot;没有查询的相关数据&quot;</span>));</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="function">Optional&lt;Location&gt; <span class="title">findLocationById</span><span class="params">(String id)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot+Vue实现微信扫码支付、退款功能</title>
    <url>/2022/10/20/SpringBoot+Vue%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98%E9%80%80%E6%AC%BE/</url>
    <content><![CDATA[<h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.wxpay<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>wxpay-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="支付"><a href="#支付" class="headerlink" title="支付"></a>支付</h2><h3 id="在配置类添加申请的商家号信息"><a href="#在配置类添加申请的商家号信息" class="headerlink" title="在配置类添加申请的商家号信息"></a>在配置类添加申请的商家号信息</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#关联的公众号appid</span><br><span class="line">weixin.pay.appid=wxXXXXXXX</span><br><span class="line">#商户号</span><br><span class="line">weixin.pay.partner=XXXXXXXXX</span><br><span class="line">#商户key</span><br><span class="line">weixin.pay.partnerkey=XXXXXXXXXX</span><br></pre></td></tr></table></figure>

<h3 id="添加微信生成二维码service"><a href="#添加微信生成二维码service" class="headerlink" title="添加微信生成二维码service"></a>添加微信生成二维码service</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeiXinServiceImpl</span> <span class="keyword">implements</span> <span class="title">WeiXinService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PaymentInfoService paymentInfoService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderInfoService orderInfoService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> WeiXinService weiXinService;</span><br><span class="line">    <span class="comment">//生成支付的二维码</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map <span class="title">createNative</span><span class="params">(Long orderId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//支付记录表添加数据</span></span><br><span class="line">        <span class="comment">//根据单号查询订单相关信息</span></span><br><span class="line">        OrderInfo orderInfo = orderInfoService.getById(orderId);</span><br><span class="line">        <span class="keyword">if</span> (orderInfo == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> OrderException(<span class="number">20001</span>,<span class="string">&quot;订单不存在&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//添加订单状态</span></span><br><span class="line">        paymentInfoService.savePaymentInfo(orderInfo,PaymentTypeEnum.WEIXIN.getStatus());</span><br><span class="line">        <span class="comment">//调用微信接口返回二维码</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//2 调用微信接口，得到二维码地址等信息</span></span><br><span class="line">            <span class="comment">//封装传递微信地址参数</span></span><br><span class="line">            Map paramMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">            paramMap.put(<span class="string">&quot;appid&quot;</span>, ConstantPropertiesUtils.APPID); <span class="comment">//公众号id</span></span><br><span class="line">            paramMap.put(<span class="string">&quot;mch_id&quot;</span>, ConstantPropertiesUtils.PARTNER); <span class="comment">//商户号</span></span><br><span class="line">            paramMap.put(<span class="string">&quot;nonce_str&quot;</span>, WXPayUtil.generateNonceStr()); <span class="comment">//随机字符串，调用工具类</span></span><br><span class="line"> </span><br><span class="line">            Date reserveDate = orderInfo.getReserveDate();</span><br><span class="line">            String reserveDateString = <span class="keyword">new</span> DateTime(reserveDate).toString(<span class="string">&quot;yyyy/MM/dd&quot;</span>);</span><br><span class="line">            String body = reserveDateString + <span class="string">&quot;就诊&quot;</span>+ orderInfo.getDepname();</span><br><span class="line">            paramMap.put(<span class="string">&quot;body&quot;</span>, body);<span class="comment">//扫码后手机显示内容</span></span><br><span class="line"> </span><br><span class="line">            paramMap.put(<span class="string">&quot;out_trade_no&quot;</span>, orderInfo.getOutTradeNo()); <span class="comment">//订单流水号</span></span><br><span class="line">            <span class="comment">//paramMap.put(&quot;total_fee&quot;, order.getAmount().multiply(new BigDecimal(&quot;100&quot;)).longValue()+&quot;&quot;);</span></span><br><span class="line">            paramMap.put(<span class="string">&quot;total_fee&quot;</span>, <span class="string">&quot;1&quot;</span>);<span class="comment">//TODO 为了测试  支付金额</span></span><br><span class="line">            paramMap.put(<span class="string">&quot;spbill_create_ip&quot;</span>, <span class="string">&quot;127.0.0.1&quot;</span>);  <span class="comment">//终端ip</span></span><br><span class="line">            paramMap.put(<span class="string">&quot;notify_url&quot;</span>, <span class="string">&quot;http://xxxxxxxxx&quot;</span>);<span class="comment">//回调地址</span></span><br><span class="line">            paramMap.put(<span class="string">&quot;trade_type&quot;</span>, <span class="string">&quot;NATIVE&quot;</span>); <span class="comment">//二维码类型</span></span><br><span class="line">            <span class="comment">//请求微信生成二维码接口</span></span><br><span class="line">            HttpClient client = <span class="keyword">new</span> HttpClient(<span class="string">&quot;https://api.mch.weixin.qq.com/pay/unifiedorder&quot;</span>);</span><br><span class="line">            <span class="comment">//设置post请求相关参数</span></span><br><span class="line">            <span class="comment">//微信支付要求传递参数xml格式</span></span><br><span class="line">            <span class="comment">//把封装map集合变成xml，加密处理，传输</span></span><br><span class="line">            String xml = WXPayUtil.generateSignedXml(paramMap, ConstantPropertiesUtils.PARTNERKEY);</span><br><span class="line">            client.setXmlParam(xml);</span><br><span class="line">            <span class="comment">//支持https协议</span></span><br><span class="line">            client.setHttps(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">//发送</span></span><br><span class="line">            client.post();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">//调用微信接口，返回数据,xml格式的数据</span></span><br><span class="line">            String resultXml = client.getContent();</span><br><span class="line">            System.out.println(<span class="string">&quot;微信二维码：&quot;</span>+resultXml);</span><br><span class="line">            <span class="comment">//把xml格式数据转换map</span></span><br><span class="line">            Map&lt;String, String&gt; resultMap = WXPayUtil.xmlToMap(resultXml);</span><br><span class="line"> </span><br><span class="line">            Map map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            map.put(<span class="string">&quot;orderId&quot;</span>, orderId);</span><br><span class="line">            map.put(<span class="string">&quot;totalFee&quot;</span>, orderInfo.getAmount());</span><br><span class="line">            map.put(<span class="string">&quot;resultCode&quot;</span>, resultMap.get(<span class="string">&quot;result_code&quot;</span>));</span><br><span class="line">            map.put(<span class="string">&quot;codeUrl&quot;</span>, resultMap.get(<span class="string">&quot;code_url&quot;</span>));  <span class="comment">//微信二维码地址</span></span><br><span class="line"> </span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> orderException(<span class="number">20001</span>,<span class="string">&quot;生成二维码失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="控制层"><a href="#控制层" class="headerlink" title="控制层"></a>控制层</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/order/weixin&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeixinController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> WeiXinService weixinPayService;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 下单 生成二维码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/createNative/&#123;orderId&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">createNative</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@ApiParam(name = &quot;orderId&quot;, value = &quot;订单id&quot;, required = true)</span></span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="meta">@PathVariable(&quot;orderId&quot;)</span> Long orderId)</span> </span>&#123;</span><br><span class="line">        Map map = weixinPayService.createNative(orderId);</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(map);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="前端微信支付二维码，wx-js定义方法"><a href="#前端微信支付二维码，wx-js定义方法" class="headerlink" title="前端微信支付二维码，wx.js定义方法"></a>前端微信支付二维码，wx.js定义方法</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">createNative</span>(<span class="params">orderId</span>)</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> request(&#123;</span><br><span class="line"> <span class="attr">url</span>: <span class="string">`/api/order/weixin/createNative/<span class="subst">$&#123;orderId&#125;</span>`</span>,</span><br><span class="line"> <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line"> &#125;)</span><br><span class="line">&#125;</span><br><span class="line">安装npm install vue-qriously</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> weixinApi <span class="keyword">from</span> <span class="string">&#x27;@/api/yygh/wx&#x27;</span></span><br><span class="line"> </span><br><span class="line">    &lt;!-- 微信支付弹出框 --&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">:visible.sync</span>=<span class="string">&quot;dialogPayVisible&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: left&quot;</span> <span class="attr">:append-to-body</span>=<span class="string">&quot;true&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span> @<span class="attr">close</span>=<span class="string">&quot;closeDialog&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;operate-view&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 350px;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper wechat&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">qriously</span> <span class="attr">:value</span>=<span class="string">&quot;payObj.codeUrl&quot;</span> <span class="attr">:size</span>=<span class="string">&quot;220&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;line-height: 25px;margin-bottom: 40px;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                请使用微信扫一扫<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                扫描二维码支付</span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//生成二维码</span></span><br><span class="line">    <span class="function"><span class="title">pay</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="comment">//弹框</span></span><br><span class="line">      <span class="built_in">this</span>.dialogPayVisible = <span class="literal">true</span></span><br><span class="line">      <span class="comment">//调用接口</span></span><br><span class="line">      weixinApi.createNative(<span class="built_in">this</span>.orderId).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.payObj = response.data</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.payObj.codeUrl == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">          <span class="built_in">this</span>.dialogPayVisible = <span class="literal">false</span></span><br><span class="line">          <span class="built_in">this</span>.$message.error(<span class="string">&quot;支付错误&quot;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">//每隔3秒查询一次支付状态</span></span><br><span class="line">          <span class="built_in">this</span>.timer = <span class="built_in">setInterval</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.queryPayStatus(<span class="built_in">this</span>.orderId)</span><br><span class="line">          &#125;,<span class="number">3000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure>

<h3 id="查询订单支付状态，添加定时器方法，每隔3秒去查询一次支付状态"><a href="#查询订单支付状态，添加定时器方法，每隔3秒去查询一次支付状态" class="headerlink" title="查询订单支付状态，添加定时器方法，每隔3秒去查询一次支付状态"></a>查询订单支付状态，添加定时器方法，每隔3秒去查询一次支付状态</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">queryPayStatus</span>(<span class="params">orderId</span>)</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> request(&#123;</span><br><span class="line"> <span class="attr">url</span>: <span class="string">`/api/order/weixin/queryPayStatus/<span class="subst">$&#123;orderId&#125;</span>`</span>,</span><br><span class="line"> <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line"> &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h3 id="封装信息请求微信提供的接口，判断是否支付成功"><a href="#封装信息请求微信提供的接口，判断是否支付成功" class="headerlink" title="封装信息请求微信提供的接口，判断是否支付成功"></a>封装信息请求微信提供的接口，判断是否支付成功</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map <span class="title">queryPayStatus</span><span class="params">(Long orderId, String paymentType)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1 根据orderId查询订单信息</span></span><br><span class="line">    OrderInfo orderInfo = orderInfoService.getById(orderId);</span><br><span class="line">    <span class="keyword">if</span>(orderInfo == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> orderException(<span class="number">20001</span>,<span class="string">&quot;订单不存在&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//2 封装微信接口需要数据</span></span><br><span class="line">        Map paramMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        paramMap.put(<span class="string">&quot;appid&quot;</span>, ConstantPropertiesUtils.APPID);</span><br><span class="line">        paramMap.put(<span class="string">&quot;mch_id&quot;</span>, ConstantPropertiesUtils.PARTNER);</span><br><span class="line">        paramMap.put(<span class="string">&quot;out_trade_no&quot;</span>, orderInfo.getOutTradeNo());</span><br><span class="line">        paramMap.put(<span class="string">&quot;nonce_str&quot;</span>, WXPayUtil.generateNonceStr());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3 调用微信接口，传递数据，设置参数</span></span><br><span class="line">        HttpClient client = <span class="keyword">new</span> HttpClient(<span class="string">&quot;https://api.mch.weixin.qq.com/pay/orderquery&quot;</span>);</span><br><span class="line">        client.setXmlParam(WXPayUtil.generateSignedXml(paramMap,ConstantPropertiesUtils.PARTNERKEY));</span><br><span class="line">        client.setHttps(<span class="keyword">true</span>);</span><br><span class="line">        client.post();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4 获取微信接口返回数据</span></span><br><span class="line">        String xml = client.getContent();</span><br><span class="line">        System.out.println(<span class="string">&quot;支付状态返回xml: &quot;</span>+xml);</span><br><span class="line">        Map&lt;String, String&gt; resultMap = WXPayUtil.xmlToMap(xml);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resultMap;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> orderException(<span class="number">20001</span>,<span class="string">&quot;查询失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="查询状态"><a href="#查询状态" class="headerlink" title="查询状态"></a>查询状态</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ApiOperation(value = &quot;查询支付状态&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/queryPayStatus/&#123;orderId&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">queryPayStatus</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="meta">@ApiParam(name = &quot;orderId&quot;, value = &quot;订单id&quot;, required = true)</span></span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="meta">@PathVariable(&quot;orderId&quot;)</span> Long orderId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//调用查询接口</span></span><br><span class="line">    Map&lt;String, String&gt; resultMap = weixinPayService.queryPayStatus(orderId, PaymentTypeEnum.WEIXIN.name());</span><br><span class="line">    <span class="keyword">if</span> (resultMap == <span class="keyword">null</span>) &#123;<span class="comment">//出错</span></span><br><span class="line">        <span class="keyword">return</span> Result.fail().message(<span class="string">&quot;支付出错&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;SUCCESS&quot;</span>.equals(resultMap.get(<span class="string">&quot;trade_state&quot;</span>))) &#123;<span class="comment">//如果成功</span></span><br><span class="line">        <span class="comment">//更改订单状态，处理支付结果</span></span><br><span class="line">        String out_trade_no = resultMap.get(<span class="string">&quot;out_trade_no&quot;</span>);</span><br><span class="line">        paymentInfoService.paySuccess(out_trade_no, PaymentTypeEnum.WEIXIN.getStatus(), resultMap);</span><br><span class="line">        <span class="keyword">return</span> Result.ok().message(<span class="string">&quot;支付成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Result.ok().message(<span class="string">&quot;支付中&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="退款"><a href="#退款" class="headerlink" title="退款"></a>退款</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">weixin.cert=C:\\apiclient_cert.p12</span><br><span class="line"></span><br><span class="line"><span class="comment">//退款</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Boolean <span class="title">refund</span><span class="params">(Long orderId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1 根据订单号查询订单支付记录信息</span></span><br><span class="line">    QueryWrapper&lt;PaymentInfo&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">&quot;order_id&quot;</span>,orderId);</span><br><span class="line">    PaymentInfo paymentInfo = paymentInfoService.getOne(wrapper);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2 TODO 添加退款信息到退款表</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//3 调用微信退款接口</span></span><br><span class="line">        <span class="comment">//封装微信接口需要数据</span></span><br><span class="line">        Map&lt;String,String&gt; paramMap = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">8</span>);</span><br><span class="line">        paramMap.put(<span class="string">&quot;appid&quot;</span>,ConstantPropertiesUtils.APPID);       <span class="comment">//公众账号ID</span></span><br><span class="line">        paramMap.put(<span class="string">&quot;mch_id&quot;</span>,ConstantPropertiesUtils.PARTNER);   <span class="comment">//商户编号</span></span><br><span class="line">        paramMap.put(<span class="string">&quot;nonce_str&quot;</span>,WXPayUtil.generateNonceStr());</span><br><span class="line">        paramMap.put(<span class="string">&quot;transaction_id&quot;</span>,paymentInfo.getTradeNo()); <span class="comment">//微信订单号</span></span><br><span class="line">        paramMap.put(<span class="string">&quot;out_trade_no&quot;</span>,paymentInfo.getOutTradeNo()); <span class="comment">//商户订单编号</span></span><br><span class="line">        paramMap.put(<span class="string">&quot;out_refund_no&quot;</span>,<span class="string">&quot;tk&quot;</span>+paymentInfo.getOutTradeNo()); <span class="comment">//商户退款单号</span></span><br><span class="line">        <span class="comment">//       paramMap.put(&quot;total_fee&quot;,paymentInfoQuery.getTotalAmount().multiply(new BigDecimal(&quot;100&quot;)).longValue()+&quot;&quot;);</span></span><br><span class="line">        <span class="comment">//       paramMap.put(&quot;refund_fee&quot;,paymentInfoQuery.getTotalAmount().multiply(new BigDecimal(&quot;100&quot;)).longValue()+&quot;&quot;);</span></span><br><span class="line">        paramMap.put(<span class="string">&quot;total_fee&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        paramMap.put(<span class="string">&quot;refund_fee&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置接口和参数</span></span><br><span class="line">        HttpClient client = <span class="keyword">new</span> HttpClient(<span class="string">&quot;https://api.mch.weixin.qq.com/secapi/pay/refund&quot;</span>);</span><br><span class="line">        client.setXmlParam(WXPayUtil.generateSignedXml(paramMap,ConstantPropertiesUtils.PARTNERKEY));</span><br><span class="line">        client.setHttps(<span class="keyword">true</span>);</span><br><span class="line">        client.setCert(<span class="keyword">true</span>);<span class="comment">//退款证书</span></span><br><span class="line">        client.setCertPassword(ConstantPropertiesUtils.PARTNER);<span class="comment">//证书密码 商户key</span></span><br><span class="line">        <span class="comment">//发送post请求</span></span><br><span class="line">        client.post();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4、返回退款数据</span></span><br><span class="line">        String xml = client.getContent();</span><br><span class="line">        Map&lt;String, String&gt; resultMap = WXPayUtil.xmlToMap(xml);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的食堂采购系统</title>
    <url>/2022/11/19/Java%E9%A3%9F%E5%A0%82%E9%87%87%E8%B4%AD%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的食堂采购系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>商户管理，套餐管理，申请记录，库房管理，入库记录，出库记录，采购计划，报表统计，耗材类别，出入库物品明细</p>
<p>商户制定申请物品-&gt;管理员审批制定采购计划-&gt;采购员采购-&gt;入库-&gt;出库</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[采购员]<br>caigou<br>1234qwer</p>
<p>[学生]<br>lisi<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/6f691b423447b54af6dc384af6bfe9e.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/a57af3c4d496ae928d9f157b2334c19.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/6d2992d61f992b2606f1b2c4cc4f767.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/9993d37501b750568459485199a6042.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/f4f56352387c823e5c9165a77ab5f05.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/2552c7a1c079c84ad5d860b5270f502.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/da441d2c2cc91e673614555debe2e67.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/634bf67927f19ca2c35722438ef7555.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/cc7b251d167dde516dd888cb2dafe0a.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/61d611a5513d1b50756adee33bb86ce.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/a06652986cc2758f9995a3590ba1990.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/7ea8848d81a5741350caf73f5eb61ea.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#x6e;&#49;&#107;&#101;&#x32;&#x6b;&#101;&#64;&#x67;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;">&#x66;&#x61;&#x6e;&#49;&#107;&#101;&#x32;&#x6b;&#101;&#64;&#x67;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>受益匪浅的书籍</title>
    <url>/2022/11/22/%E5%8F%97%E7%9B%8A%E5%8C%AA%E6%B5%85%E7%9A%84%E4%B9%A6%E7%B1%8D/</url>
    <content><![CDATA[<p>即兴的智慧 </p>
<p>了不起的我 </p>
<p>1984 </p>
<p>美丽新世界 </p>
<p>英雄志 </p>
<p>活着 </p>
<p>时间简史 </p>
<p>人生 </p>
<p>思考，快与慢 </p>
<p>普林斯顿微积分读本 </p>
<p>独裁者手册 </p>
<p>科学元典合集（套装 29 册） </p>
<p>爱的博弈 </p>
<p>平凡的世界 </p>
<p>动物庄园 </p>
<p>红太阳是怎样升起的 </p>
<p>余英时的小时 </p>
<p>被讨厌的勇气 </p>
<p>罪与罚 </p>
<p>提问的智慧 </p>
<p>学会提问 </p>
<p>社会心理学 </p>
<p>影响力 </p>
<p>怪诞行为学 </p>
<p>忏悔录 </p>
<p>富爸爸穷爸爸 </p>
<p>小狗钱钱 </p>
<p>原生家庭：如何修补自己的性格缺陷 </p>
<p>基督山伯爵 </p>
<p>献给阿尔吉农的花束 </p>
<p>局外人 </p>
<p>阎连科的小说 </p>
<p>贫穷的本质 </p>
<p>像火箭科学家一样思考 </p>
<p>夹边沟记事 </p>
<p>资本论 </p>
<p>说谎者的扑克牌 </p>
<p>福各行为模型 </p>
<p>刘擎西方现代思想讲义 </p>
<p>可能性的艺术：比较政治学 30 讲 </p>
<p>大学之路 </p>
<p>极客电台 </p>
<p>李光耀观天下 </p>
<p>邓小平时代 </p>
<p>如何让你爱的人爱上你 </p>
<p>把时间当作朋友 </p>
<p>谈人的理性 </p>
<p>吃掉那只青蛙 </p>
<p>禅与摩托车维修艺术 </p>
<p>惨败 </p>
<p>新教伦理 </p>
<p>那不勒斯四部曲 </p>
<p>资治通鉴 </p>
<p>云边有个小卖部 </p>
<p>System Design Interview: An Insider’s Guide </p>
<p>纯粹理性批判 </p>
<p>第七天 </p>
<p>贪婪的多巴胺 </p>
<p>卡拉马佐夫兄弟 </p>
<p>陆犯焉识 </p>
<p>雪国 </p>
<p>烧纸 </p>
<p>挪威的森林 </p>
<p>秦制两千年 </p>
<p>秋园 </p>
<p>世界观 </p>
<p>源泉 </p>
<p>夜晚的潜水艇 </p>
<p>人类简史 </p>
<p>存在主义咖啡馆 </p>
<p>红楼梦 </p>
<p>生命不能承受之轻 </p>
<p>历史的先声 </p>
<p>How to Take Smart Notes </p>
<p>SICP </p>
<p>如何阅读一本书 </p>
<p>高效人士的七种习惯 </p>
<p>异乡人 </p>
<p>约翰克利斯朵夫 </p>
<p>你当像鸟飞往你的山 </p>
<p>想象的共同体 </p>
<p>旧制度与大革命 </p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>Beast</title>
    <url>/2022/11/25/%E5%AF%B9%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%A4%B1%E6%9C%9B%E7%9A%84CN/</url>
    <content><![CDATA[<p>为了那些衣冠禽兽而故作坚强姿态</p>
<p>归家躺下却如一无所有的死尸毫无生气</p>
<p>蝇营狗苟的屁民们活出自我吧</p>
<p>不要被政府施舍的五斗米压折脊梁</p>
<p>要为了人民而昂然挺立世间</p>
<p>为了我们的亲朋和友邻</p>
<p>在我们自己的土地上我们生而自由</p>
<p>决不能如蝼蚁那般卑微苟且地活着</p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot拦截异常</title>
    <url>/2022/12/08/SpringBoot%E6%8B%A6%E6%88%AA%E5%BC%82%E5%B8%B8/</url>
    <content><![CDATA[<p>如果你想拦截异常，你可以在你的Springboot应用程序中定义一个统一的异常处理器来实现。</p>
<p>例如，你可以使用@ControllerAdvice注解来定义一个异常处理器，然后使用@ExceptionHandler注解来指定拦截哪些异常</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全局异常处理器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> wxl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalExceptionHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(GlobalExceptionHandler.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基础异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(BaseException.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResult <span class="title">baseException</span><span class="params">(BaseException e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> AjaxResult.error(e.getDefaultMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 业务异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(CustomException.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResult <span class="title">businessException</span><span class="params">(CustomException e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNull(e.getCode())) &#123;</span><br><span class="line">            <span class="keyword">return</span> AjaxResult.error(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> AjaxResult.error(e.getCode(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResult <span class="title">handleException</span><span class="params">(Exception e)</span> </span>&#123;</span><br><span class="line">        log.error(e.getMessage(), e);</span><br><span class="line">        <span class="keyword">return</span> AjaxResult.error(e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义验证异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(BindException.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResult <span class="title">validatedBindException</span><span class="params">(BindException e)</span> </span>&#123;</span><br><span class="line">        log.error(e.getMessage(), e);</span><br><span class="line">        String message = e.getAllErrors().get(<span class="number">0</span>).getDefaultMessage();</span><br><span class="line">        <span class="keyword">return</span> AjaxResult.error(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义验证异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(MethodArgumentNotValidException.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">validExceptionHandler</span><span class="params">(MethodArgumentNotValidException e)</span> </span>&#123;</span><br><span class="line">        log.error(e.getMessage(), e);</span><br><span class="line">        String message = e.getBindingResult().getFieldError().getDefaultMessage();</span><br><span class="line">        <span class="keyword">return</span> AjaxResult.error(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 权限异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(PreAuthorizeException.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResult <span class="title">preAuthorizeException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> AjaxResult.error(<span class="string">&quot;没有权限，请联系管理员授权&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 演示模式异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(DemoModeException.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResult <span class="title">demoModeException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> AjaxResult.error(<span class="string">&quot;演示模式，不允许操作&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(DuplicateKeyException.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResult <span class="title">duplicateKeyHandler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> AjaxResult.error(<span class="string">&quot;数据已存在，请勿重复提交&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(DataAccessException.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResult <span class="title">dataAccessException</span><span class="params">(DataAccessException e)</span> </span>&#123;</span><br><span class="line">        log.error(<span class="string">&quot;JDBC异常：&quot;</span> + e.getMessage(), e);</span><br><span class="line">        <span class="keyword">return</span> AjaxResult.error(<span class="string">&quot;系统错误，请联系管理员！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(HttpMessageNotReadableException.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResult <span class="title">httpMessageNotReadableException</span><span class="params">(HttpMessageNotReadableException e)</span> </span>&#123;</span><br><span class="line">        log.error(<span class="string">&quot;Http请求参数转换异常：&quot;</span> + e.getMessage(), e);</span><br><span class="line">        <span class="keyword">return</span> AjaxResult.error(<span class="string">&quot;系统错误，请联系管理员！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在这个例子中，我们定义了一个名为GlobalExceptionHandler的异常处理器，并使用@ExceptionHandler注解来指定要拦截的异常类型。这样，当应用程序中发生Exception类型的异常时，该异常处理器就会被调用。</p>
<p>在异常处理器的方法中，你可以自定义如何处理这些异常。例如，你可以将异常信息记录到日志中，或者向用户展示一个错误消息，或者返回一个错误页面等。</p>
<p>总之，使用异常处理器是一种比较简单和优雅的方式来拦截异常，并对其进行统一处理。</p>
<h2 id="ControllerAdvice和-RestControllerAdvice的区别"><a href="#ControllerAdvice和-RestControllerAdvice的区别" class="headerlink" title="@ControllerAdvice和@RestControllerAdvice的区别"></a>@ControllerAdvice和@RestControllerAdvice的区别</h2><p>@ControllerAdvice注解和@RestControllerAdvice注解都可以用于定义一个异常处理器，但它们之间有一些区别：</p>
<p>@ControllerAdvice注解可以用于处理所有带有@Controller注解的控制器中的异常。这种类型的异常处理器通常用于处理Web应用程序中的异常，并向用户展示一个错误页面。<br>@RestControllerAdvice注解可以用于处理所有带有@RestController注解的控制器中的异常。这种类型的异常处理器通常用于处理RESTful接口中的异常，并将错误信息以JSON格式返回给客户端。<br>总之，@ControllerAdvice注解和@RestControllerAdvice注解都可以用于定义一个异常处理器，但它们的使用场景不同，应根据实际情况来选择合适的注解。</p>
<blockquote>
<p>如果你在微服务应用程序中定义了一个带有@ControllerAdvice注解的异常处理器，但它并没有被调用，那么可能是因为以下几种原因</p>
</blockquote>
<ol>
<li>异常处理器类上没有使用@ControllerAdvice注解：如果你的异常处理器类上没有使用@ControllerAdvice注解，那么它就不会被识别为一个异常处理器，因此也不会被调用。</li>
<li>异常处理方法上没有使用@ExceptionHandler注解：如果你的异常处理方法上没有使用@ExceptionHandler注解，那么它就不会被识别为一个异常处理方法，因此也不会被调用。</li>
<li>异常处理方法没有指定要处理的异常类型：如果你的异常处理方法没有指定要处理的异常类型，那么它就不会被调用。例如，如果你的异常处理方法只处理IOException类型的异常，那么如果应用程序中发生的异常不是IOException类型，那么这个方法就不会被调用。</li>
</ol>
<p>总之，如果你定义的异常处理器没有被调用，那么最可能的原因就是你的异常处理器类没有使用@ControllerAdvice</p>
<h2 id="日志异步线程池入库"><a href="#日志异步线程池入库" class="headerlink" title="日志异步线程池入库"></a>日志异步线程池入库</h2><blockquote>
<p>线程池配置</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 异步线程池配置</span></span><br><span class="line"><span class="comment"> * 注1：不指定此线程池时，<span class="doctag">@Async</span>调用默认线程池，应注意默认线程池易引发OOM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(AsyncConfig.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;asyncTaskExecutor&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AsyncTaskExecutor <span class="title">asyncTaskExecutor</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ThreadPoolTaskExecutor executor = <span class="keyword">new</span> ThreadPoolTaskExecutor();</span><br><span class="line">        <span class="comment">//核心线程数</span></span><br><span class="line">        executor.setCorePoolSize(<span class="number">10</span>);</span><br><span class="line">        <span class="comment">//最大线程数</span></span><br><span class="line">        executor.setMaxPoolSize(<span class="number">50</span>);</span><br><span class="line">        <span class="comment">//配置队列大小</span></span><br><span class="line">        executor.setQueueCapacity(<span class="number">500</span>);</span><br><span class="line">        <span class="comment">//活跃时间</span></span><br><span class="line">        executor.setKeepAliveSeconds(<span class="number">60</span>);</span><br><span class="line">        <span class="comment">//配置线程池前缀</span></span><br><span class="line">        executor.setThreadNamePrefix(<span class="string">&quot;async-task-thread-pool-&quot;</span>);</span><br><span class="line">        <span class="comment">//核心线程闲置超时则销毁</span></span><br><span class="line">        executor.setAllowCoreThreadTimeOut(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//子线程装饰器，用于将主线程数据传递给子线程</span></span><br><span class="line">        executor.setTaskDecorator(<span class="keyword">new</span> ContextCopyingDecorator());</span><br><span class="line">        <span class="comment">//拒绝策略：当线程池达到MaxPoolSize，不在新线程中执行任务，而是有调用者所在的线程来执行</span></span><br><span class="line">        executor.setRejectedExecutionHandler(<span class="keyword">new</span> ThreadPoolExecutor.CallerRunsPolicy());</span><br><span class="line">        executor.initialize();</span><br><span class="line">        <span class="keyword">return</span> executor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ContextCopyingDecorator</span> <span class="keyword">implements</span> <span class="title">TaskDecorator</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Runnable <span class="title">decorate</span><span class="params">(Runnable runnable)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            log.info(<span class="string">&quot;父线程：&#123;&#125;&quot;</span>, Thread.currentThread());</span><br><span class="line">            <span class="comment">//将主线程请求头内容赋值 threadLocal中的数据拿出并清除</span></span><br><span class="line">            AsyncSecurityUtils.setThreadLocal();</span><br><span class="line">            ThreadContextHolder parentContextHolder = ThreadContextHolder.getInstance();</span><br><span class="line">            Map&lt;String, String&gt; cloneMap = cloneMap(parentContextHolder.getContext());</span><br><span class="line">            parentContextHolder.clear();</span><br><span class="line">            <span class="keyword">return</span> () -&gt; &#123;</span><br><span class="line">                ThreadContextHolder childContextHolder = ThreadContextHolder.getInstance();</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    log.info(<span class="string">&quot;子线程：&#123;&#125;&quot;</span>, Thread.currentThread());</span><br><span class="line">                    childContextHolder.setContext(cloneMap);</span><br><span class="line">                    runnable.run();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="comment">//清除线程池线程threadLocal</span></span><br><span class="line">                    childContextHolder.clear();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, String&gt; <span class="title">cloneMap</span><span class="params">(Map&lt;String, String&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (map != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> HashMap&lt;&gt;(map);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>线程绑定信息</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadContextHolder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Logger log = LoggerFactory.getLogger(ThreadContextHolder.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ThreadLocal&lt;Map&lt;String, String&gt;&gt; threadLocal;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ThreadContextHolder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.threadLocal = <span class="keyword">new</span> ThreadLocal&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取实例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ThreadContextHolder <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SingletonHolder.S_INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 静态MJC类单例模式</span></span><br><span class="line"><span class="comment">     * 单例初使化</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonHolder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadContextHolder S_INSTANCE = <span class="keyword">new</span> ThreadContextHolder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前线程放置共享信息（用完执行clear()，防止内存泄漏）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map 共享信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContext</span><span class="params">(Map&lt;String, String&gt; map)</span> </span>&#123;</span><br><span class="line">        threadLocal.set(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前线程共享信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 共享信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">getContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> threadLocal.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 清空上下文：（防止内存泄漏）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        threadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>异步调用日志服务</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncLogService</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RemoteLogService remoteLogService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存系统日志记录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Async(&quot;asyncTaskExecutor&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveSysLog</span><span class="params">(SysOperLog sysOperLog)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//todo 设置新线程池</span></span><br><span class="line">        remoteLogService.saveLog(sysOperLog);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Logback输出日志到自定义MySQL数据库"><a href="#Logback输出日志到自定义MySQL数据库" class="headerlink" title="Logback输出日志到自定义MySQL数据库"></a>Logback输出日志到自定义MySQL数据库</h2><p>在你的项目中添加Logback的依赖，并在classpath下创建一个名为”logback.xml”的配置文件，其内容如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;DB&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.classic.db.DBAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">connectionSource</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.db.DriverManagerConnectionSource&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">driverClass</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">driverClass</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>jdbc:mysql://localhost:3306/logging?useSSL=false<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">user</span>&gt;</span>username<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span>&gt;</span>password<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">connectionSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;DB&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年关键字总结：转变&amp;缓行</title>
    <url>/2022/12/24/2022%E5%B9%B4%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<blockquote>
<p>转变&amp;缓行</p>
</blockquote>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/5%20-%20SEON%20-%20%E3%83%A2%E3%83%AB%E3%82%AC%E3%83%B3%5Bpid=91226298%5D.jpg"></p>
]]></content>
      <tags>
        <tag>年度记录</tag>
      </tags>
  </entry>
  <entry>
    <title>2023装机心得</title>
    <url>/2023/01/08/2023%E8%A3%85%E6%9C%BA%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<blockquote>
<p>旧主机性能跟不上了，这几天一直看视频选了一套总价2k出头跑分百万的主机，来一起看看吧</p>
</blockquote>
<h2 id="硬件参数"><a href="#硬件参数" class="headerlink" title="硬件参数"></a>硬件参数</h2><p>CPU: AMD 锐龙 R5 5500 全新盒装 ￥509</p>
<p>主板:华硕 B450M-K 全新工包￥349</p>
<p>内存: 金百达 银爵 DDR4 3200 8G*2 全新盒装 ￥247</p>
<p>显卡: 撼讯 RX 5600 XT 6G 竟技版 二手矿卡 ￥616</p>
<p>硬盘:西部数据 SN570 500G NVME m.2 固态硬盘 全新盒装 ￥223</p>
<p>电源: 九州风神 PF500 额定 500W 白牌 全新盒装 ￥172.9</p>
<p>散热:冰曼 6热管 双塔 单风扇 全新盒装 ￥61.9</p>
<p>配件总计: ￥2,177.9</p>
<p>机箱: 先马黑洞 二手 ￥88</p>
<p>显示器: DELL 2k ￥650</p>
<p>显示器机械臂: 双频支架 ￥120</p>
<p>总计: ￥3035</p>
<h2 id="说说问题"><a href="#说说问题" class="headerlink" title="说说问题"></a>说说问题</h2><blockquote>
<p>B450M-K只有VGA、DVI接口，没有HDMI接口，HDMI线和DP线只能插在显卡上</p>
</blockquote>
<blockquote>
<p>在进行CPU超频，设置不了手动电压，超到43，自动电压直接升到1.5以上了，用aida64测试fpu，温度跑100，我见人家5500电压都能压到1.3~1.35，而且温度也才九十度左右。也可能是我哪里没有设置好的原因</p>
</blockquote>
<blockquote>
<p>5600xt的矿卡，暂时看起来没有什么问题，烤机也是正常</p>
</blockquote>
<blockquote>
<p>其他问题：2k屏幕进bios显示输入不支援，我查了一下说是要把显卡驱动删掉重新装，但是试了下没用，1080的没有问题</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2023/01/10/pSmBwo8.jpg" alt="pSmBwo8.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/10/pSmBBFS.png" alt="pSmBBFS.png"></p>
<p><img src="https://s1.ax1x.com/2023/01/10/pSmBddf.jpg" alt="pSmBddf.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的售后服务管理系统</title>
    <url>/2023/01/10/Java%E5%94%AE%E5%90%8E%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的售后服务管理系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok 支付的话用支付宝的沙箱</p>
<h2 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h2><p>1、用户管理<br>2、员工管理<br>3、评价管理<br>4、服务类型<br>5、预约管理<br>6、维修信息<br>7、产品信息<br>8、缴费记录<br>9、工单管理<br>10、公告信息</p>
<h2 id="客户"><a href="#客户" class="headerlink" title="客户"></a>客户</h2><p>1.我的工单<br>2.个人信息<br>3.缴费记录<br>4.维修信息</p>
<h2 id="维修员"><a href="#维修员" class="headerlink" title="维修员"></a>维修员</h2><p>1.我的任务<br>产品售后服务系统</p>
<p>我国信息产业、企业售后服务发展迅速,电商的发展超出了所有人都想象，与此同时也带来了诸多的问题。飞速发展的交易额，带来了大量的GDP增长，然而光鲜的背后是每天无数客服手忙脚乱的为顾客服务。由于顾客对自身生活质量要求越来越高，售后管理业必须随着人们生活水平的提高而改变。伴随着购物规模的不断扩大，售后的各项反馈、投诉，对售后的要求等都将越来越复杂，售后管理系统的自身的管理工作量也将越来越大。人工服务不能做到及时有效的反映，以及做出正确的应对以及保存，迫切需要一个系统来解决这些问题。本项目的出发点力在解决这一困难！</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[客户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357817058.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357975247.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357799210.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357961409.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357774358.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357946190.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357759608.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357926218.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357743535.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357909448.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357718811.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357890366.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357692588.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357874138.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357859761.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1673357829777.jpg"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#97;&#x6e;&#49;&#107;&#x65;&#x32;&#107;&#x65;&#x40;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;">&#102;&#97;&#x6e;&#49;&#107;&#x65;&#x32;&#107;&#x65;&#x40;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
<p>关键词： Java技术；产品售后；管理系统</p>
<h3 id="系统管理模块"><a href="#系统管理模块" class="headerlink" title="系统管理模块"></a>系统管理模块</h3><p>该模块主要用于对系统进行管理，包括系统权限的设置，系统管理员的增加删除，密码的修改，用户的管理等。</p>
<p>系统权限是系统操作的先决条件。设计系统必须对使用系统的人作出分类，不同的人能够使用的权限是不同的，管理员权限不能随意授予，只能交给公司高层使用。普通用户使用的是普通权限。他们只能对自己的信息进行修改查询，不能对其他人进行查询修改，否则信息泄露，公司会变成一团糟。</p>
<h3 id="服务信息管理模块"><a href="#服务信息管理模块" class="headerlink" title="服务信息管理模块"></a>服务信息管理模块</h3><p>该模块主要是对消费者的信息进行管理维护，对客户信息进行数据建档,包括售后服务信息的添加、删除和修改。客户在购买之后，可以对客户信息进行登记录入系统，然后对客户进行跟踪服务，客户可对服务进行点评，提出建议，公司可不定时对客户发放问卷，进行满意度调查。</p>
<h3 id="后台数据库设计"><a href="#后台数据库设计" class="headerlink" title="后台数据库设计"></a>后台数据库设计</h3><p>在数据库被推出的十多年来，数据库管理系统得到了迅猛的发展，从以前简单的应用程序发展成为了拥有自己专属的语言，专门的理论，专业的研究人员的系统软件。通过数据库管理系统，将数据库中的数据变得结构清晰，关系明确，冗余度低，拥有较高的程序独立性，容易增减，条理清楚，易于被相关的系统或者程序调用，因此，不论是大型的系统软件还是小型的应用软件都建立在数据库的基础之上，大大降低了数据保存的难度，使得计算技术得以广泛的推广。在近几年来逐渐流行的大数据分析，也是建立在数据库的基础上，对海量的数据进行相关的分析。随着计算机软件的广泛推广，对于数据库的性能要求越来越高，反过来也促进了数据库技术的发展。通过不同的设计方式设计出来的数据库，在各个方面的优劣也不相同。比如：在大型数据处理系统中，不仅对数据库的稳定性有极高的要求，性能方面也不能差的太多，这就需要使稳定性和高性能达到一个平衡；然而在微型计算机系统中，数据规模不大，需要的是能够及时的响应用户的相关操作，因此对性能就有极高的要求。随着对数据库的研究越来越正式化，科学化，投入不断地增加，已经使得现在的数据库系统从以前的单纯处理加工数据为中心转变为围绕共享的数据库为中心，这种数据库的改变，更加的方便了数据的集中管理，有效的挖掘出数据中蕴含的更加丰富的信息，有利于应用程序对数据的调用，也方便了程序本身的开发和维护，通过对相同的数据整合，不仅节省了数据库空间，更使得数据本身之间的联系更加明确清晰。</p>
<p>同时，数据库中的相关数据，都是从现实生活中抽象得来的。通过对现实世界的实体模型的抽象化，将实体模型的各种属性都量化为一个个具体的数字，不同的数据，表明了实体模型的差异性，相似升值相同的数据，表明了实体模型之间的相似性。所以，通过设计不同的数据库，不同的表，视图，行，列就可以把实体模型转换为数据库模型。所以，数据库设计的好坏，也直接影响了能否完整的将一个实体模型所具有的特点直接彰显出来，突出实体模型之间的差异性。</p>
<p>综上所述，数据库设计是数据库的核心，是数据库管理系统的核心任务，是评价一个系统好坏优劣的主要标准，是能否直截了当地将数据之间的关系展现出来，是能否和现实世界完美的结合起来的主要手段。数据库设计的不好，小则影响了系统中某一个功能模块的流畅运行，大则是的整个系统都不能达到要求，造成巨大的损失。数据库设计的不好，其他一切用来提升数据库性能的方法和手段都会收效甚微。在数据库设计不断发展的进程中，人们逐渐提出了一系列标准和方法来规范数据库的设计。在现在流行的关系型数据中，这些标准和方法叫做范式，换句话说，范式就是某一种关系的集合。现在人们遵循的大多为第三范式，即：在某个数据库表中不能包含其他表中的非主关键字。这种范式的采用，降低了数据冗余，明确了表和表之间的关系，提升了数据库相关操作的性能。</p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>企业问题清单</title>
    <url>/2023/01/17/%E4%BC%81%E4%B8%9A%E9%97%AE%E9%A2%98%E6%B8%85%E5%8D%95/</url>
    <content><![CDATA[<blockquote>
<p>MYSQL迁移数据库到另一台机器 mysqldump</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># windows</span></span><br><span class="line">mysqlddump -u root -p -all-databases &gt; /d/databases.sql</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># linux</span></span><br><span class="line">mysqldump -u root --all-databases &gt; /home/databases.sql</span><br></pre></td></tr></table></figure>


<p>或者直接复制数据目录到新机器</p>
<blockquote>
<p>Linux服务启动脚本</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"> <span class="comment"># @Descripttion: </span></span><br><span class="line"> <span class="comment"># @Author: wangzn</span></span><br><span class="line"> <span class="comment"># @Date: 2022-11-30 17:14:00</span></span><br><span class="line"> <span class="comment"># @LastEditors: wangzn</span></span><br><span class="line"> <span class="comment"># @LastEditTime: 2022-11-30 17:24:36</span></span><br><span class="line"><span class="comment">### </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;  =====关闭isup应用======&quot;</span></span><br><span class="line">ids=`ps -ef | grep <span class="string">&quot;uap-modules-isup-2.2.0.jar&quot;</span> | grep -v <span class="string">&quot;grep&quot;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;当前服务进程id:&quot;</span> <span class="variable">$ids</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$ids</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Kill ID--&gt; the process [ <span class="variable">$i</span> ]&quot;</span></span><br><span class="line">  <span class="built_in">kill</span> -9 <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;  =====&gt;启动isup应用中....&quot;</span></span><br><span class="line">nohup java -jar -Xms128m  -Xmx512m -XX:PermSize=128M -XX:MaxPermSize=512M uap-modules-isup-2.2.0.jar --server.port=9209 --spring.profiles.active=<span class="built_in">test</span> --spring.cloud.nacos.discovery.server-addr=10.129.138.144:8848 --spring.cloud.nacos.discovery.group=yun-144 --spring.cloud.nacos.config.namespace=090d6ad3-0fc5-4411-9dab-7c144c128add &gt; <span class="built_in">log</span>/isup.log 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;  =====&gt;启动isup应用完成OK&quot;</span></span><br><span class="line">tail -f <span class="built_in">log</span>/isup.log</span><br></pre></td></tr></table></figure>

<blockquote>
<p>分段批量入库</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> limit = <span class="number">500</span>;</span><br><span class="line"><span class="keyword">int</span> size = filter.size();</span><br><span class="line"><span class="keyword">int</span> checkTimes = ((size - <span class="number">1</span>) / limit) + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= checkTimes - <span class="number">1</span>; i++) &#123;</span><br><span class="line">   <span class="keyword">int</span> aa = i * limit;</span><br><span class="line">   <span class="keyword">int</span> bb = (i + <span class="number">1</span>) * limit;</span><br><span class="line">   <span class="keyword">if</span> (i == checkTimes - <span class="number">1</span>) &#123;</span><br><span class="line">        bb = size;</span><br><span class="line">   &#125;</span><br><span class="line">   List&lt;SupplierEvaluationYear&gt; subList = filter.subList(aa, bb);</span><br><span class="line">   saveBatch(subList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>根据属性高低排名</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//排名条件：评牌 &gt; 综合得分 &gt; 供货金额 （未评牌不排名）</span></span><br><span class="line">List&lt;?&gt; tempList = entry.getValue().stream()</span><br><span class="line">                    .filter(s -&gt; !Integer.valueOf(NO_LEVEL).equals(s.getTempEvaluateGrade()))</span><br><span class="line">                    .sorted(Comparator.comparing(SupplierGroupEvaluationYear::getTempEvaluateGrade).reversed()</span><br><span class="line">                    .thenComparing(SupplierGroupEvaluationYear::getOverallScore, Comparator.nullsFirst(BigDecimal::compareTo))</span><br><span class="line">                    .thenComparing(SupplierGroupEvaluationYear::getSupplyAmount, Comparator.nullsFirst(BigDecimal::compareTo)).reversed()).collect(toList());</span><br></pre></td></tr></table></figure>

<blockquote>
<p>重复key属性取值</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">sysDeptList.stream().collect(Collectors.toMap(SysDept::getDeptName, SysDept::getDeptId, (k1, k2) -&gt; k2));</span><br></pre></td></tr></table></figure>

<blockquote>
<p>多属性去重</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">qualifiedList.stream().collect(Collectors.collectingAndThen(Collectors.toCollection(() -&gt; <span class="keyword">new</span> TreeSet&lt;&gt;(Comparator.comparing(o -&gt; o.getEnterpriseId() + <span class="string">&quot;-&quot;</span> + o.getTenantId()))), ArrayList::<span class="keyword">new</span>));</span><br></pre></td></tr></table></figure>

<blockquote>
<p>过滤重复分组</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">TreeMap&lt;Integer, SupplierRuleGrade&gt; levelRuleMap = levelRulesList.stream().collect(</span><br><span class="line">                Collectors.toMap(SupplierRuleGrade::getLevel, Function.identity(), (o1, o2) -&gt; o1, TreeMap::<span class="keyword">new</span>));</span><br></pre></td></tr></table></figure>

<blockquote>
<p>计算出现次数</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Map&lt;String, Long&gt; nameMap = unitList.stream().collect(Collectors.groupingBy(p -&gt; p, Collectors.counting()));</span><br></pre></td></tr></table></figure>

<blockquote>
<p>倒叙</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">dataMap.keySet().stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList());</span><br></pre></td></tr></table></figure>

<h3 id="Mysql递归查询"><a href="#Mysql递归查询" class="headerlink" title="Mysql递归查询"></a>Mysql递归查询</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">WITH RECURSIVE subcategories AS (</span><br><span class="line">	SELECT</span><br><span class="line">		department_id,</span><br><span class="line">		parent_id,</span><br><span class="line">		`name` </span><br><span class="line">	FROM</span><br><span class="line">		t_department </span><br><span class="line">	WHERE</span><br><span class="line">		department_id = 1 UNION ALL</span><br><span class="line">	SELECT</span><br><span class="line">		c.department_id,</span><br><span class="line">		c.parent_id,</span><br><span class="line">		c.`name` </span><br><span class="line">	FROM</span><br><span class="line">		t_department c</span><br><span class="line">		INNER JOIN subcategories sc ON c.parent_id = sc.department_id </span><br><span class="line">	) SELECT</span><br><span class="line">	* </span><br><span class="line">FROM</span><br><span class="line">	subcategories;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年结尾</title>
    <url>/2023/01/27/2022%E5%B9%B4%E7%BB%93%E5%B0%BE/</url>
    <content><![CDATA[<blockquote>
<p>开心的时光总是短暂</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2023/01/27/pSUSA1K.jpg" alt="pSUSA1K.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/27/pSUSifx.jpg" alt="pSUSifx.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/27/pSUSkp6.jpg" alt="pSUSkp6.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/27/pSUSPt1.jpg" alt="pSUSPt1.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/27/pSUSCkR.jpg" alt="pSUSCkR.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/27/pSUSVXD.jpg" alt="pSUSVXD.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/27/pSUSE6O.jpg" alt="pSUSE6O.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/27/pSUSn7d.jpg" alt="pSUSn7d.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/27/pSUSm0H.jpg" alt="pSUSm0H.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/27/pSUSene.jpg" alt="pSUSene.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/28/pSa3G6K.jpg" alt="pSa3G6K.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/28/pSa38l6.jpg" alt="pSa38l6.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/28/pSa3lf1.jpg" alt="pSa3lf1.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/28/pSa33Sx.jpg" alt="pSa33Sx.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/28/pSa3QYR.jpg" alt="pSa3QYR.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/28/pSa3JOO.jpg" alt="pSa3JOO.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/01/28/pSa3tmD.jpg" alt="pSa3tmD.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>Java深浅拷贝工具</title>
    <url>/2023/02/06/Java%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.avicnet.uap.common.core.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.sf.cglib.beans.BeanCopier;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.CollectionUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CloneUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拷贝对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source 拷贝源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> classTargetType 对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T, E&gt; <span class="function">E <span class="title">clone</span><span class="params">(T source, Class&lt;E&gt; classTargetType)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (source == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        E targetInstance;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            targetInstance = classTargetType.newInstance();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InstantiationException | IllegalAccessException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(source, targetInstance);</span><br><span class="line">        <span class="keyword">return</span> targetInstance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拷贝数组对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sourceList 拷贝源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> classType 对象类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T, E&gt; <span class="function">List&lt;E&gt; <span class="title">batchClone</span><span class="params">(List&lt;T&gt; sourceList, Class&lt;E&gt; classType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sourceList == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;E&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (T t : sourceList) &#123;</span><br><span class="line">            result.add(clone(t, classType));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 浅拷贝对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sourceObj   被拷贝对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> targetClass 拷贝类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">convertToTarget</span><span class="params">(Object sourceObj, Class&lt;T&gt; targetClass)</span> </span>&#123;</span><br><span class="line">        T targetObj;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            targetObj = targetClass.newInstance();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InstantiationException | IllegalAccessException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        BeanUtils.copyProperties(sourceObj, targetObj);</span><br><span class="line">        <span class="keyword">return</span> targetObj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 浅拷贝数组对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sourceList  被拷贝数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> targetClass 拷贝类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">convertToTargetList</span><span class="params">(List&lt;?&gt; sourceList, Class&lt;T&gt; targetClass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(sourceList)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (targetClass == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;T&gt; targetList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Object sourceObj : sourceList) &#123;</span><br><span class="line">            T targetObj = convertToTarget(sourceObj, targetClass);</span><br><span class="line">            targetList.add(targetObj);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> targetList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 浅拷贝对象(性能++)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source  被拷贝数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dest 拷贝类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;S, T&gt; <span class="function">T <span class="title">convert</span><span class="params">(S source, Class&lt;T&gt; dest, Function&lt;T, T&gt; function)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (source == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            T result = dest.newInstance();</span><br><span class="line">            <span class="keyword">final</span> BeanCopier copier = BeanCopier.create(source.getClass(), dest, <span class="keyword">false</span>);</span><br><span class="line">            copier.copy(source, result, <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (function != <span class="keyword">null</span>) &#123;</span><br><span class="line">                function.apply(result);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 浅拷贝对象(性能++)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> copier 代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dest 目标类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> function 功能校验</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;S, T&gt; <span class="function">T <span class="title">convert</span><span class="params">(BeanCopier copier, S source, Class&lt;T&gt; dest, Function&lt;T, T&gt; function)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (source == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            T result = dest.newInstance();</span><br><span class="line">            copier.copy(source, result, <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (function != <span class="keyword">null</span>) &#123;</span><br><span class="line">                function.apply(result);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 浅拷贝数组(性能++)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sourceList 被拷贝数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dest 目标类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> function 功能校验</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标类型数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;S, T&gt; <span class="function">List&lt;T&gt; <span class="title">convertList</span><span class="params">(List&lt;S&gt; sourceList, Class&lt;T&gt; dest, Function&lt;T, T&gt; function)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(sourceList)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;T&gt; resultList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">final</span> BeanCopier copier = BeanCopier.create(sourceList.get(<span class="number">0</span>).getClass(), dest, <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">for</span> (S source : sourceList) &#123;</span><br><span class="line">                T result = dest.newInstance();</span><br><span class="line">                copier.copy(source, result, <span class="keyword">null</span>);</span><br><span class="line">                resultList.add(result);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (function != <span class="keyword">null</span>) &#123;</span><br><span class="line">                resultList.forEach(function::apply);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> resultList;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source 源类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dest 目标类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 代理对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;S, T&gt; <span class="function">BeanCopier <span class="title">createCopier</span><span class="params">(Class&lt;S&gt; source, Class&lt;T&gt; dest)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BeanCopier.create(source, dest, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>忙碌的日子</title>
    <url>/2023/03/26/%E5%BF%99%E7%A2%8C%E7%9A%84%E6%97%A5%E5%AD%90/</url>
    <content><![CDATA[<blockquote>
<p>Yesterday</p>
</blockquote>
<p>我说我忘了太多，希望不是因为变老</p>
<p>时间走慢点拜托，是否自视甚高 答案你是否知道</p>
<p>把你拆解 才发现我是那么复杂，眼前望去整个曼哈顿多亮，下雪的夜里 跟你的家乡多像</p>
<p>别跟谁对比 保持我的模样</p>
<p><img src="https://s1.ax1x.com/2023/03/26/ppses9f.jpg" alt="ppses9f.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/03/26/ppseD4P.jpg" alt="ppseD4P.jpg"></p>
<blockquote>
<p>可怜的樊可已经有了白发</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2023/03/26/ppsey38.jpg" alt="ppsey38.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/03/26/ppseBNt.jpg" alt="ppseBNt.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2023/04/05/%E6%97%A5%E5%B8%B8/</url>
    <content><![CDATA[<p>经历更长的旅程，更温柔的眼神</p>
<p>那鞋盒偶尔又被打开，往事不断蒙太奇</p>
<p><img src="https://s1.ax1x.com/2023/04/05/ppIij4e.jpg" alt="ppIij4e.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/05/ppIix9H.jpg" alt="ppIix9H.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/05/ppIiXND.jpg" alt="ppIiXND.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/05/ppIFPDP.jpg" alt="ppIFPDP.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/05/ppIFpjI.jpg" alt="ppIFpjI.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/05/ppIFiHf.jpg" alt="ppIFiHf.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/05/ppIiz3d.jpg" alt="ppIiz3d.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/05/ppIFSgA.jpg" alt="ppIFSgA.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/05/ppIFCut.png" alt="ppIFCut.png"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2023/04/09/%E6%97%A5%E5%B8%B80407/</url>
    <content><![CDATA[<blockquote>
<p>一事无成的23岁🐀从下水道爬出，跟着朋友蹭吃蹭喝，神志不清带皮嗯吃大虾，暴风吸入免费冰淇淋导致半夜两点疯狂拉稀，靠着老板给的几百块苟延残喘</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2023/04/09/ppbYRQe.jpg" alt="ppbYRQe.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/09/ppbY6JK.jpg" alt="ppbY6JK.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/09/ppbYgzD.jpg" alt="ppbYgzD.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/09/ppbYcRO.jpg" alt="ppbYcRO.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/09/ppbYTFP.png" alt="ppbYTFP.png"></p>
<p><img src="https://s1.ax1x.com/2023/04/09/ppbYWsH.jpg" alt="ppbYWsH.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/09/ppbYfLd.jpg" alt="ppbYfLd.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/09/ppbY4eA.jpg" alt="ppbY4eA.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/04/09/ppbYIot.jpg" alt="ppbYIot.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2023/05/05/%E6%97%A5%E5%B8%B80505/</url>
    <content><![CDATA[<blockquote>
<p>失眠为间断房间一片死寂，时间不间断逝去浪费在自怨自艾，每天睁眼不知意义那我宁愿自缢，而不是骗自己，There’s always plan B Instead of planning to be</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2023/05/12/p9s6NF0.jpg" alt="p9s6NF0.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/05/12/p9s6UYV.jpg" alt="p9s6UYV.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/05/12/p9s6sm9.jpg" alt="p9s6sm9.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/05/12/p9s6DOJ.jpg" alt="p9s6DOJ.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/05/12/p9s6Yoq.jpg" alt="p9s6Yoq.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/05/12/p9s6aWT.jpg" alt="p9s6aWT.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/05/12/p9s6wSU.png" alt="p9s6wSU.png"></p>
<p><img src="https://s1.ax1x.com/2023/05/12/p9s60lF.jpg" alt="p9s60lF.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/05/12/p9s6By4.jpg" alt="p9s6By4.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/05/12/p9s62Y6.jpg" alt="p9s62Y6.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/05/12/p9s6ywR.jpg" alt="p9s6ywR.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/05/12/p9s6gFx.jpg" alt="p9s6gFx.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/05/12/p9s66T1.jpg" alt="p9s66T1.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>DelayQueue延迟队列</title>
    <url>/2023/05/13/DelayQueue%E5%BB%B6%E8%BF%9F%E9%98%9F%E5%88%97/</url>
    <content><![CDATA[<h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.delayqueue.demo.entity;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Delayed;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> luoyangjie</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/2/3 15:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">implements</span> <span class="title">Delayed</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 订单号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String orderNo;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String userId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 订单状态（0待领取，1已领取，2已勾销）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 订单创立时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 订单失效时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date cancelTime;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Order</span><span class="params">(String orderNo, String userId, Integer status, Date createTime, Date cancelTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.orderNo = orderNo;</span><br><span class="line">        <span class="keyword">this</span>.userId = userId;</span><br><span class="line">        <span class="keyword">this</span>.status = status;</span><br><span class="line">        <span class="keyword">this</span>.createTime = createTime;</span><br><span class="line">        <span class="keyword">this</span>.cancelTime = cancelTime;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Order&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;orderNo=&#x27;&quot;</span> + orderNo + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, userId=&#x27;&quot;</span> + userId + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, status=&quot;</span> + status +</span><br><span class="line">                <span class="string">&quot;, createTime=&quot;</span> + createTime +</span><br><span class="line">                <span class="string">&quot;, cancelTime=&quot;</span> + cancelTime +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取得延迟时间，用失效时间-当前时间，时间单位须要对立</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getDelay</span><span class="params">(TimeUnit unit)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//上面用到unit.convert()办法，其实在这个小场景不须要用到，只是学习一下如何应用罢了</span></span><br><span class="line">        <span class="keyword">return</span> unit.convert(cancelTime.getTime() - System.currentTimeMillis(), TimeUnit.MILLISECONDS);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用于提早队列外部比拟排序，以后工夫的延迟时间 - 比拟对象的延迟时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> o</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Delayed o)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//这里依据勾销工夫来比拟，如果勾销所剩时间小的，就会优先被队列提取进去</span></span><br><span class="line">        <span class="comment">//注意延迟时间 的绑定就是这绑定的属性</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.getCancelTime().compareTo(((Order) o).getCancelTime());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="SERVICE"><a href="#SERVICE" class="headerlink" title="SERVICE"></a>SERVICE</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 提早队列，用来寄存订单对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">DelayQueue&lt;Order&gt; queue = <span class="keyword">new</span> DelayQueue&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> ThreadPoolTaskExecutor executorService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancelOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//新建一个线程，用来模仿定时排查取消过期订单job</span></span><br><span class="line">    executorService.submit(()-&gt;&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;***********开启主动取消订单job***********,时间：&quot;</span> + DateUtil.date());</span><br><span class="line">            <span class="keyword">while</span> (isOpen == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Order order = queue.take();</span><br><span class="line">                    order.setStatus(<span class="number">2</span>);</span><br><span class="line">                    System.out.println(<span class="string">&quot;订单：&quot;</span> + order.getOrderNo() + <span class="string">&quot;付款超时，主动勾销，当前时间：&quot;</span> + DateUtil.date());</span><br><span class="line">                    System.out.println(<span class="string">&quot;当前订单延迟队列数量:&quot;</span>+queue.size());</span><br><span class="line">                    System.out.println(queue.toString());</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ScheduledExecutorService"><a href="#ScheduledExecutorService" class="headerlink" title="ScheduledExecutorService"></a>ScheduledExecutorService</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> ScheduledExecutorService scheduledExecutor = Executors.newScheduledThreadPool(<span class="number">1</span>);</span><br><span class="line"> </span><br><span class="line"><span class="meta">@GetMapping(&quot;/testDeferredResult&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> DeferredResult&lt;String&gt; <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DeferredResult&lt;String&gt; deferredResult = <span class="keyword">new</span> DeferredResult&lt;&gt;();</span><br><span class="line">    scheduledExecutor.schedule(() -&gt; &#123;</span><br><span class="line">        deferredResult.setResult(<span class="string">&quot;deferred result&quot;</span>);</span><br><span class="line">    &#125;, <span class="number">10</span>, TimeUnit.SECONDS);</span><br><span class="line">    System.out.println(Thread.currentThread().getName() + <span class="string">&quot;执行结束&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> deferredResult;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Scheduled(fixedDelayString = &quot;$&#123;time.fixedDelay&#125;&quot;)</span></span><br><span class="line"></span><br><span class="line">ScheduledExecutorService executorService = Executors.newScheduledThreadPool(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">@Scheduled(fixedDelay = 5000)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">scheduleTaskWithFixedDelay</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    executorService.schedule(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 任务内容</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">10</span>, TimeUnit.SECONDS);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>SpreadJs使用</title>
    <url>/2023/05/14/SpreadJs/</url>
    <content><![CDATA[<blockquote>
<p>初始化Spread实例</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> spread = <span class="keyword">new</span> GC.Spread.Sheets.Workbook(<span class="built_in">document</span>.getElementById(<span class="string">&#x27;spread&#x27;</span>))</span><br></pre></td></tr></table></figure>

<blockquote>
<p>读取JSON模板 导入到spread里</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">spread.fromJSON(<span class="built_in">require</span>(<span class="string">`../../static/file/<span class="subst">$&#123;fileNameData[tableName]&#125;</span>`</span>))</span><br></pre></td></tr></table></figure>

<blockquote>
<p>浮动模式插入数据</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> floatForm = <span class="function">(<span class="params">spread, tableName, dataSource</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> sheet = spread.getActiveSheet()</span><br><span class="line">  sheet.suspendPaint()</span><br><span class="line">  <span class="keyword">let</span> startRow = startRowData[tableName] <span class="comment">// startRowData里记录的是编号 index为 编号减1</span></span><br><span class="line">  sheet.addRows(startRow, dataSource.length - <span class="number">1</span>) <span class="comment">// length - 1 是因为原本就有一行</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, len = dataSource.length - <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line">    sheet.copyTo(startRow - <span class="number">1</span>, <span class="number">1</span>, startRow + i, <span class="number">1</span>, <span class="number">1</span>, sheet.getColumnCount() - <span class="number">1</span>, GC.Spread.Sheets.CopyToOptions.all)</span><br><span class="line">    sheet.setRowHeight(startRow + i, sheet.getRowHeight(startRow - <span class="number">1</span>))</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 这里开始插入数据</span></span><br><span class="line">  sheet.setArray(startRow - <span class="number">1</span>, <span class="number">1</span>, dataSource)</span><br><span class="line">  sheet.resumePaint()</span><br><span class="line">  <span class="keyword">return</span> spread</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>事件绑定</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">spread.bind(spreadNS.Events.CellClick, <span class="function"><span class="keyword">function</span> (<span class="params">e, args</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">let</span> sheetArea = args.sheetArea === <span class="number">0</span> ? <span class="string">&#x27;sheetCorner&#x27;</span> : args.sheetArea === <span class="number">1</span> ? <span class="string">&#x27;columnHeader&#x27;</span> : args.sheetArea === <span class="number">2</span> ? <span class="string">&#x27;rowHeader&#x27;</span> : <span class="string">&#x27;viewPort&#x27;</span>;</span><br><span class="line">                self.eventLog =</span><br><span class="line">                    <span class="string">&#x27;SpreadEvent: &#x27;</span> + GC.Spread.Sheets.Events.CellClick + <span class="string">&#x27; event called&#x27;</span> + <span class="string">&#x27;\n&#x27;</span> +</span><br><span class="line">                    <span class="string">&#x27;sheetArea: &#x27;</span> + sheetArea + <span class="string">&#x27;\n&#x27;</span> +</span><br><span class="line">                    <span class="string">&#x27;row: &#x27;</span> + args.row + <span class="string">&#x27;\n&#x27;</span> +</span><br><span class="line">                    <span class="string">&#x27;col: &#x27;</span> + args.col;</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>所有单元格都不能编辑</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">sheet.setIsProtected(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>导出操作</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> saveExcel = <span class="function">(<span class="params">spread, fileName</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> excelIo = <span class="keyword">new</span> GC.Spread.Excel.IO()</span><br><span class="line">  excelIo.save(spread.toJSON(), <span class="function"><span class="params">blob</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> link = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    link.download = fileName</span><br><span class="line">    link.style.display = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">    link.href = URL.createObjectURL(blob)</span><br><span class="line">    link.click()</span><br><span class="line">    URL.revokeObjectURL(link.href)</span><br><span class="line">  &#125;, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>设置表格样式</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 表格设置样式</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> <span class="variable">spread</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>rowCount 行数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>columnCount 列数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">spreadUtil.setStyle = <span class="function">(<span class="params">spread, rowCount, columnCount</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> sheet = spread.getSheet(<span class="number">0</span>);</span><br><span class="line">  sheet</span><br><span class="line">    .getRange(<span class="number">0</span>, <span class="number">0</span>, rowCount, columnCount)</span><br><span class="line">    .setBorder(</span><br><span class="line">      <span class="keyword">new</span> GC.Spread.Sheets.LineBorder(<span class="string">&quot;Black&quot;</span>, GC.Spread.Sheets.LineStyle.thin),</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">all</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> style = <span class="keyword">new</span> GC.Spread.Sheets.Style();</span><br><span class="line">  style.font = <span class="string">&quot;bold 14.7px Calibri&quot;</span>;</span><br><span class="line">  style.hAlign = GC.Spread.Sheets.HorizontalAlign.center;</span><br><span class="line">  style.vAlign = GC.Spread.Sheets.VerticalAlign.center;</span><br><span class="line">  sheet.setStyle(-<span class="number">1</span>, -<span class="number">1</span>, style, GC.Spread.Sheets.SheetArea.viewport);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>浮动绘制</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">spreadUtil.dataRender = <span class="function">(<span class="params">spread, tableName, dataSource, sheetVal</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> sheet = spread.getActiveSheet();</span><br><span class="line">  <span class="keyword">if</span> (sheetVal !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">    sheet = spread.getSheet(sheetVal);</span><br><span class="line">  &#125;</span><br><span class="line">  sheet.suspendPaint();</span><br><span class="line">  <span class="keyword">let</span> startRow = startRowData[tableName]; <span class="comment">// startRowData里记录的是编号 index为 编号减1</span></span><br><span class="line">  sheet.addRows(startRow, dataSource.length - <span class="number">1</span>); <span class="comment">// length - 1 是因为原本就有一行</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, len = dataSource.length - <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line">    sheet.copyTo(</span><br><span class="line">      startRow - <span class="number">1</span>,</span><br><span class="line">      <span class="number">1</span>,</span><br><span class="line">      startRow + i,</span><br><span class="line">      <span class="number">1</span>,</span><br><span class="line">      <span class="number">1</span>,</span><br><span class="line">      sheet.getColumnCount() - <span class="number">1</span>,</span><br><span class="line">      GC.Spread.Sheets.CopyToOptions.all</span><br><span class="line">    );</span><br><span class="line">    sheet.setRowHeight(startRow + i, sheet.getRowHeight(startRow - <span class="number">1</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 这里开始插入数据</span></span><br><span class="line">  sheet.setArray(startRow - <span class="number">1</span>, <span class="number">0</span>, dataSource);</span><br><span class="line">  sheet.resumePaint();</span><br><span class="line">  <span class="keyword">return</span> spread;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>spread对象转json</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">spread.toJSON()</span><br></pre></td></tr></table></figure>

<blockquote>
<p>获取单元格数据</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">sheet.getValue(<span class="number">7</span>,<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">sheet.getArray(<span class="number">7</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">4</span>);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>单元格删除数据</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">sheet.clear(<span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">10</span>, GC.Spread.Sheets.SheetArea.viewport, GC.Spread.Sheets.StorageType.data);</span><br><span class="line">all: 工作表所有使用的范围类型。</span><br><span class="line"><span class="attr">axis</span>: 工作表标题使用范围。</span><br><span class="line"><span class="attr">style</span>: 工作表单元格样式使用的范围。</span><br><span class="line"><span class="attr">rowStyle</span>: 工作表行样式使用范围。</span><br><span class="line"><span class="attr">colStyle</span>: 工作表列样式使用范围。</span><br><span class="line"><span class="attr">data</span>: 工作表数据使用范围。</span><br><span class="line"><span class="attr">formula</span>: 工作表公式使用范围。</span><br><span class="line"><span class="attr">span</span>: 工作表跨度使用范围。</span><br><span class="line"><span class="attr">shape</span>: 工作表形状使用范围。</span><br><span class="line"><span class="attr">table</span>: 工作表表格使用范围。</span><br><span class="line"><span class="attr">sparkLine</span>: 工作表迷你图使用范围。</span><br><span class="line"><span class="attr">comment</span>: 工作表注释使用范围。</span><br><span class="line"><span class="attr">slicer</span>: 切片器使用范围。</span><br><span class="line"><span class="attr">pivottable</span>: 工作表数据透视表使用范围。</span><br><span class="line"><span class="attr">filter</span>: 工作表过滤器使用范围。</span><br><span class="line"><span class="attr">dataValidation</span>: 工作表数据验证使用的范围。</span><br><span class="line"><span class="attr">conditionFormat</span>: 工作表条件格式使用范围。</span><br><span class="line"><span class="attr">chart</span>: 工作表图表使用范围。</span><br><span class="line"><span class="attr">picture</span>: 工作表图片使用范围。</span><br></pre></td></tr></table></figure>

<blockquote>
<p>移动操作</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">sheet.moveTo(<span class="number">0</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">7</span>, GC.Spread.Sheets.CopyToOptions.all);</span><br></pre></td></tr></table></figure>




]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2023/06/03/%E6%97%A5%E5%B8%B80603/</url>
    <content><![CDATA[<blockquote>
<p>Miserable Miserable Miserable. Maybe we’re just sleepwalking.</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVJL1U.jpg" alt="pCVJL1U.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVJOcF.jpg" alt="pCVJOcF.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVJqpT.jpg" alt="pCVJqpT.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVJXX4.jpg" alt="pCVJXX4.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVJHhV.jpg" alt="pCVJHhV.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVJxB9.jpg" alt="pCVJxB9.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVJvnJ.jpg" alt="pCVJvnJ.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVYpA1.jpg" alt="pCVYpA1.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVJz7R.jpg" alt="pCVJz7R.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2023/06/10/%E6%97%A5%E5%B8%B80610/</url>
    <content><![CDATA[<blockquote>
<p>相思之疾敏感如犬，看起来遥远的地方早已近在咫尺</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVdykj.jpg" alt="pCVdykj.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVdBnS.jpg" alt="pCVdBnS.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVdwX8.jpg" alt="pCVdwX8.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVdD0g.jpg" alt="pCVdD0g.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVdd6f.jpg" alt="pCVdd6f.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVdr7Q.jpg" alt="pCVdr7Q.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVdchn.jpg" alt="pCVdchn.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVd6ts.jpg" alt="pCVd6ts.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/06/11/pCVd2pq.jpg" alt="pCVd2pq.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>50个高频答辩问题-技术篇</title>
    <url>/2023/06/13/50%E4%B8%AA%E9%AB%98%E9%A2%91%E7%AD%94%E8%BE%A9%E9%97%AE%E9%A2%98-%E6%8A%80%E6%9C%AF%E7%AF%87/</url>
    <content><![CDATA[<h3 id="提要"><a href="#提要" class="headerlink" title="提要"></a>提要</h3><p>答辩过程中，老师间的问题一般都和你的设计有关，特别是设计中的一些关键技术，比如:数据库链接方式，数据库设计中的 ER 图、范式等。一般不会太难，都是一些学过的知识。</p>
<p>(回答一定要温柔，<code>不要顶嘴</code>)！</p>
<p><code>遇到不会的问题 坚定原则:“只答不辩，问就道歉”</code></p>
<h3 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h3><p><a href="https://berserker287.github.io/tags/%E6%AF%95%E8%AE%BE%E6%BA%90%E7%A0%81/">项目源码（前后端）+ 数据库 + 论文PPT等文档 点我查看</a></p>
<p><code>TIP：项目非免费，谢谢理解</code></p>
<h3 id="往期"><a href="#往期" class="headerlink" title="往期"></a>往期</h3><p>计算机答辩问题及答案</p>
<h2 id="正片"><a href="#正片" class="headerlink" title="正片"></a>正片</h2><blockquote>
<p>dto层是什么</p>
</blockquote>
<p>dto 层（也称为 model、entity 层）作用就是定义实体类，对数据表中的对象的映射，包含实体类的属性和对应属性的 get、set 方法；</p>
<blockquote>
<p>dao层是什么<br>（也称为 mapper 层）dao 层会调用 dto 层，dao 层会定义方法对数据库进行增删改查。一般会有一个放xml 文件的文件夹，xml 文件下就是写 sql 语句。</p>
</blockquote>
<blockquote>
<p>service层是什么</p>
</blockquote>
<p>做相应的业务逻辑处理，service 层会调用 dao 层和 dto 层，service 层也会对数据进行一定的处理，比如条件判断和数据筛选等等。</p>
<blockquote>
<p>controller层是什么</p>
</blockquote>
<p>controller 会调用前面 3 层，一般会和前端的 js 文件进行数据的交互，前端调用对应接口，controller 层接受前端传来的参数，处理好的数据也是通过controller 层传递到前端显示的。</p>
<blockquote>
<p>项目架构以及项目技术选型</p>
</blockquote>
<p>我是选择了 springboot 技术，然后前台采用了 vue 和 uniapp 技术，加上 mysql 数据库做的数据存储。</p>
<blockquote>
<p>软件测试有哪些方法?你采用了什么方法?</p>
</blockquote>
<p>我是采用了单元测试和功能测试两种测试的方法对该系统做了功能做了测试，使用单元测试时，对该某些类进行了测试，比如一些获取前台登录信息，查看数据库等，还做了一些功能测试，主要是系统的增删改查进行了简单的测试。</p>
<blockquote>
<p>如何设计的数据库?设计数据库时你又如何考虑的?</p>
</blockquote>
<p>首先我是先采用问卷调查方法，对本设计确定需求后，再结合参考文献，从而确定需求后设计的数据库，在设计时候我根据数据库的三要素数据结构、数据操作、数据的完整性约束，还根据三范式结合,减少代码冗余性，第一范式(确保每列保持原子性）、第二范式(确保表中的每列都和主键相关)、第三范式(确保每列都和主键列直接相关,而不是间接相关)</p>
<blockquote>
<p>请解释主键和外键的作用并说明它们的区别?</p>
</blockquote>
<p>主键是必不可少的键，如 id 键。外键就是需要联合的键，比如一个图书管理系统，我查询我的订单时，在订单表里查询订单的同时，要关联我的外键 user 表里的 id 键。</p>
<blockquote>
<p>某个功能是怎么实现的？</p>
</blockquote>
<p>首先我采用 mvc 设计模式，在前端视图层留有响应路径，request 发送给后端 Controller 后–&gt;Service 层处理数据–&gt;mapper&gt;&gt;Dao-&gt;MySQL，请求到数据后：Dao-&gt;Service-&gt;Controller</p>
<blockquote>
<p>你采用了哪些功能进行测试？</p>
</blockquote>
<p>我才用了单元测试，对软件中的最小可测试单元进行检查和验证。对于单元测试中单元的含义，一般来说，要根据实际情况去判定其具体含义，如 Java 里单元指一个类，总的来说，单元就是人为规定的最小的被测功能模块。单元测试是在软件开发过程中要进行的最低级别的测试活动，软件的独立单元将在与程序的其他部分相隔离的情况下进行测试。</p>
<blockquote>
<p>黑白盒子测试是什么？</p>
</blockquote>
<p>白盒测试也称为结构测试，主要用于检测软件编码过程中的错误。程序员的编程经验、对编程软件的掌握程度、工作状态等因素都会影响到编程质量，导致代码错误。</p>
<p>黑盒测试又称为功能测试，主要检测软件的每一个功能是否能够正常使用。在测试过程中，将程序看成不能打开的黑盒子，不考虑程序内部结构和特性的基础上通过程序接口进行测试，检查程序功能是否按照设计需求以及说明书的规定能够正常打开使用。</p>
<blockquote>
<p>数据库？你的数据为什么选用此数据库？</p>
</blockquote>
<p>体积小，易安装，速度快，Mysql 性能卓越，服务稳定</p>
<blockquote>
<p>为什么要进行答辩？</p>
</blockquote>
<p>首先是毕业设计，是我为时三个月写的毕业设计，论文是自己熬夜至三点加班加点写出来的，首次查重率是 4.9 后来又修改了写东西，我觉得自己可以胜任此次一辩，其次是很荣幸遇见各位答辩老师，聆听我的毕业设计，并给予指导和建议，使我的毕业论文更加完善清晰。</p>
<blockquote>
<p>你觉得你的毕业设计创新点是什么？（从人力物力财力考虑）</p>
</blockquote>
<p>1 无人自助购买，节省人力，降低管理成本<br>2 面向学生群体，安全系数高<br>3 线上线下相结合，节约时间成本<br>4 方便快捷，省去大量时间成本</p>
<blockquote>
<p>ssm 和 Springboot 区别？</p>
</blockquote>
<p>SSM：面相 XML 编程。SpringBoot：面相注解编程<br>1、SpringBoot 提供极其快速和简化的操作，让 Spring 开发者快速上手。<br>2、SpringBoot 提供了 Spring 运行的默认配置。<br>3、SpringBoot 为通用 Spring 项目提供了很多非功能性特性，例如：嵌入式 Serve、Security、统计、外部配置</p>
<blockquote>
<p>在项⽬中使⽤的安全措施以及其作⽤？</p>
</blockquote>
<p>使⽤Spring Security 等认证和授权框架进⾏⽤户身份认证和权限控制，保证只有合法的⽤户能够访问系统的资源，避免未授权的访问还有就是数据库加密的方式进行注册时用户的密码进行 MD5 加密功能，在登录时再实现 MD5 解密功能。</p>
<blockquote>
<p>你对自己项目有哪些优化建议？</p>
</blockquote>
<blockquote>
<p>前后端异常处理⽅式？</p>
</blockquote>
<p>1 后端异常处理：在后端使⽤Spring Boot 的异常处理机制，例如使⽤@ControllerAdvice和@ExceptionHandler 注解，捕获全局异常，并返回相应的错误信息给前端。后端还可以通过⽇志记录异常信息，便于后续的排查和处理。<br>2 前端异常处理：前端通过 Vue 的错误处理机制，例如使⽤try-catch 语句捕获前端请求程中的异常，通过弹窗 500 或者错误提示展示给⽤户，帮助⽤户理解异常情况并进⾏相应操作</p>
<blockquote>
<p>如何在 Spring Boot 中处理⽂件上传？</p>
</blockquote>
<p>通过调用 uploadFile 类里的方法，获取文件扩展名，重新生成文件名，判断是否存在<br>返回文件访问路径。</p>
<blockquote>
<p>分页是如何实现的？</p>
</blockquote>
<p>分页是如何实的首先从数据库中查询时用 limt 限制 10 条数据，出相应的数据的总数量，在代码中设定每页显示的数据数量 pagesize.就能计算出总共的页码，通过在点击下一页、上一页、首页、尾页时携带页码变量滚动数据进行相应的判断完成分页显示</p>
<blockquote>
<p>前如何支付页面?（适合所有支付页面说）</p>
</blockquote>
<p>因为我这个是本地运行的项目，所以就默认支付了，但是我在这里留有 api 接口，到时候如果上线了，可以加上微信支付功能。</p>
<blockquote>
<p>首页的轮播图图片会动态的变化,这是什么技术?如何实现的?</p>
</blockquote>
<p>通过 js 脚本和 样式控制实现图片的循环播放，图片的轮播使用定时器，通过定时器改变 list 的 Left 值使得图片循环展示。或者说 Swiper 控件构成的。</p>
<blockquote>
<p>服务器是哪个，如何配置的?</p>
</blockquote>
<p>服务器本地运行的，因为 springboot 是封装 tomacat 所以不用再配置 tommcat，直接启动main 类运行即可。</p>
<blockquote>
<p>数据库设计分为几个阶段</p>
</blockquote>
<p>1、需求分析:了解用户的数据需求、处理需求、安全性及完整性要求<br>2、概念设计:通过数据抽象，设计系统概念模型，一般为 E-R 模型<br>3、逻辑结构设计:设计系统的模式和外模式，对于关系模型主要是基本表和视图<br>4、物理结构设计:设计数据的存储结构和存取方法，如索引的设计<br>5、数据库实施:组织数据入岸、编制应用程序、试运行<br>6、数据库运行维护:系统投入运行，长期的维护工作</p>
<blockquote>
<p>程序和数据库怎么连接的</p>
</blockquote>
<p>通过配置 ymal 文件连(“com.mysqljdbc.Driver”)实现 JDBC 连接数据库，利用了微软提供的mysqloonnectorjava-5.0.4-bin.jar 包完成连接数据库。通过 3306 端口访问数据库，同时通过在配置文件设置数据库的账户和密码完成数据库的访问</p>
<blockquote>
<p>批量删除是如何实现的？</p>
</blockquote>
<p>前端按钮获取 id 数组，后台通过 String id 取到 d 组后遍历数组，在循环遍历的时候进行修改或者删除操作</p>
<blockquote>
<p>用户怎么查看历史订单?</p>
</blockquote>
<p>首先获取这个用户的 id，然后右链接订单表里 id 查询此 id 在订单表里的 id，索引后返还给前台。</p>
<blockquote>
<p>日期如何显示在窗口上？</p>
</blockquote>
<p>@JsonFormat(),并且通过参数 pattern,来格式化我们的想要的格式实例，是固定的方法类，获取本地时间，存入数据库</p>
<blockquote>
<p>数据库密码加密功能如何实现？</p>
</blockquote>
<p>合法的⽤户能够访问系统的资源，避免未授权的访问还有就是数据库加密的方式进行注册时用户的密码进行 MD5 加密功能，在登录时再实现 MD5 解密功能</p>
<blockquote>
<p>varchar 和 char 的区别？</p>
</blockquote>
<p>char 的长度是不可变的，而 varchar 的长度是可变的，也就是说，定义一个 char[10]和varchar[10],如果存进去的是‘csdn’,那么 char 所占的长度依然为 10，除了字符‘csdn’外，后面跟六个空格，而 varchar 就立马把长度变为 4 了，取数据的时候，char 类型的要用 trim()去掉多余的空格，而 varchar 是不需要的。</p>
<blockquote>
<p>验证码如何实现?</p>
</blockquote>
<p>输出流，写到 servlet 里面，哪里需要就直接调用这个 servlet</p>
<blockquote>
<p>怎么确保点击一次更换一张验证码？</p>
</blockquote>
<p>每次点击事件后更换 src 的地址值，要确保每次地址值都不一样还需要加上时间的毫秒值。在 servlet 中拼接其他字符需要加上英文状态下的?。</p>
<blockquote>
<p>如何进行判断用户输入的验证码是否正确？</p>
</blockquote>
<p>保存返回值就可以了，保存到 session 中，再比对用户输入的就可以。</p>
<blockquote>
<p>阐述系统中的搜索功能是如何实现的？</p>
</blockquote>
<p>通过 search 控件按钮绑定数据，然后调用 api/book 里的 getBookPage 传输给后台获取模糊查询中的数据返还给前台界面</p>
<blockquote>
<p>什么是 MVC？</p>
</blockquote>
<p>M：Model，模型。 JavaBean 完成具体的业务操作，如：查询数据库，封装对象<br>V：view 视图。JSP、HTML 等来进行数据展示<br>C：Controller 控制器。 Servlet 获取 View 的请求调用模型将数据交给视图进行展示</p>
<blockquote>
<p>如何实现页面效果的？</p>
</blockquote>
<p>我的主体开源框架是使用了若依框架，其次时 VUE、和 element 样式。</p>
<blockquote>
<p>分页是如何实现的？</p>
</blockquote>
<p>分页是如何实的首先从数据库中查询出相应的数据的总数量，在代码中设定每页显示的数据数量pagesize.就能计算出总共的页码，通过在点击下一页、上一页、首页、尾页时携带页码变量滚动数据进行相应的判断完成分页显示。</p>
<blockquote>
<p>系统用的什么框架</p>
</blockquote>
<p>后台使用了 springboot 框架，采用 springboot 框架，使其能够快速的创建 jar 包并实现以 jar 包的形式独立运行，从而减少了 spring 配置，极大的提高了开发、部署的效率。<br>前台使用了 element 是一个针对前端的、免费的框架，提供了按钮、导航、下拉菜单、折叠、翻页等组件功能 。</p>
<blockquote>
<p>前台和后台怎么连接的</p>
</blockquote>
<p>利用 axios 是由 promise 封装的一个 http 的库。 进行异步数据请求(得到的数据可以以 json格式返回，便于处理)用 json 格式进行数据传输，前台传递 json 格式的数据，我给前台发送 json 格式的数据响应</p>
<blockquote>
<p>JAVA 类就是具备某些共同特征的实体的集合？</p>
</blockquote>
<p>@控制层，也就是 Controller@业务层，也就是 service，图持久层，也就是 dao 层，而且包括实体类，由 MyBatis 来管理，通过 spring 来管理 mapper 接口，使用 mapper 的扫描</p>
<blockquote>
<p>#{ }和${ }的区别是什么</p>
</blockquote>
<p>#{}是预编译处理，${}是字符串替换。<br>Mybatis 在处理#{}时，会将 sql 中的#{}替换为?号，调用PreparedStatement 的 set 方法来赋值；<br>Mybatis 在处理${}时，就是把${}替换成变量的值。<br>使用#{}可以有效的防止 SQL 注入，提高系统安全性</p>
<blockquote>
<p>模糊查询 like 语句该怎么写?</p>
</blockquote>
<p>在 Java 代码中添加 sql 通配符<br>select * from foo where bar like #{value}</p>
<blockquote>
<p>谈谈你对 spring 的理解</p>
</blockquote>
<p>Spring 是一个轻量级 Java 开发框架，目的是为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题 。</p>
<blockquote>
<p>为什么要使用 spring?</p>
</blockquote>
<p>spring 提供 ioc 技术，容器会帮你管理依赖的对象，从而不需要自己创建和管理依赖对象了，更轻松的实现了程序的解耦。<br>spring 提供了事务支持，使得事务操作变的更加方便。<br>spring 提供了面向切片编程，这样可以更方便的处理某一类的问题</p>
<blockquote>
<p>springmvc 谈一下你对 SpringMVC 框架的理解</p>
</blockquote>
<p>SpringMVC 是一个基于 Java 的实现了 MVC 设计模式的 请求驱动类型的轻量级 Web框架，通过把 Model，View，Controller 分离，将 web 层进行职责解耦，把复杂的 web应用分成逻辑清晰 的几部分，简化开发，减少出错，方便组内开发人员之间的配合。 在我看来,SpringMVC 就是将我们原来开发在 servlet 中的 代码拆分了,一部分 SpringMVC完成,一部分由我们自己完成</p>
<blockquote>
<p>SpringMVC 的常用注解</p>
</blockquote>
<ol>
<li>@RequestMapping：用于处理请求 url 映射的注解，可用于类或方法上。用于类<br>上，则表示类中的所有响应请求的方法都是以该地址作为父路径。</li>
<li>@RequestBody：注解实现接收 http 请求的 json 数据，将 json 转换为 java 对<br>象。</li>
<li>@ResponseBody：注解实现将 conreoller 方法返回对象转化为 json 对象响应给<br>客 户</li>
<li>@PathVariable 用户从 url 路径上获取指定参数，标注在参数前 @PathVariable(“ 要获取的参数名”)。</li>
<li>@RequestParam: 标注在方法参数之前，用于对传入的参数做一些限制</li>
</ol>
<blockquote>
<p>为什么要用 SpringBoot</p>
</blockquote>
<p>一、独立运行<br>Spring Boot 内嵌了各种 servlet 容器，Tomcat、Jetty 等，现在不再需要打成 war 包部署到容器中，SpringBoot 只要打成一个可执行的 jar 包就能独立运行，所有的依赖包都在一个 jar 包内。<br>二、简化配置<br>spring-boot-starter-web 启动器自动依赖其他组件，简少了 maven的配置。<br>三、自动配置<br>SpringBoot 能根据当前类路径下的类、jar 包来自动配置 bean，如添加一个 spring-boot-starter-web 启动器就能拥有 web 的功能，无需其他配置。<br>四、无代码生成和 XML 配置<br>Spring Boot 配置过程中无代码生成，也无需 XML 配置文件就能完成所有配置工作，这一切都借助于条件注解完成的，这也是Spring4.x 的核心功能之一</p>
<blockquote>
<p>Ajax 应用程序的优势</p>
</blockquote>
<ol>
<li>通过异步模式，提升了用户体验</li>
<li>优化了浏览器和服务器之间的传输，减少不必要的数据往返，减少了带宽占用</li>
<li>Ajax 引擎在客户端运行，承担了一部分本来由服务器承担的工作，从而减少了大用户量下的服务器负载</li>
</ol>
<h2 id="感谢阅读"><a href="#感谢阅读" class="headerlink" title="感谢阅读"></a>感谢阅读</h2>]]></content>
      <tags>
        <tag>答辩相关</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业答辩导师提问的高频问题</title>
    <url>/2023/06/13/%E6%AF%95%E4%B8%9A%E7%AD%94%E8%BE%A9%E5%AF%BC%E5%B8%88%E6%8F%90%E9%97%AE%E7%9A%84%E9%AB%98%E9%A2%91%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h3 id="提要"><a href="#提要" class="headerlink" title="提要"></a>提要</h3><p>答辩过程中，老师间的问题一般都和你的设计有关，特别是设计中的一些关键技术，比如:数据库链接方式，数据库设计中的 ER 图、范式等。一般不会太难，都是一些学过的知识。</p>
<p>(回答一定要温柔，<code>不要顶嘴</code>)！</p>
<p><code>遇到不会的问题 坚定原则:“只答不辩，问就道歉”</code></p>
<h3 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h3><p><a href="https://berserker287.github.io/tags/%E6%AF%95%E8%AE%BE%E6%BA%90%E7%A0%81/">项目源码（前后端）+ 数据库 + 论文PPT等文档 点我查看</a></p>
<p><code>TIP：项目非免费，谢谢理解</code></p>
<h3 id="往期"><a href="#往期" class="headerlink" title="往期"></a>往期</h3><p>高频答辩问题 - 技术篇</p>
<h2 id="正片（未给出例子需要结合项目回答）"><a href="#正片（未给出例子需要结合项目回答）" class="headerlink" title="正片（未给出例子需要结合项目回答）"></a>正片（未给出例子需要结合项目回答）</h2><blockquote>
<p>为什么要选这个课题？</p>
</blockquote>
<p>例子（小区物业系统）因为当初曾经在家里发现附近的老旧改小区还在使用人工以及简单例如Excel的记录方式，觉得疑惑为什么没有配套的物业管理系统进行，后面查询了一下发现国内的只有一些较好的房地产公司在开发楼盘的时候才会有专门开发配套的物业管理系统，而像这种老旧的小区当时并没有开发配套的物业管理系统，所以当时萌生了开发一套小型的物业管理系统对这类小区进行一些简单的管理工作。</p>
<blockquote>
<p>具体某个功能是怎么实现的？是否可以解释某某概念？某个部分的执行逻辑?(*****)</p>
</blockquote>
<p>例如：支付宝沙箱的支付组件<br>1.配置支付宝SDK依赖组件<br>2.设置支付参数、比如用户ID、支付沙箱的AppID，以及接口公钥以及私钥<br>3.生成支付参数以及订单信息<br>4.发起支付，生成支付链接<br>5.将支付链接返回给前台系统、引导用户在支付宝客户端进行支付<br>最后将支付结果参数返回并通知支付结果</p>
<blockquote>
<p>某个技术在程序中是怎么应用的？ </p>
</blockquote>
<p>根据使用技术讲出，技术应用逻辑与场景</p>
<blockquote>
<p>你这个系统创新点是什么？是否具有实际应用价值? 讲详细点</p>
</blockquote>
<p>1.在dao层与持久化层之间加入redis内存数据库用作缓存，将重复的数据直接从MySQL数据库中查找变成从redis内存中查找，提高了对数据的读写速度，减少服务器的压力<br>2.在用户的注册认证中改用百度的人工智能云的人脸识别SDK组件进行人脸信息采集和校验，增加了信息的安全和有效性<br>3.在物业缴费功能上使用支付宝沙箱进行支付，模拟了完整的支付环境，使开发者能够真实的测试和验证支付功能的正确性和稳定性。</p>
<blockquote>
<p>你这个系统目前存在什么问题？后期打算怎么解决？</p>
</blockquote>
<blockquote>
<p>数据库表是怎么创建的？</p>
</blockquote>
<blockquote>
<p>关于毕业设计/论文作为开发者你认为有什么不足之处，或者有哪些问题是你还没弄清楚的。 如果继续开发或研究，下一步应该怎么做?</p>
</blockquote>
<h3 id="答辩问题讲解与总结"><a href="#答辩问题讲解与总结" class="headerlink" title="答辩问题讲解与总结"></a>答辩问题讲解与总结</h3><blockquote>
<p>session机制或session怎么应用？setattrbute() getattribute()  微信小程序 wechat StorageSync  vue.$storage</p>
</blockquote>
<p>session主要应用到登录中，当登录成功后，就会将用户信息存储到session中，然后在进入到其他功能模块时首先要判断session中是否存在用户信息，如果存在则进行下一步操作，否则，进入到登录页面。其次，session还可以在登录系统后如果长时间不操作，一旦刷新就会进入到登录页面。</p>
<blockquote>
<p>数据传递或者http如何发送请求（requeust response）(get post) ajax formt提交 (a)href window.location wx.request() uni.request()</p>
</blockquote>
<p>首先是使用服务器控件，如<a href="asp:TextBox">asp:TextBox</a>和<a href="asp:Button">asp:Button</a>，每一个服务器控件都设置有两个属性，分别是ID和runat，如ID=”txtPWD” runat=”server”。以登录为例，点击登录后直接执行Button1的click点击处理事件，即Button1_Click方法，然后也是通过ID分别获取到输入框中的用户名和密码，然后直接执行sql语句去查询实现。Ajax input</p>
<blockquote>
<p>轮播图如何设计</p>
</blockquote>
<p>swiper-slide js data imgs wx.for img js 时间间隔 div background<br>Swiper swiper-item </p>
<blockquote>
<p>分页功能如何设计</p>
</blockquote>
<p>github PageInfo PageHelper <el-pagination> pageutils<br>List<Users>-&gt;a.size()-&gt;totals(100 101)-&gt;totals%10 -&gt;totals/10 totals/10+1</p>
<ol>
<li>获取总记录数</li>
<li>计算OFFSET</li>
<li>根据pageSize和OFFSET查询当前页数据</li>
<li>封装成Page对象返回</li>
</ol>
<blockquote>
<p>验证码如何实现</p>
</blockquote>
<ol>
<li>random 2) [] -&gt;数字、大小写字母 3）get(4) 4) draw—&gt;img 5) input 与生成的验证码比对 :</li>
</ol>
<ol>
<li>产生验证码图片。这通常需要使用 Java 的图片绘制API,产生一张包含随机字符的图片。</li>
<li>将验证码字符保存到 Session 中。这是为了后续验证用户输入的验证码是否正确。</li>
<li>显示验证码图片。将步骤1产生的验证码图片显示在页面上。</li>
<li>获取用户输入的验证码。获取用户在页面上输入的验证码字符串。</li>
<li>校验验证码。将用户输入的验证码与Session中保存的验证码进行比对,如果相同则验证码校验通过,否则不通过。</li>
</ol>
<blockquote>
<p>(*****)具体功能实现或数据库如何通过接口实现功能？</p>
</blockquote>
<p> 需求分析+数据库设计+程序设计+2min<br>（核心标签(前端)+核心js技术+核心后台方法 controller）</p>
<blockquote>
<p>邮箱、手机、身份证、密码（length）（js正则表达式）</p>
</blockquote>
<blockquote>
<p>推荐怎么实现的？协同过滤算法怎么使用的？ </p>
</blockquote>
<p>首先要弄懂协同过滤推荐算法机制 ，然后根据机制来看程序。<br>程序中存在很多的数学函数，看不懂没关系，但是为了满足推荐算法实现的业务逻辑肯定要看懂。<br>结合具体功能实现</p>
<blockquote>
<p>购物类 潜在问题</p>
</blockquote>
<p>（多个用户同时购买一个商品？）并发/事务/锁  （怎么支付？模拟支付-》api（微信支付/支付宝支付））<br>使用，Synchronized 同步</p>
<blockquote>
<p>数据库主外键关系 </p>
</blockquote>
<p>订单(用户id 商品id) 级联查询  activity(userid)  评论（用户id 作品id）报名（用户id 活动id）</p>
<blockquote>
<p>系统有是三种用户权限，(三个用户权限处于同一个登录页面)，怎么从一个登录页面分别进入各自的主页面 或多用户下的权限验证怎么实现？</p>
</blockquote>
<p>session admin a user b</p>
<blockquote>
<p>(数据解析) 爬虫 </p>
</blockquote>
<p>controller-&gt;js =》json-》json解析（键值对）（Jsonobject、Jsonarray）</p>
<blockquote>
<p>数据库是怎么设计的？</p>
</blockquote>
<p>范式理论 三范式 主外键关系 级联查询 左连接 右连接<br>构造数据库必须遵循一定的规则。在关系数据库中，这种规则就是范式。范式是符合某一种级别的关系模式的集合。关系数据库中的关系必须满足一定的要求，即满足不同的范式。关系数据库有六种范式：第一范式（1NF）、第二范式（2NF）、第三范式（3NF）、第四范式（4NF）、第五范式（5NF）和第六范式（6NF）。满足最低要求的范式是第一范式（1NF）。在第一范式的基础上进一步满足更多要求的称为第二范式（2NF），其余范式以次类推。一般说来，数据库只需满足第三范式（3NF）就行了。</p>
<blockquote>
<p>mybatis怎么应用？mybatis怎么与mysql进行关联使用？mybatis-plus注解怎么使用？</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">update</span>&gt;</span><span class="tag">&lt;<span class="name">insert</span>&gt;</span><span class="tag">&lt;<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>程序与数据库是怎么链接？jdbc 配置<br>在项目的配置文件：application.yml<br>配置数据库用户名、密码、驱动名、url等</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/property_cos_20230517?useUnicode=true&amp;characterEncoding=UTF-8&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=Asia/Shangha</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>dao层与model层的关系，dao到mapper查询数据库等操作？Model是干啥的？</p>
</blockquote>
<p>DAO层：DAO层（数据访问对象层）是在应用程序和数据库之间的中间层。它封装了对数据库的访问和操作，提供了与数据持久化相关的方法和接口。DAO层的主要职责是处理数据的增删改查等操作，将数据持久化到数据库或从数据库中检索数据。<br>Model层是应用程序的领域模型或实体对象层。它代表了应用程序的业务数据和业务逻辑。Model层通常包含与业务相关的数据结构、数据验证规则、业务规则和业务逻辑等。Model层的主要职责是定义和封装数据，提供对数据的操作和处理方法。</p>
<blockquote>
<p>小程序怎么与后端交互的 </p>
</blockquote>
<blockquote>
<p>上传文件怎么实现</p>
</blockquote>
<blockquote>
<p>ueditor 富文本</p>
</blockquote>
<blockquote>
<p>图片、文档、视频、音频等资源文件上传</p>
</blockquote>
<p>mysql数据库存储的就是新生成的文件的名字  如1512908770583.png fileinput transferto<br>获取新的文件名<br>判断该文件路径的父级目录是否存在<br>对文件进行写入处理（保存文件）</p>
<blockquote>
<p>用什么方法实现页面之间的跳转</p>
</blockquote>
<p>1\ a href=”a.jsp” html<br>2\ window.location.href=”b.jsp” js<br>3\ controller return ”c.jsp” java</p>
<h3 id="理论-客观问题总结"><a href="#理论-客观问题总结" class="headerlink" title="理论+客观问题总结"></a>理论+客观问题总结</h3><blockquote>
<p>cs与bs的不同</p>
</blockquote>
<p>1、客户端要求<br>C/S客户端的计算机电脑配置要求较高。<br>B/S客户端的计算机电脑配置要求较低。</p>
<p>2、软件安装<br>C/S每一个客户端都必须安装和配置专用的软件。<br>B/S最大的优点就是不用安装任何专门的软件，只要有一个浏览器就可以。</p>
<p>3、软件升级和维护<br>C/S每一个客户端都要进行升级和维护。<br>B/S客户端不必安装及维护。 </p>
<p>4、安全性<br>C/S一般建立在专用的网络上，面向相对固定的用户群，它可以对权限进行多层次校验，提供了更安全的存取模式，对信息安全的控制能力很强。一般高度机密的信息系统应采用C/S结构。<br>B/S建立在广域网之上，面向是不可知的用户群，对安全的控制能力相对弱。</p>
<blockquote>
<p>ajax同步与异步的区别</p>
</blockquote>
<p>同步：浏览器访问服务器请求，用户看得到页面刷新，重新发请求,等请求完，页面刷新，新内容出现，用户看到新内容,进行下一步操作。<br>异步：浏览器访问服务器请求，用户正常操作，浏览器后端进行请求。等请求完，页面不刷新，新内容也会出现，用户看到新内容。</p>
<blockquote>
<p>bean注解原理</p>
</blockquote>
<p>一、Bean是啥<br>1、Java面向对象，对象有方法和属性，那么就需要对象实例来调用方法和属性（即实例化）；<br>2、凡是有方法或属性的类都需要实例化，这样才能具象化去使用这些方法和属性；<br>3、规律：凡是子类及带有方法或属性的类都要加上注册Bean到Spring IoC的注解；<br>4、把Bean理解为类的代理或代言人（实际上确实是通过反射、代理来实现的），这样它就能代表类拥有该拥有的东西了<br>5、我们都在微博上@过某某，对方会优先看到这条信息，并给你反馈，那么在Spring中，你标识一个@符号，那么Spring就会来看看，并且从这里拿到一个Bean或者给出一个Bean<br>二、注解分为两类：<br>1、一类是使用Bean，即是把已经在xml文件中配置好的Bean拿来用，完成属性、方法的组装；比如@Autowired , @Resource，可以通过byTYPE（@Autowired）、byNAME（@Resource）的方式获取Bean；<br>2、一类是注册Bean,@Component , @Repository , @ Controller , @Service , @Configration这些注解都是把你要实例化的对象转化成一个Bean，放在IoC容器中，等你要用的时候，它会和上面的@Autowired , @Resource配合到一起，把对象、属性、方法完美组装。<br>总结：<br>1、凡是子类及带属性、方法的类都注册Bean到Spring中，交给它管理；<br>2、@Bean 用在方法上，告诉Spring容器，你可以从下面这个方法中拿到一个Bean<br>3、@Bean明确地指示了一种方法，什么方法呢——产生一个bean的方法，并且交给Spring容器管理；从这我们就明白了为啥@Bean是放在方法的注释上了，因为它很明确地告诉被注释的方法，你给我产生一个Bean，然后交给Spring容器，剩下的你就别管了</p>
<blockquote>
<p>创新点是什么？与同类型系统有什么优点？</p>
</blockquote>
<blockquote>
<p>为什么要选题这个课题？</p>
</blockquote>
<blockquote>
<p>ssm/springboot/springcloud微服务 原理 如springboot框架怎么应用？ springAOP实现原理</p>
</blockquote>
<blockquote>
<p>你对整个系统有什么认识? 你觉得有什么弊端等</p>
</blockquote>
<blockquote>
<p>如果升级系统 你最升级哪部分？</p>
</blockquote>
<blockquote>
<p>论文中的技术 具体是怎么实现的（如js）</p>
</blockquote>
<blockquote>
<p>简单陈述选择这个题目的原因？</p>
</blockquote>
<blockquote>
<p>简单介绍一下论文的软硬件开发环境</p>
</blockquote>
<blockquote>
<p>说说你的论文做得突出的地方有哪些？</p>
</blockquote>
<blockquote>
<p>你这个系统所用到的新技术，它的优缺点，特点是什么</p>
</blockquote>
<blockquote>
<p>说明管理信息系统设计和开发的基本过程分为几个阶段？每个阶段的主要工作是什么</p>
</blockquote>
<p>需求分析 总体设计 数据库设计 程序设计 程序测试</p>
<blockquote>
<p>需求分析阶段的主要任务有哪些？你是怎样进行需求分析的？</p>
</blockquote>
<p>功能需求：明确所开发的软件必须具备什么样的功能。<br>性能需求：明确待开发的软件的技术性能指标。<br>环境需求：明确软件运行时所需要的软、硬件的要求。<br>用户界面需求：明确人机交互方式、输入输出数据格式。<br>分析与综合，导出软件的逻辑模型<br>分析人员对获取的需求，进行一致性的分析检查，在分析、综合中逐步细化软件功能，划分成各个子功能。用图文结合的形式，建立起新系统的逻辑模型。</p>
<p>编写“需求规格说明书”，把双方共同的理解与分析结果用规范的方式描述出来，作为今后各项工作的基础。<br>编写初步用户使用手册，着重反映被开发软件的用户功能界面和用户使用的具体要求，用户手册能强制分析人员从用户使用的观点考虑软件。<br>编写确认测试计划，作为今后确认和验收的依据。<br>修改完善软件开发计划。在需求分析阶段对待开发的系统有了更进一步的了解，所以能更准确地估计开发成本、进度及资源要求，因此对原计划要进行适当修正。</p>
<blockquote>
<p>解释什么是用例图和它的作用</p>
</blockquote>
<p>用户与系统交互，展现用户和与他相关的用例之间的关系。通过用例图，人们可以获知系统不同种类的用户和用例。用例图也经常和其他图表配合使用。</p>
<blockquote>
<p>什么是数据流图？它们的作用是什么？</p>
</blockquote>
<p>它从数据传递和加工角度，以图形方式来表达系统的逻辑功能、数据在系统内部的逻辑流向和逻辑变换过程，是结构化系统分析方法的主要表达工具及用于表示软件模型的一种图示方法。</p>
<blockquote>
<p>解释E-R图并说明E-R图的作用</p>
</blockquote>
<p>E-R图也称实体-联系图(Entity Relationship Diagram)，提供了表示实体类型、属性和联系的方法，用来描述现实世界的概念模型。<br>它是描述现实世界关系概念模型的有效方法。是表示概念关系模型的一种方式。用“矩形框”表示实体型，矩形框内写明实体名称；用“椭圆图框”或圆角矩形表示实体的属性，并用“实心线段”将其与相应关系的“实体型”连接起来；<br>用”菱形框“表示实体型之间的联系成因，在菱形框内写明联系名，并用”实心线段“分别与有关实体型连接起来， 同时在”实心线段“旁标上联系的类型</p>
<blockquote>
<p>什么是数据完整性</p>
</blockquote>
<p>存储在数据库中的所有数据值均正确的状态。如果数据库中存储有不正确的数据值，则该数据库称为已丧失数据完整性。</p>
<blockquote>
<p>你选用的数据库系统是什么？请介绍你所使用的数据库连接方式</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">Sqlserver数据库</span><br><span class="line"><span class="tag">&lt;<span class="name">connectionStrings</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;DB&quot;</span> <span class="attr">connectionString</span>=<span class="string">&quot;server=.;database=DangAn;Integrated security = true;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">connectionStrings</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>系统设计采用了哪一种框架开发技术，介绍其优缺点</p>
</blockquote>
<blockquote>
<p>MVC设计模式是指什么，其优缺点，怎样用到在你的程序里</p>
</blockquote>
<blockquote>
<p>SSM/SSH框架是指什么，其优缺点，怎样用到在你的程序里</p>
</blockquote>
<p>spring+springmvc+mybatis dao service mybatis</p>
<blockquote>
<p>简要介绍Web开发前后台系统环境</p>
</blockquote>
<blockquote>
<p>请讲解你采用的Web前后端分离技术是如何实现的</p>
</blockquote>
<blockquote>
<p>简要描述论文实现的主要功能有哪些</p>
</blockquote>
<blockquote>
<p>系统的核心功能是什么？请简要解释其业务流程</p>
</blockquote>
<blockquote>
<p>系统中不同的角色，它们的权限是如何设计并实现的</p>
</blockquote>
<blockquote>
<p>简单介绍一下系统开发的流程</p>
</blockquote>
<p>需求分析+数据库设计+程序设计</p>
<blockquote>
<p>在系统安全性方面你是如何考虑的</p>
</blockquote>
<p>SQL注入</p>
<blockquote>
<p>介绍一下论文的测试工作</p>
</blockquote>
<blockquote>
<p>系统的哪些部分做的比较好？哪些地方可以改进</p>
</blockquote>
<blockquote>
<p>在系统开发过程中遇到了哪些困难，如何解决的</p>
</blockquote>
<blockquote>
<p>你觉得课程设计或毕业实习对毕业论文的影响大吗</p>
</blockquote>
<blockquote>
<p>有的code，或者出现的200 500 数字是什么</p>
</blockquote>
<p>200 表示程序执行成功； 500表示服务器错误； 404表示页面找不到或者请求方法找不到</p>
<h2 id="感谢阅读"><a href="#感谢阅读" class="headerlink" title="感谢阅读"></a>感谢阅读</h2>]]></content>
      <tags>
        <tag>答辩相关</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年答辩顺利通过</title>
    <url>/2023/06/14/2023%E5%B9%B4%E7%AD%94%E8%BE%A9%E9%A1%BA%E5%88%A9%E9%80%9A%E8%BF%87/</url>
    <content><![CDATA[<img src="https://s1.ax1x.com/2023/06/11/pCVdr7Q.jpg" alt="XE8dIg.jpg" border="0" height="100"/>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote>
<p><a href="https://www.zhihu.com/question/31020988">计算机毕设答辩时都会问到哪些问题？</a></p>
</blockquote>
<blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/145911029">计算机专业毕业答辩小tips</a></p>
</blockquote>
<h2 id="现场提问"><a href="#现场提问" class="headerlink" title="现场提问"></a>现场提问</h2><p>首先一定是问你毕业设计的课题或者系统相关的问题，所以只要毕设是你自己做的，一般不会有问题的。一定要做到对课题或者系统做到熟悉，了如指掌，当老师让你展示某个部分的内容时要能及时准确的展示，并作出相关的讲解，给大家分享一些可能会问的问题，大家可以结合自己的项目试着回答一下</p>
<p><code>一定要注意不会不要瞎回答，诚实点，偶尔一个问题不会不影响什么的</code></p>
<ol>
<li>你这个系统所用到的新技术，它的优缺点，特点是什么？</li>
<li>你的论文价值是什么？</li>
<li>你数据库整体的设计是怎么样的？</li>
<li>某个表，某个字段作用是什么？</li>
<li>你系统核心功能怎么实现？</li>
<li>你的文献综述是如何形成的？</li>
<li>你整个系统的优缺点是什么?</li>
<li>功能还有什么地方需要完善?</li>
<li>你系统的整体设计是怎么样？</li>
<li>你系统用了什么技术,这些技术应用的好处是什么？</li>
<li>你的毕业论文进行的研究方法是什么？</li>
<li>你为什么要选这个题目，你对这个题目怎么理解的？</li>
<li>数据库的一些基础知识，三大范式是什么？</li>
<li>时序图，ER图你是怎么画的，有什么要注意的？</li>
</ol>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmjP9U.jpg" alt="pCmjP9U.jpg"></td>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmj9hT.png" alt="pCmj9hT.png"></td>
</tr>
<tr>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmjpNV.png" alt="pCmjpNV.png"></td>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmjSA0.jpg" alt="pCmjSA0.jpg"></td>
</tr>
<tr>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmXx7q.jpg" alt="pCmXx7q.jpg"></td>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmXvBn.jpg" alt="pCmXvBn.jpg"></td>
</tr>
<tr>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmXjns.jpg" alt="pCmXjns.jpg"></td>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmXOXj.jpg" alt="pCmXOXj.jpg"></td>
</tr>
<tr>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmXLcQ.jpg" alt="pCmXLcQ.jpg"></td>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmXq1g.png" alt="pCmXq1g.png"></td>
</tr>
<tr>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmXb9S.png" alt="pCmXb9S.png"></td>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmX7h8.png" alt="pCmX7h8.png"></td>
</tr>
<tr>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmXTtf.png" alt="pCmXTtf.png"></td>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmXoAP.png" alt="pCmXoAP.png"></td>
</tr>
<tr>
<td><img src="https://s1.ax1x.com/2023/06/14/pCmX57t.png" alt="pCmX57t.png"></td>
<td><img src="https://s1.ax1x.com/2023/06/15/pCueUbt.png" alt="pCueUbt.png"></td>
</tr>
<tr>
<td><img src="https://s1.ax1x.com/2023/06/15/pCuetKA.png" alt="pCuetKA.png"></td>
<td><img src="https://s1.ax1x.com/2023/06/15/pCueNDI.png" alt="pCueNDI.png"></td>
</tr>
<tr>
<td><img src="https://s1.ax1x.com/2023/06/15/pCuedVP.png" alt="pCuedVP.png"></td>
<td><img src="https://s1.ax1x.com/2023/06/15/pCueJvd.png" alt="pCueJvd.png"></td>
</tr>
<tr>
<td><img src="https://s1.ax1x.com/2023/06/15/pCuewUf.png" alt="pCuewUf.png"></td>
<td><img src="https://s1.ax1x.com/2023/06/15/pCue058.png" alt="pCue058.png"></td>
</tr>
<tr>
<td><img src="https://s1.ax1x.com/2023/06/15/pCueDPS.png" alt="pCueDPS.png"></td>
<td><img src="https://s1.ax1x.com/2023/06/15/pCuer8g.png" alt="pCuer8g.png"></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>答辩通过</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2023/07/06/%E6%97%A5%E5%B8%B80706/</url>
    <content><![CDATA[<blockquote>
<p>Call you on the phone, I hate to leave you on your own.</p>
</blockquote>
<blockquote>
<p>Busy with their starring roles, their own tragedy</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2023/07/06/pC6HCEF.jpg" alt="pC6HCEF.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/06/pC6HSBT.jpg" alt="pC6HSBT.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/06/pC6HkC9.jpg" alt="pC6HkC9.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/06/pC6HpHU.jpg" alt="pC6HpHU.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/06/pC67zuV.jpg" alt="pC67zuV.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/06/pC6HPN4.jpg" alt="pC6HPN4.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/06/pC6HVjx.jpg" alt="pC6HVjx.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/06/pC6Hi4J.jpg" alt="pC6Hi4J.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/06/pC6HA3R.jpg" alt="pC6HA3R.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/06/pC6HEg1.jpg" alt="pC6HEg1.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/06/pC6Heu6.jpg" alt="pC6Heu6.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/06/pC6HmDK.jpg" alt="pC6HmDK.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/06/pC6HnHO.jpg" alt="pC6HnHO.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/06/pC6HKED.jpg" alt="pC6HKED.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2023/07/09/%E6%97%A5%E5%B8%B80709/</url>
    <content><![CDATA[<blockquote>
<p>而像在昨天发生的 都像在昨天结束. 只记得片段但不记得全部</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2023/07/09/pC28ZVJ.jpg" alt="pC28ZVJ.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/09/pC28m5R.jpg" alt="pC28m5R.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/09/pC28ea9.jpg" alt="pC28ea9.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/09/pC28Eb4.jpg" alt="pC28Eb4.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/09/pC28uP1.jpg" alt="pC28uP1.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/09/pC28M26.jpg" alt="pC28M26.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/09/pC28JVH.jpg" alt="pC28JVH.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/09/pC28K8x.jpg" alt="pC28K8x.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/09/pC28QxK.jpg" alt="pC28QxK.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/09/pC281KO.jpg" alt="pC281KO.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/09/pC283rD.jpg" alt="pC283rD.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/09/pC288qe.jpg" alt="pC288qe.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/09/pC28tIA.jpg" alt="pC28tIA.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/07/09/pC28Yad.jpg" alt="pC28Yad.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2023/08/20/%E6%97%A5%E5%B8%B80820/</url>
    <content><![CDATA[<blockquote>
<p>看著牠摇头晃脑的我在干嘛牠不懂，走到哪裡都是命运像在玩大富翁</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2023/08/20/pP8YtAO.jpg" alt="pP8YtAO.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/08/20/pP8YJHK.jpg" alt="pP8YJHK.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/08/20/pP8YNND.jpg" alt="pP8YNND.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/08/20/pP8YGB6.jpg" alt="pP8YGB6.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/08/20/pP8Y8nx.jpg" alt="pP8Y8nx.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/08/20/pP8YU4e.jpg" alt="pP8YU4e.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/08/20/pP8Yd9H.jpg" alt="pP8Yd9H.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/08/20/pP8YBjI.jpg" alt="pP8YBjI.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/08/20/pP8Y0gA.jpg" alt="pP8Y0gA.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/08/20/pP8Yw3d.jpg" alt="pP8Yw3d.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/08/20/pP8Yrut.jpg" alt="pP8Yrut.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot酒店客房管理系统</title>
    <url>/2023/07/23/Java%E5%AE%A2%E6%88%BF%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot酒店客房管理系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>（1）管理员系统公告管理</p>
<p>（2）用户对客房的收藏与删除</p>
<p>（3）管理员酒店商品管理</p>
<p>（4）酒店部门信息管理</p>
<p>（5）酒店附近美食推荐</p>
<p>（6）客户对酒店及客房的留言信息</p>
<p>（7）客户对已经下单的订单做出评价</p>
<p>（8）对可预约的客房进行下单处理</p>
<p>（9）酒店职位信息管理</p>
<p>（10）客户对酒店商品的采购记录</p>
<p>（11）酒店客房的房间管理</p>
<p>（12）员工管理</p>
<p>（13）用户管理及消息通知</p>
<p>（14）客房类型管理</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>test1<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/b02c5a3564d57a8e0d55a9e725193a1.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/ecd8d0081bc4d6c577ae351f5a7ada7.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/9013595272e7d99e2393f73cab30620.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/e873f798c7119f33ea9831d277b4778.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/824b300de49b9b218330fc8ace45fa2.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/c6a981234cdaa00f61c74fe4399bd38.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/37fa0b569acb2dbc2678b4b991efa5c.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/bb66240665449fd54ce121b37ed631a.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/9b77e28963f62b06b0200b089136c9e.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/b249398af81717bb5d48e4a70bf7ff0.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/07a1b5ef3f35407c82416c5b61a1fee.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/hotal.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/3af6a7cfe0c8e568a524266c5561135.png"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#110;&#x31;&#x6b;&#101;&#x32;&#x6b;&#x65;&#x40;&#x67;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;">&#x66;&#x61;&#110;&#x31;&#x6b;&#101;&#x32;&#x6b;&#x65;&#x40;&#x67;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>20238月装机配置</title>
    <url>/2023/08/20/20238%E6%9C%88%E8%A3%85%E6%9C%BA%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<blockquote>
<p>帮杨儿装了个矿卡游戏主机</p>
</blockquote>
<h2 id="硬件参数"><a href="#硬件参数" class="headerlink" title="硬件参数"></a>硬件参数</h2><p>CPU: AMD 锐龙 R5 5500</p>
<p>主板: 华硕 B450M-K || ￥909</p>
<p>内存: 金百达 银爵 DDR4 3200 8G*2 全新盒装 ￥204</p>
<p>显卡: RX5700XT 二手矿卡 ￥750</p>
<p>硬盘:西部数据 SN570 500G NVME m.2 固态硬盘 全新盒装 ￥205</p>
<p>电源: 九州风神 PF500 额定 600W 白牌 全新盒装 ￥204</p>
<p>散热:冰曼 6热管 双塔 单风扇 全新盒装 ￥50.6</p>
<p>配件总计: ￥2,303.6</p>
<p>机箱: 大水牛 二手 ￥100</p>
<p>显示器: 红米 24.5 165hz ￥599</p>
<p>总计: ￥3,002.6</p>
<h2 id="IMG"><a href="#IMG" class="headerlink" title="IMG"></a>IMG</h2><p><img src="https://s1.ax1x.com/2023/08/27/pPU6eoT.jpg" alt="pPU6eoT.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/08/27/pPU6ZwV.jpg" alt="pPU6ZwV.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/08/27/pPU6Ve0.jpg" alt="pPU6Ve0.jpg"></p>
<p><img src="https://s1.ax1x.com/2023/08/27/pPU6ALq.jpg" alt="pPU6ALq.jpg"></p>
<h2 id="说说问题"><a href="#说说问题" class="headerlink" title="说说问题"></a>说说问题</h2><ol>
<li>看到5700XT是个速桥三风扇我就觉得要寄，果然待机的一晚上直接干废了，只好从咸鱼上淘了的迪兰</li>
<li>B450MK这个二代主板还是一样的拉，小马拉大车了属于是</li>
<li>第三个是这个byd大水牛机箱，除了名字里有个大字，其他哪里都小，这三风扇的显卡完全装不进去，还是整了个先马黑洞</li>
</ol>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的药品销售系统</title>
    <url>/2023/08/27/Java%E8%8D%AF%E5%93%81%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的药品销售系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<h3 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h3><p>公告管理，药品管理，库存统计，物流信息，订单详情，订单评价，订单信息，缴费记录，药店管理，药店库存，员工管理，用户管理，销售排行</p>
<h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><p>个人信息，我的订单，缴费记录，订单评价，药品购买</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683864138195.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683864008853.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683864108403.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683863994707.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683864092021.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683863982591.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683864074951.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683864244337.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683864061554.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683864226438.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683864052387.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683864205060.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683864035131.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683864162642.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1683864020608.png"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#110;&#x31;&#107;&#101;&#x32;&#107;&#x65;&#64;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#109;">&#x66;&#x61;&#110;&#x31;&#107;&#101;&#x32;&#107;&#x65;&#64;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot对比字段更新</title>
    <url>/2023/08/30/SpringBoot%E5%AF%B9%E6%AF%94%E5%AD%97%E6%AE%B5%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<blockquote>
<p>设置自定义接口</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置字段展示顺序</span></span><br><span class="line"><span class="comment"> * 设置字段展示名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> sup</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.FIELD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> FieldDisplay &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**设置字段展示顺序*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">order</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**设置字段展示名称*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">name</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>变更内容实体类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">**</span><br><span class="line"> * 变更内容实体类</span><br><span class="line"> * <span class="meta">@author</span> uap</span><br><span class="line"> * <span class="meta">@date</span> <span class="number">2021</span>-09-<span class="number">15</span></span><br><span class="line"> */</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FieldDisplayResult</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 成员变量值 */</span></span><br><span class="line">    <span class="keyword">private</span> String value;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 成员变量名称 */</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 成员量展示名称 */</span></span><br><span class="line">    <span class="keyword">private</span> String displayName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 变更flag(0:,1:) */</span></span><br><span class="line">    <span class="keyword">private</span> String compareFlag;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 变更前内容 */</span></span><br><span class="line">    <span class="keyword">private</span> String beforeValue;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 变更后内容 */</span></span><br><span class="line">    <span class="keyword">private</span> String afterValue;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setValue</span><span class="params">(String value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDisplayName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> displayName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDisplayName</span><span class="params">(String displayName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.displayName = displayName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCompareFlag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> compareFlag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCompareFlag</span><span class="params">(String compareFlag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.compareFlag = compareFlag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBeforeValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> beforeValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBeforeValue</span><span class="params">(String beforeValue)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.beforeValue = beforeValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAfterValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> afterValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAfterValue</span><span class="params">(String afterValue)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.afterValue = afterValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;FieldDisplayResult&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;value=&#x27;&quot;</span> + value + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, displayName=&#x27;&quot;</span> + displayName + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, compareFlag=&#x27;&quot;</span> + compareFlag + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, beforeValue=&#x27;&quot;</span> + beforeValue + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, afterValue=&#x27;&quot;</span> + afterValue + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>实体类比较工具类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实体类比较工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> uap</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-09-15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FieldDisplayUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对两个相同实体类类字段变更内容</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> o 变更前</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n 变更后</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;FieldDisplayResult&gt; <span class="title">compareAndReturnDifferent</span><span class="params">(Object o, Object n)</span> </span>&#123;</span><br><span class="line">        Map&lt;Integer, FieldDisplayResult&gt; oMap = FieldDisplayUtils.convertObj2SortMap(o);</span><br><span class="line">        Map&lt;Integer, FieldDisplayResult&gt; nMap = FieldDisplayUtils.convertObj2SortMap(n);</span><br><span class="line">        <span class="keyword">return</span> compareSortMap(oMap, nMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  根据注解获取其字段信息，并按照设置的展示顺序排序</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> obj 实体类对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;Integer, FieldDisplayResult&gt; <span class="title">convertObj2SortMap</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取所有成员变量</span></span><br><span class="line">        Class&lt;?&gt; clazz = obj.getClass();</span><br><span class="line">        Field[] fields = clazz.getDeclaredFields();</span><br><span class="line">        TreeMap&lt;Integer, FieldDisplayResult&gt; sortMap = <span class="keyword">new</span> TreeMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历成员变量，记录含有@FieldDisplay注解的字段，以及注解上标注的内容</span></span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            <span class="comment">//忽略序列化字段</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;serialVersionUID&quot;</span>.equals(field.getName())) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//设置可读</span></span><br><span class="line">            field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取注解，跳过未加注解字段</span></span><br><span class="line">            FieldDisplay annotation = field.getAnnotation(FieldDisplay.class);</span><br><span class="line">            <span class="keyword">if</span> (annotation == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取字段名</span></span><br><span class="line">            String displayName = annotation.name();</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isBlank(annotation.name())) &#123;</span><br><span class="line">                displayName = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Object value;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//取得成员变量get方法，获取其内容</span></span><br><span class="line">                value = <span class="keyword">new</span> PropertyDescriptor(field.getName(), clazz).getReadMethod().invoke(obj);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">                value = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> Date) &#123;</span><br><span class="line">                String dateFormat = <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>;</span><br><span class="line"></span><br><span class="line">                JsonFormat annotationDateJ = field.getAnnotation(JsonFormat.class);</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">null</span> != annotationDateJ) &#123;</span><br><span class="line">                    dateFormat = annotationDateJ.pattern();</span><br><span class="line">                &#125;</span><br><span class="line">                Excel annotationDate = field.getAnnotation(Excel.class);</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">null</span> != annotationDate) &#123;</span><br><span class="line">                    dateFormat = annotationDate.dateFormat();</span><br><span class="line">                &#125;</span><br><span class="line">                value = DateFormatUtils.format((Date) value, dateFormat);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> BigDecimal) &#123;</span><br><span class="line">                value = <span class="keyword">new</span> BigDecimal(value.toString()).toPlainString();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            FieldDisplayResult result = <span class="keyword">new</span> FieldDisplayResult();</span><br><span class="line">            result.setName(field.getName());</span><br><span class="line">            result.setValue(value.toString());</span><br><span class="line">            result.setDisplayName(displayName);</span><br><span class="line">            sortMap.put(Integer.parseInt(annotation.order()), result);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sortMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对比字段，判断是否产生变更</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> beforeMap 变更前字段Map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> afterMap 变更后字段Map</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;FieldDisplayResult&gt; <span class="title">compareSortMap</span><span class="params">(Map&lt;Integer, FieldDisplayResult&gt; beforeMap, Map&lt;Integer, FieldDisplayResult&gt; afterMap)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        List&lt;FieldDisplayResult&gt; resultList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, FieldDisplayResult&gt; beforeEntry : beforeMap.entrySet()) &#123;</span><br><span class="line">            <span class="comment">//获取变更前后对象</span></span><br><span class="line">            FieldDisplayResult r = <span class="keyword">new</span> FieldDisplayResult();</span><br><span class="line">            FieldDisplayResult before = beforeEntry.getValue();</span><br><span class="line">            FieldDisplayResult after = afterMap.get(beforeEntry.getKey());</span><br><span class="line"></span><br><span class="line">            <span class="comment">//检查内容是否修改</span></span><br><span class="line">            <span class="keyword">if</span> (StrUtil.equals(before.getValue(), after.getValue())) &#123;</span><br><span class="line">                <span class="comment">//未修改</span></span><br><span class="line">                r.setCompareFlag(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//修改</span></span><br><span class="line">                r.setCompareFlag(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//成员变量名称</span></span><br><span class="line">            r.setName(before.getName());</span><br><span class="line">            <span class="comment">//成员量展示名称</span></span><br><span class="line">            r.setDisplayName(before.getDisplayName());</span><br><span class="line">            <span class="comment">//变更前内容</span></span><br><span class="line">            r.setBeforeValue(before.getValue());</span><br><span class="line">            <span class="comment">//变更后内容</span></span><br><span class="line">            r.setAfterValue(after.getValue());</span><br><span class="line">            resultList.add(r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resultList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>使用示例</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;FieldDisplayResult&gt; baseChangeList = FieldDisplayUtils.compareAndReturnDifferent(oldBase, newBase);</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot车辆租赁系统系统</title>
    <url>/2023/10/05/Java%E8%BD%A6%E8%BE%86%E7%A7%9F%E8%B5%81%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot车辆租赁系统系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>用户管理，车辆预订，订单支付，付款记录，订单评价，车店导航，公告管理，品牌管理，车辆维修，车店管理，车辆管理，员工管理</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696517265775.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696517092518.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696517251728.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696517076004.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696517198532.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696517058026.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696517174261.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696517037615.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696517152392.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696517015150.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696517133833.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696517283969.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696517117031.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#x61;&#x6e;&#49;&#107;&#x65;&#x32;&#x6b;&#x65;&#64;&#x67;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#109;">&#102;&#x61;&#x6e;&#49;&#107;&#x65;&#x32;&#x6b;&#x65;&#64;&#x67;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>去你的岛</title>
    <url>/2023/09/24/9%E6%9C%88%E8%A2%AB%E9%AA%97300/</url>
    <content><![CDATA[<p>这个司马的去你的岛，臭婊子家里是死人了，这点钱给你家里人买点纸烧烧吧</p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696519663561.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696519621391.png"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1696519700142.png"></p>
<blockquote>
<p>这婊子的嘴脸真够恶心的，不过也符合婊子该做的事</p>
</blockquote>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring添加数据后立即查询</title>
    <url>/2023/10/20/spring%E6%B7%BB%E5%8A%A0%E5%90%8E%E7%AB%8B%E5%8D%B3%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<p>Spring新增数据后立即查询,但是查询不到#Mybatis新增数据丢失</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">查一下数据库隔离级别，<span class="keyword">select</span> @<span class="variable">@global</span>.tx_isolation;</span><br></pre></td></tr></table></figure>

<p>读未提交（READ UNCOMMITTED）：一个事务还没提交时，它做的变更就能被别的事务看到。</p>
<p>读提交（READ COMMITTED）：一个事务提交之后，它做的变更才会被其他事务看到。</p>
<p>可重复读（REPEATABLE READ）：一个事务执行过程中看到的数据，总是跟这个事务在启动时看到的数据是一致的。当然在可重复读隔离级别下，未提交变更对其他事务也是不可见的。</p>
<p>串行化（SERIALIZABLE）：对于同一行记录，“写”会加“写锁”，“读”会加“读锁”，当出现读写锁冲突的时候，后访问的事务必须等前一个事务执行完成，才能继续执行。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional(isolation = Isolation.READ_COMMITTED, propagation = Propagation.REQUIRES_NEW)</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2023/10/18/%E6%97%A5%E5%B8%B81018/</url>
    <content><![CDATA[<blockquote>
<p>我的生命像是下着雨的无尽长廊，雨夜挨着雨夜，一眼望不到尽头，每当我试图靠近谁的时候，他们就会像沙子一样地飘洒，最后只给我留下满身泥污。我与你之间好像隔着一副巨大的玻璃，你在那边欢笑，我在这边叫喊，直到我心灰意冷，消失在雨中。</p>
</blockquote>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/12e9cc5d7738702e7e91b873cc10cc5.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/9d1591ce1505787ae3694a687e8c202.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/7dc57339c13967908da1dffeebed857.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/6b451eadca91f32bab7233527d7e991.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/5d92671f987e07d7b680563713ebddf.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/3fe46b3ef600ce49e638210dd7683d2.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1ff92060cb4a4b205ec91a72000ac34.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/feb7d83e5e3c03e27788c0b073725f1.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/dcb0926108ca38ed6fca10bd9560acf.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/cd54d66db606090f9e9970237c1ccd8.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/aad31dc36fe388827ea8d3783cc17fb.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/a3d52d51c64b4c7f154fe96e48ab536.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/9746dc8a2241405484739026337870b.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/961c343c7e49bf7c38c20d417206c38.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/950f5ab04673934747b19bcec743811.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/336ae74e46d44c8964690b25e82d160.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/54ada94825b807c8888d81515e5eb22.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot二手交易服务系统</title>
    <url>/2023/10/28/Java%E4%BA%8C%E6%89%8B%E4%BA%A4%E6%98%93%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot二手交易服务系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>用户注册、密码修改、销售情况统计、交易市场、商品评论、公告管理、用户收藏、商品管理、评价管理、订单管理、商品类型、消息管理、用户管理、订单物流更新、商品购买、订单评价</p>
</blockquote>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户1]<br>fank<br>1234qwer</p>
<p>[用户2]<br>test2<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698505649843.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698505534664.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698505633237.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698505694472.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698505622043.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698506824199.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698505606122.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698506802722.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698505591995.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698505794221.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698505578675.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698505719644.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698505558940.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698505705165.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1698505548846.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#97;&#x6e;&#x31;&#107;&#x65;&#x32;&#x6b;&#x65;&#64;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#99;&#111;&#109;">&#102;&#97;&#x6e;&#x31;&#107;&#x65;&#x32;&#x6b;&#x65;&#64;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#99;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot点餐配送系统</title>
    <url>/2023/12/03/Java%E7%82%B9%E9%A4%90%E9%85%8D%E9%80%81%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot点餐配送系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>管理员端功能模块：</p>
</blockquote>
<ol>
<li>商家管理模块：商家信息的查询、增加、修改、删除等</li>
<li>用户管理模块：用户信息的查询、增加、修改、删除等</li>
<li>个人中心模块：当天日期时间，日历、登录用户名等</li>
<li>退出登录：退出到登录页面</li>
<li>销售与统计模块：统计系统所有商品销售数量，当天营业额</li>
<li>用户地址管理</li>
<li>公告信息管理</li>
<li>菜品信息管理</li>
<li>订单信息与订单评价</li>
<li>积分物品管理</li>
<li>商家信息管理</li>
<li>员工信息管理</li>
<li>注册用户管理</li>
</ol>
<blockquote>
<p>商家端功能模块：</p>
</blockquote>
<ol>
<li>注册、登录模块：商家进行注册、登录到商家端口。</li>
<li>菜系信息管理模块：菜系信息查询、添加、修改、删除等。</li>
<li>菜品评论管理模块：查看用户对相应菜品的评价</li>
<li>订单管理模块：订单处理、订单记录查询、查看顾客消费历史记录等。</li>
<li>营养分析模块：根据所选菜品，自动计算热量、蛋白质、脂肪等营养成分，帮助顾客更加健康地饮食。（热量 蛋白质 脂肪等放在菜品信息的营养里，加入购物车或者结算的时候 在能量计算里累计 超出当日摄入量时 提示）</li>
<li>会员管理模块：商品对会员进行增、删、改、查</li>
<li>个人中心模块：当天日期时间，日历、登录用户名等</li>
<li>退出登录：退出到登录页面</li>
<li>销售与统计模块：统计本家商品销售数量，当天营业额</li>
<li>店家会员积分调整</li>
<li>员工信息管理：处理本家员工信息</li>
</ol>
<blockquote>
<p>用户端功能模块：</p>
</blockquote>
<ol>
<li>注册、登录模块：用户进行注册、登录到用户端口</li>
<li>首页模块：轮播图推荐菜品、商户查询、菜系查询、菜品查询</li>
<li>购物车模块：加入购物车、购物车结算（支付宝沙箱）、购物车管理、清空购物车等。</li>
<li>评价模块：对已消费的菜品进行评价，为其他用户参考。</li>
<li>个人中心模块：当天日期时间，日历、登录用户名</li>
<li>退出登录：退出到登录页面</li>
<li>积分兑换模块：通过购买商品获取对应的积分，一定的积分可以兑换相应的商品。</li>
<li>会员折扣模块：对支付的商品根据会员等级进行相应的折扣</li>
<li>配送收货地址管理</li>
<li>订单支付支付宝沙盒支付，支付后邮件通知</li>
<li>积分物品兑换记录管理</li>
</ol>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<p>[商家]<br>shangjia<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576692558.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576893522.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576678760.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576884557.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576661415.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576867495.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576641695.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576838962.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576628521.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576825600.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576611164.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576799407.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701577197448.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576747695.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576964791.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576725562.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576913590.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576713210.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701576760956.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#97;&#x6e;&#x31;&#x6b;&#x65;&#x32;&#x6b;&#x65;&#x40;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;">&#102;&#97;&#x6e;&#x31;&#x6b;&#x65;&#x32;&#x6b;&#x65;&#x40;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2023/12/03/%E6%97%A5%E5%B8%B81203/</url>
    <content><![CDATA[<blockquote>
<p>相思之疾敏感如犬。</p>
</blockquote>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/4ad68b9914ee540f64f78a023cb1515.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/3bc9b07a0acbc18f5ec704c784c38a4.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1a0cb160a31f50f4980d7a214e924cb.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/f955019268cf3f7c97ea60f556a138a.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/f48b721d4c5e1772393b33f0685f7b6.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/e05d05670a9787538cffc6d33a0b71d.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/e1c50a634750c7495bc7d8c7c8cd91d.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/cd985359d47a016fe60fe8198188958.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/15935d475c67b91b20403e27144e351.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/596f080d0d49a42727c392cf7831cff.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/524a47fb01a718f8cb192d101af39cc.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/86dfdc0ab7d64e7c8e7b331e9a85ace.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/8ff0878ea03f144b852e638058e3e16.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/8baa22bb3f4fc136d873e762ebb225b.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/4faefdea5b5f9a202b3beabc6d677db.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2023/12/17/%E6%97%A5%E5%B8%B81217/</url>
    <content><![CDATA[<blockquote>
<p>野火在我的心底燃烧，梦醒生活再被截获，我罪恶 在感情上面怀有一丝愧色</p>
</blockquote>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/6f67992d69ddfd1a051091a7abbd7e2.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/2c1caa98090b4266bd4a4bf410db6b4.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1d3a58c1c887bd2f5b76dc7a5db444c.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/fec04b446ab576cca4053acbe1b101f.png"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/ed90b8278d7093960744b24b4104059.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/cc56d60778213a7652b911fd52294eb.png"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/ca2519c31036979fc25df68748c4954.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/c9c869a0893f450dcb7d21bc2b0dbff.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/7517b37459239b037d941b0c92c0a80.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/7007b7956929b30053a1eaec528f689.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/9ccde9a8addc4c59d014dcaacfd7a0a.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/9c4f3f7880eb89a62f5d4f0bb8c3bd5.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/8cf4cc4eda9b7f6614b66e746f1aa21.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot工地安全预警管理系统</title>
    <url>/2023/12/18/Java%E5%B7%A5%E5%9C%B0%E5%AE%89%E5%85%A8%E9%A2%84%E8%AD%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot工地安全预警管理系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>档案管理，安全教育，用工评价，安全巡检，项目工程，系统公告，库房管理，采购申请，耗材审批，入库管理，库房管理，出库管理，出入库明细，物料申请，个人信息，物料申请，领取记录，库房信息，采购管理，采购记录，耗材类型，采购申请，站点管理，采购套餐</p>
</blockquote>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<p>[采购员]<br>caigou<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952583051.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952757273.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952554573.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952734602.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952537741.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952675393.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952526360.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952665885.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952516122.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952653458.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952499591.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952623374.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952601194.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952612158.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1701952769086.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#97;&#110;&#x31;&#107;&#x65;&#x32;&#x6b;&#101;&#x40;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#109;">&#102;&#97;&#110;&#x31;&#107;&#x65;&#x32;&#x6b;&#101;&#x40;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h4 id="其它资源"><a href="#其它资源" class="headerlink" title="其它资源"></a>其它资源</h4><p><a href="https://berserker287.github.io/2023/06/14/2023%E5%B9%B4%E7%AD%94%E8%BE%A9%E9%A1%BA%E5%88%A9%E9%80%9A%E8%BF%87/">2023年答辩顺利通过</a></p>
<p><a href="https://berserker287.github.io/2022/05/25/%E9%A1%B9%E7%9B%AE%E4%BA%A4%E6%98%93%E8%AE%B0%E5%BD%95/">2022年答辩通过率100%</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/%E6%AF%95%E4%B8%9A%E7%AD%94%E8%BE%A9%E5%AF%BC%E5%B8%88%E6%8F%90%E9%97%AE%E7%9A%84%E9%AB%98%E9%A2%91%E9%97%AE%E9%A2%98/">毕业答辩导师提问的高频问题</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/50%E4%B8%AA%E9%AB%98%E9%A2%91%E7%AD%94%E8%BE%A9%E9%97%AE%E9%A2%98-%E6%8A%80%E6%9C%AF%E7%AF%87/">50个高频答辩问题-技术篇</a></p>
<p><a href="https://www.zhihu.com/question/31020988">计算机毕设答辩时都会问到哪些问题？</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/145911029">计算机专业毕业答辩小tips</a></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的仓库管理系统</title>
    <url>/2023/12/20/Java%E4%BB%93%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的仓库管理系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>商户管理，套餐管理，申请记录，库房管理，入库记录，出库记录，采购计划，报表统计，耗材类别，出入库物品明细</p>
<p>制定申请物品-&gt;管理员审批制定采购计划-&gt;采购员采购-&gt;入库-&gt;出库</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[采购员]<br>caigou<br>1234qwer</p>
<p>[用户]<br>lisi<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703080753720.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703080969395.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703080712574.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703080953291.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703084753472.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703080878407.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703081092356.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703080862614.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703081076525.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703080844691.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703081052848.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703080830613.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703081035620.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703080818367.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703081023390.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703080803381.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703080992261.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703080792182.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703080981840.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#x6e;&#49;&#107;&#x65;&#x32;&#107;&#x65;&#64;&#x67;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;">&#x66;&#x61;&#x6e;&#49;&#107;&#x65;&#x32;&#107;&#x65;&#64;&#x67;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h4 id="其它资源"><a href="#其它资源" class="headerlink" title="其它资源"></a>其它资源</h4><p><a href="https://berserker287.github.io/2023/06/14/2023%E5%B9%B4%E7%AD%94%E8%BE%A9%E9%A1%BA%E5%88%A9%E9%80%9A%E8%BF%87/">2023年答辩顺利通过</a></p>
<p><a href="https://berserker287.github.io/2022/05/25/%E9%A1%B9%E7%9B%AE%E4%BA%A4%E6%98%93%E8%AE%B0%E5%BD%95/">2022年答辩通过率100%</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/%E6%AF%95%E4%B8%9A%E7%AD%94%E8%BE%A9%E5%AF%BC%E5%B8%88%E6%8F%90%E9%97%AE%E7%9A%84%E9%AB%98%E9%A2%91%E9%97%AE%E9%A2%98/">毕业答辩导师提问的高频问题</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/50%E4%B8%AA%E9%AB%98%E9%A2%91%E7%AD%94%E8%BE%A9%E9%97%AE%E9%A2%98-%E6%8A%80%E6%9C%AF%E7%AF%87/">50个高频答辩问题-技术篇</a></p>
<p><a href="https://www.zhihu.com/question/31020988">计算机毕设答辩时都会问到哪些问题？</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/145911029">计算机专业毕业答辩小tips</a></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的物资管理系统</title>
    <url>/2023/12/20/Java%E7%89%A9%E8%B5%84%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的物资管理系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>商户管理，套餐管理，申请记录，库房管理，入库记录，出库记录，采购计划，报表统计，物资类别，出入库物品明细</p>
<p>制定申请物品-&gt;管理员审批制定采购计划-&gt;采购员采购-&gt;入库-&gt;出库</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[采购员]<br>caigou<br>1234qwer</p>
<p>[用户]<br>lisi<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907138762.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907317483.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907125711.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907304037.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907113125.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907268190.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907098318.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907247498.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907608952.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907224697.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907599256.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907209784.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907578751.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907187396.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907368072.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907170241.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907351735.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1703907151020.jpg"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#97;&#x6e;&#x31;&#x6b;&#x65;&#x32;&#x6b;&#x65;&#64;&#103;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;">&#x66;&#97;&#x6e;&#x31;&#x6b;&#x65;&#x32;&#x6b;&#x65;&#64;&#103;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h4 id="其它资源"><a href="#其它资源" class="headerlink" title="其它资源"></a>其它资源</h4><p><a href="https://berserker287.github.io/2023/06/14/2023%E5%B9%B4%E7%AD%94%E8%BE%A9%E9%A1%BA%E5%88%A9%E9%80%9A%E8%BF%87/">2023年答辩顺利通过</a></p>
<p><a href="https://berserker287.github.io/2022/05/25/%E9%A1%B9%E7%9B%AE%E4%BA%A4%E6%98%93%E8%AE%B0%E5%BD%95/">2022年答辩通过率100%</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/%E6%AF%95%E4%B8%9A%E7%AD%94%E8%BE%A9%E5%AF%BC%E5%B8%88%E6%8F%90%E9%97%AE%E7%9A%84%E9%AB%98%E9%A2%91%E9%97%AE%E9%A2%98/">毕业答辩导师提问的高频问题</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/50%E4%B8%AA%E9%AB%98%E9%A2%91%E7%AD%94%E8%BE%A9%E9%97%AE%E9%A2%98-%E6%8A%80%E6%9C%AF%E7%AF%87/">50个高频答辩问题-技术篇</a></p>
<p><a href="https://www.zhihu.com/question/31020988">计算机毕设答辩时都会问到哪些问题？</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/145911029">计算机专业毕业答辩小tips</a></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的同城物流配送系统</title>
    <url>/2024/01/01/Java%E5%90%8C%E5%9F%8E%E7%89%A9%E6%B5%81%E9%85%8D%E9%80%81%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的同城物流配送系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>管理员：公告管理、数据统计、统计图表、用户地址管理、优惠券管理、订单评价信息管理、兑换记录、物品管理、订单管理、员工管理、员工收益、用户管理、提现记录审核、修改密码</p>
<p>配送员：我的订单统计、个人信息变更、我的订单、我的收益、提现申请、订单评价、接单中心、修改密码</p>
<p>用户：用户注册，用户下单、支付宝沙盒支付、个人信息、收货地址管理、物品兑换、兑换记录、我的订单、订单评价、我的优惠券</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[配送员]<br>peisong<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084076553.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084340519.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084060958.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084294832.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704083960875.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084277370.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704083943526.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084257162.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704083933526.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084242336.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704083897279.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084226018.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704083886487.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084213598.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084426592.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084198742.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084397990.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084185840.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084375909.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1704084173290.jpg"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#x6e;&#x31;&#107;&#101;&#50;&#x6b;&#x65;&#x40;&#103;&#109;&#97;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;">&#x66;&#x61;&#x6e;&#x31;&#107;&#101;&#50;&#x6b;&#x65;&#x40;&#103;&#109;&#97;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h4 id="其它资源"><a href="#其它资源" class="headerlink" title="其它资源"></a>其它资源</h4><p><a href="https://berserker287.github.io/2023/06/14/2023%E5%B9%B4%E7%AD%94%E8%BE%A9%E9%A1%BA%E5%88%A9%E9%80%9A%E8%BF%87/">2023年答辩顺利通过</a></p>
<p><a href="https://berserker287.github.io/2022/05/25/%E9%A1%B9%E7%9B%AE%E4%BA%A4%E6%98%93%E8%AE%B0%E5%BD%95/">2022年答辩通过率100%</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/%E6%AF%95%E4%B8%9A%E7%AD%94%E8%BE%A9%E5%AF%BC%E5%B8%88%E6%8F%90%E9%97%AE%E7%9A%84%E9%AB%98%E9%A2%91%E9%97%AE%E9%A2%98/">毕业答辩导师提问的高频问题</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/50%E4%B8%AA%E9%AB%98%E9%A2%91%E7%AD%94%E8%BE%A9%E9%97%AE%E9%A2%98-%E6%8A%80%E6%9C%AF%E7%AF%87/">50个高频答辩问题-技术篇</a></p>
<p><a href="https://www.zhihu.com/question/31020988">计算机毕设答辩时都会问到哪些问题？</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/145911029">计算机专业毕业答辩小tips</a></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的图书缴费系统</title>
    <url>/2024/02/23/Java%E5%9B%BE%E4%B9%A6%E7%BC%B4%E8%B4%B9%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的仓库管理系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>管理员 1.学生信息管理（绑定学生与班级） 2.书费缴纳 3.缴费记录 4.公告管理 5.回收管理 6.数据统计 7.管理员图书管理 8.班级管理 9.班级图书绑定 10.修改密码</p>
<p>学生 1.学生登录 2.缴费消息通知 3.缴费记录 4.我的图书 5.图书回收 6.个人信息 7.修改密码</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1708691606184.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1708691784027.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1708691596998.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1708691756011.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1708691579075.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1708691725156.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1708691554752.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1708691686009.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1708691542842.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1708691657469.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1708691530896.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1708691646316.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1708691481263.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1708691619808.jpg"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#x61;&#110;&#49;&#x6b;&#101;&#x32;&#x6b;&#x65;&#64;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#109;">&#102;&#x61;&#110;&#49;&#x6b;&#101;&#x32;&#x6b;&#x65;&#64;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h4 id="其它资源"><a href="#其它资源" class="headerlink" title="其它资源"></a>其它资源</h4><p><a href="https://berserker287.github.io/2023/06/14/2023%E5%B9%B4%E7%AD%94%E8%BE%A9%E9%A1%BA%E5%88%A9%E9%80%9A%E8%BF%87/">2023年答辩顺利通过</a></p>
<p><a href="https://berserker287.github.io/2022/05/25/%E9%A1%B9%E7%9B%AE%E4%BA%A4%E6%98%93%E8%AE%B0%E5%BD%95/">2022年答辩通过率100%</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/%E6%AF%95%E4%B8%9A%E7%AD%94%E8%BE%A9%E5%AF%BC%E5%B8%88%E6%8F%90%E9%97%AE%E7%9A%84%E9%AB%98%E9%A2%91%E9%97%AE%E9%A2%98/">毕业答辩导师提问的高频问题</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/50%E4%B8%AA%E9%AB%98%E9%A2%91%E7%AD%94%E8%BE%A9%E9%97%AE%E9%A2%98-%E6%8A%80%E6%9C%AF%E7%AF%87/">50个高频答辩问题-技术篇</a></p>
<p><a href="https://www.zhihu.com/question/31020988">计算机毕设答辩时都会问到哪些问题？</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/145911029">计算机专业毕业答辩小tips</a></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于微信小程序的商品购买系统</title>
    <url>/2024/03/11/Java%E5%95%86%E5%93%81%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot微信小程序的商品购买系统</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>商铺管理员<br>商铺信息、我的商品、商铺订单、订单评价、消息回复、商铺审核、用户沟通</p>
</blockquote>
<blockquote>
<p>系统管理员<br>收货地址管理、商铺审核管理、公告信息、商品管理、用户评价、消息管理、订单管理、贴子管理、商铺管理、用户管理、商品类型</p>
</blockquote>
<blockquote>
<p>用户<br>商铺详情、查看公告、搜索商品、系统论坛、发帖回复、用户订单、加入购物车、收货地址管理、订单评价、联系客服</p>
</blockquote>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[商家]<br>test1<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709524875703.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709525198162.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709524847522.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709525186348.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709523881765.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709525173545.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709523869912.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709525157487.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709523815244.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709525137717.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709523787799.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709525118751.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709524886865.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709525044436.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709525252181.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709525023326.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709525238258.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709525011621.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709525221898.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709524999125.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1709525210792.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#97;&#x6e;&#49;&#x6b;&#x65;&#x32;&#107;&#101;&#x40;&#103;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;">&#x66;&#97;&#x6e;&#49;&#x6b;&#x65;&#x32;&#107;&#101;&#x40;&#103;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2024/03/12/%E6%97%A5%E5%B8%B80311/</url>
    <content><![CDATA[<blockquote>
<p>Torn Apart</p>
</blockquote>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/33fdc2c9dad4a7b7e2f9562520f80ae.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/31d43a135b52974bf06ddc241e7fc87.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/facd194c14856a15a4d6678729c3db9.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/d054684825d7b13bf19dc682ae62b1f.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/b005ed85cd609f4e98e319c6da174dc.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/ace14e188f730d89f6edf857a918482.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/a5b204034595a9d0256512a789ccfb8.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/18185831ed2a5d27816103a5db17bf3.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/78557de7bb59b7274616ae9eef8f0bb.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/9920fb78b5ab40ca95ca87e787a2f48.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/267efd391f2a544684a88dbedeb91e6.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的停车场管理系统</title>
    <url>/2024/03/15/Java%E5%81%9C%E8%BD%A6%E5%9C%BA%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot停车场管理系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件) + SpreadJS</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>此项目的研究内容主要是建立基于Web的停车场管理系统，该系统面向停车场管理员、停车场用户，不同的用户登录系统获得的权限不同，使用的功能也不同，获取的信息也有所差异。</p>
</blockquote>
<p>停车场管理员可以通过系统登录并管理停车场的日常运营，包括车辆进出管理、停车位管理、收费管理等。停车场工作人员主要负责车辆进出管理，监控停车场的车辆进出情况，使用系统进行车辆识别、放行、收费等操作，且工作人员可以实时查看停车场的停车位情况，并在需要时进行停车位的调整和管理。停车场用户功能有通过系统注册账号并登录，进行停车预订、支付等操；可以通过系统查询停车场的空闲停车位信息，并进行预订操作，选择停车场和停车位，预定停车时间；系统根据用户停车时间和停车场收费标准计算停车费用，用户可以通过系统选择支付方式进行支付。<br>具体如下：</p>
<ol>
<li>   用户管理：<br>在系统信息管理中，包括添加角色信息、管理角色信息、添加用户信息、管理用户信息、管理角色信息和管理用户信息模块可以对角色和用户进行查询、编辑和删除；会在其中设置员工的信息和权限等；注册和登录：用户可以通过注册账户并登录系统来访问其功能。<br>个人资料管理：用户可以编辑和更新其个人信息，如联系信息、车辆信息等。</li>
<li>   停车位管理：<br>主要包括添加车位信息、管理车位信息，管理车位信息模块可以对车主车位信息进行查询、编辑和删除；<br>停车位分配：管理人员可以将停车位分配给用户，或者系统可以根据用户需求自动分配停车位。<br>实时停车位状态：用户可以查看停车场内实时的停车位情况，以便选择空余的停车位。</li>
<li>   预订和付款：<br>预订停车位：用户可以提前预订停车位，确保有空位可用。<br>付款系统：用户可以使用在线支付或其他支付方式支付停车费用。</li>
<li>   进出管理：<br>入场/出场记录：系统记录用户车辆的进出时间，并计算停车费用。<br>固定车主停车管理中，可对车主的停车信息进行查询和删除；在临时车辆信息管理中，可对临时车主的停车信息进行查询和删除。</li>
<li>   费用管理：<br>主要包括添加收费信息、管理收费信息。可以选择是月用户还是年用户。相应的，管理收费信息可以对车主的费用进行一个收费，可以对车主的收费信息进行查询和删除；</li>
<li>   报告和统计：<br>停车数据分析：生成停车场使用情况的报告和统计数据，如停车位利用率、繁忙时段等。<br>收入报表：生成停车场的收入报表，包括总收入、各种费用的收入比例等。</li>
<li>   通知和提醒：<br>预约提醒：向用户发送预约成功和即将到期的提醒。<br>违规提醒：对于超时停车或其他违规行为，向用户发送提醒通知。</li>
<li>   打印管理：对所需要打印的信息进行打印处理，包括对固定车主和临时车主相关信息进行打印和取票机的打印。</li>
</ol>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710428797789.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710428952843.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710429285008.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710428939320.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710429236895.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710428922060.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710429202622.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710428910448.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710429139032.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710428898988.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710429110913.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710428874569.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710429081402.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710428843986.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710429014212.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710428829118.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710429001447.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710428812516.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710428974850.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#97;&#110;&#x31;&#107;&#x65;&#50;&#x6b;&#101;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;">&#x66;&#97;&#110;&#x31;&#107;&#x65;&#50;&#x6b;&#101;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的显卡售后服务系统</title>
    <url>/2024/03/16/Java%E6%98%BE%E5%8D%A1%E5%94%AE%E5%90%8E%E6%9C%8D%E5%8A%A1%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot显卡售后服务系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、Thymeleaf<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件) + SpreadJS</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>管理员<br>1、用户管理 2、员工管理 3、评价管理 4、服务类型 5、预约管理 6、维修信息 7、产品信息 8、缴费记录 9、工单管理 10、公告信息 11.产品序号</p>
<p>客户<br>1.我的工单 2.个人信息 3.缴费记录 4.维修信息</p>
<p>维修员<br>1.我的任务 产品售后服务系统</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br><a href="mailto:&#x66;&#97;&#110;&#x31;&#107;&#x65;&#50;&#x6b;&#x65;&#64;&#x67;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#111;&#x6d;">&#x66;&#97;&#110;&#x31;&#107;&#x65;&#50;&#x6b;&#x65;&#64;&#x67;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#111;&#x6d;</a><br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518357211.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518576620.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518311784.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518556727.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518717323.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518541108.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518702060.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518511259.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518690300.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518500239.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518676593.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518486438.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518663262.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518469105.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518646498.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518451096.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518635083.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518434521.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518620153.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518408640.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1710518593573.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#x61;&#x6e;&#49;&#x6b;&#x65;&#x32;&#x6b;&#101;&#x40;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;">&#102;&#x61;&#x6e;&#49;&#x6b;&#x65;&#x32;&#x6b;&#101;&#x40;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的房屋报修系统</title>
    <url>/2024/03/22/Java%E6%88%BF%E5%B1%8B%E6%8A%A5%E4%BF%AE%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的房屋报修系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>房屋报修系统</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108561237.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108607537.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108529846.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108756731.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108514266.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108737836.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108343613.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108722357.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108330034.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108709500.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108311446.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108693189.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108282508.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108641934.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108807043.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711108631605.jpg"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#x6e;&#x31;&#107;&#101;&#50;&#107;&#101;&#64;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;">&#x66;&#x61;&#x6e;&#x31;&#107;&#101;&#50;&#107;&#101;&#64;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h4 id="其它资源"><a href="#其它资源" class="headerlink" title="其它资源"></a>其它资源</h4><p><a href="https://berserker287.github.io/2023/06/14/2023%E5%B9%B4%E7%AD%94%E8%BE%A9%E9%A1%BA%E5%88%A9%E9%80%9A%E8%BF%87/">2023年答辩顺利通过</a></p>
<p><a href="https://berserker287.github.io/2022/05/25/%E9%A1%B9%E7%9B%AE%E4%BA%A4%E6%98%93%E8%AE%B0%E5%BD%95/">2022年答辩通过率100%</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/%E6%AF%95%E4%B8%9A%E7%AD%94%E8%BE%A9%E5%AF%BC%E5%B8%88%E6%8F%90%E9%97%AE%E7%9A%84%E9%AB%98%E9%A2%91%E9%97%AE%E9%A2%98/">毕业答辩导师提问的高频问题</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/50%E4%B8%AA%E9%AB%98%E9%A2%91%E7%AD%94%E8%BE%A9%E9%97%AE%E9%A2%98-%E6%8A%80%E6%9C%AF%E7%AF%87/">50个高频答辩问题-技术篇</a></p>
<p><a href="https://www.zhihu.com/question/31020988">计算机毕设答辩时都会问到哪些问题？</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/145911029">计算机专业毕业答辩小tips</a></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的幼儿园管理系统</title>
    <url>/2024/03/29/Java%E5%B9%BC%E5%84%BF%E5%9B%AD%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的幼儿园管理系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>管理员: 系统公告、教师管理、班级管理、学生信息、请假信息、缴费内容、缴费记录、课程管理、消息管理、修改密码</p>
</blockquote>
<blockquote>
<p>教师: 个人信息、请假申请、班级管理、学生信息、学生请假审批、缴费记录、我的课程、修改密码</p>
</blockquote>
<blockquote>
<p>学生: 个人信息、请假申请、我的缴费、费用缴纳</p>
</blockquote>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[教师]<br>TEA-1711427557731<br>1234qwer</p>
<p>[学生]<br>STU-1711451816701<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711715176079.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711718144504.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711715163902.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711718118740.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711715150704.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711715364599.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711715131716.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711715333646.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711715119233.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711715314153.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711715108310.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711715302641.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711715188944.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711715218741.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711718188198.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711715203107.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1711718175800.jpg"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#x61;&#x6e;&#x31;&#107;&#x65;&#50;&#x6b;&#101;&#64;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#99;&#111;&#109;">&#102;&#x61;&#x6e;&#x31;&#107;&#x65;&#50;&#x6b;&#101;&#64;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#99;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h4 id="其它资源"><a href="#其它资源" class="headerlink" title="其它资源"></a>其它资源</h4><p><a href="https://berserker287.github.io/2023/06/14/2023%E5%B9%B4%E7%AD%94%E8%BE%A9%E9%A1%BA%E5%88%A9%E9%80%9A%E8%BF%87/">2023年答辩顺利通过</a></p>
<p><a href="https://berserker287.github.io/2022/05/25/%E9%A1%B9%E7%9B%AE%E4%BA%A4%E6%98%93%E8%AE%B0%E5%BD%95/">2022年答辩通过率100%</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/%E6%AF%95%E4%B8%9A%E7%AD%94%E8%BE%A9%E5%AF%BC%E5%B8%88%E6%8F%90%E9%97%AE%E7%9A%84%E9%AB%98%E9%A2%91%E9%97%AE%E9%A2%98/">毕业答辩导师提问的高频问题</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/50%E4%B8%AA%E9%AB%98%E9%A2%91%E7%AD%94%E8%BE%A9%E9%97%AE%E9%A2%98-%E6%8A%80%E6%9C%AF%E7%AF%87/">50个高频答辩问题-技术篇</a></p>
<p><a href="https://www.zhihu.com/question/31020988">计算机毕设答辩时都会问到哪些问题？</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/145911029">计算机专业毕业答辩小tips</a></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的高校心理健康调查系统</title>
    <url>/2024/03/15/Java%E5%AD%A6%E7%94%9F%E5%BF%83%E7%90%86%E5%81%A5%E5%BA%B7%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot高校心理健康调查系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件) + SpreadJS</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>管理员: 文章管理、系统公告、试卷管理、贴子管理、答题记录、贴子回复、学生管理、教师管理、贴子模块</p>
</blockquote>
<blockquote>
<p>教师: 个人信息、学生信息、学生答题、试卷管理</p>
</blockquote>
<blockquote>
<p>学生: 个人信息、我的贴子、我的回复、答题记录、心灵文章、试卷答题</p>
</blockquote>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[学生]<br>fank<br>1234qwer</p>
<p>[导师]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712666140685.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712718216285.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712718196396.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712666121087.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712718179757.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712666108598.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712666210751.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712666047227.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712666199567.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712666032850.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712666189961.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712666016011.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712666174255.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712666003576.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712666156188.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712665989291.jpg"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#x61;&#110;&#x31;&#107;&#x65;&#x32;&#107;&#101;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#111;&#109;">&#102;&#x61;&#110;&#x31;&#107;&#x65;&#x32;&#107;&#101;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的物料质量检测系统</title>
    <url>/2024/04/13/Java%E7%89%A9%E6%96%99%E8%B4%A8%E9%87%8F%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的物料质量检测系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>管理员: 客户管理、检测项管理、检测模板、常见缺陷、物料管理、工单管理、员工管理、工作站管理、供应商信息、来料检测、过程检验、出货检验、系统管理、统计看板</p>
</blockquote>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934504638.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934405280.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934490065.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934394961.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934481870.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934377201.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934471611.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934359291.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934460695.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934345379.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934441477.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934334801.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934425388.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934323809.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934416369.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1712934314638.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#97;&#110;&#49;&#107;&#101;&#x32;&#x6b;&#101;&#x40;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;">&#x66;&#97;&#110;&#49;&#107;&#101;&#x32;&#x6b;&#101;&#x40;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h4 id="其它资源"><a href="#其它资源" class="headerlink" title="其它资源"></a>其它资源</h4><p><a href="https://berserker287.github.io/2023/06/14/2023%E5%B9%B4%E7%AD%94%E8%BE%A9%E9%A1%BA%E5%88%A9%E9%80%9A%E8%BF%87/">2023年答辩顺利通过</a></p>
<p><a href="https://berserker287.github.io/2022/05/25/%E9%A1%B9%E7%9B%AE%E4%BA%A4%E6%98%93%E8%AE%B0%E5%BD%95/">2022年答辩通过率100%</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/%E6%AF%95%E4%B8%9A%E7%AD%94%E8%BE%A9%E5%AF%BC%E5%B8%88%E6%8F%90%E9%97%AE%E7%9A%84%E9%AB%98%E9%A2%91%E9%97%AE%E9%A2%98/">毕业答辩导师提问的高频问题</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/50%E4%B8%AA%E9%AB%98%E9%A2%91%E7%AD%94%E8%BE%A9%E9%97%AE%E9%A2%98-%E6%8A%80%E6%9C%AF%E7%AF%87/">50个高频答辩问题-技术篇</a></p>
<p><a href="https://www.zhihu.com/question/31020988">计算机毕设答辩时都会问到哪些问题？</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/145911029">计算机专业毕业答辩小tips</a></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的停车场车位出租系统</title>
    <url>/2024/04/14/Java%E5%81%9C%E8%BD%A6%E5%9C%BA%E8%BD%A6%E4%BD%8D%E5%87%BA%E7%A7%9F%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot停车场车位出租系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件) + SpreadJS</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>此项目的研究内容主要是建立基于Web的停车场管理系统，该系统面向停车场管理员、停车场用户，不同的用户登录系统获得的权限不同，使用的功能也不同，获取的信息也有所差异。</p>
</blockquote>
<p>停车场管理员可以通过系统登录并管理停车场的日常运营，包括车辆进出管理、停车位管理、收费管理等。停车场工作人员主要负责车辆进出管理，监控停车场的车辆进出情况，使用系统进行车辆识别、放行、收费等操作，且工作人员可以实时查看停车场的停车位情况，并在需要时进行停车位的调整和管理。停车场用户功能有通过系统注册账号并登录，进行停车预订、支付等操；可以通过系统查询停车场的空闲停车位信息，并进行预订操作，选择停车场和停车位，预定停车时间；系统根据用户停车时间和停车场收费标准计算停车费用，用户可以通过系统选择支付方式进行支付。<br>具体如下：</p>
<blockquote>
<p>系统公告、用户消息、订单管理、车位预约、车位管理、车位状态、用户管理、车辆管理、数据统计、月份统计、车位实时状态、我的信息、个人信息、我的车辆、车位预约、我的订单、我的消息、缴费成功</p>
</blockquote>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713028991726.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713029198442.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713028983586.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713029187339.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713028963155.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713029165546.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713028934008.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713029141024.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713028919536.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713029130546.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713028907072.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713029122077.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713028896699.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713029101970.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713029224651.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713029059420.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713029215949.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1713029044370.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#97;&#x6e;&#49;&#x6b;&#101;&#50;&#x6b;&#101;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#109;">&#102;&#97;&#x6e;&#49;&#x6b;&#101;&#50;&#x6b;&#101;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2024/04/25/%E6%97%A5%E5%B8%B80401/</url>
    <content><![CDATA[<blockquote>
<p>多灾多难</p>
</blockquote>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/5b4569c924201841c7a67c3eb78bfa7.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/5a30365c182f3b711688cadb50caeca.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1e4290901df715ec4ffbdcd2f0a0eae.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1cc87e0f9c4001b5fa091b7d073f896.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/ff0976896f9129f7aaa7c962fd321a1.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1054957f17c7680beee6c7909d289e7.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/12364a62a23a79af23bc8416e443dca.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/2238a66f7ebd490b8991b2486b8e36d.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/79f179189c1f7e9858a975142a06e65.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/35a9ade0be7e66d4c8c93ab71c89b06.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/026d70ade9ae55880c326c440da7f41.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/9a3154fab14b3c741b2ab2fd4799b24.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2024/05/01/%E6%97%A5%E5%B8%B80501/</url>
    <content><![CDATA[<blockquote>
<p>轨迹划过廊坊，跨入她的故乡，于是到临潍坊。想要摆脱人生路上的迷茫，想要努力寻找清晰的方向，无终悔恨一场，追究到底不过是妄想，不想如此荒唐，但我愿做她的牛郎</p>
</blockquote>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/d9f41eda2c5700f6c865f0d39952c1b.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/c15fc27b4b4f6561c8573d3d2816db4.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/afc0334b61a09cab2f6f94b66c7a2cb.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/addd19407f89e11279eec3d06656c48.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/ac4e44f524c05f35b9937f92ae94961.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/a156d026b7b11b77b4e30467e79e790.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/545421db1975c35a7373a5c20c50996.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/186175c9d9dc8ef5be097143dc96d83.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/83347b8598cb21000b3f8bbb29970bb.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/73526fe6b3e73d84f221ed1f3d37522.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/6374f51b901b2d365e6bbfc487e328a.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/907b34d4268d923a81cee3db9732f3f.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/0532dd9dd5d04b1804c94774a31d555.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/71ad94eb887a8a0a040595a6dcea568.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/45e4fc25f7a32c6658863b90da8d8d8.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/08d1a96d1c2876cbd5d171f1a0e7877.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/5afca81bd0a5b1e7686ed5dc0f90258.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/05e0775503d666b0dc3db315d16aa97.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2024/05/08/%E6%97%A5%E5%B8%B80508/</url>
    <content><![CDATA[<blockquote>
<p>书写着陈词滥调 为路途担忧苦恼</p>
</blockquote>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/ff8f11339a43c12e389b520487bace6.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/fbbb82a0be6e81b1d2abff4ba6b4f11.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/e14e5ddb8af5229c359a138d52390e5.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/ceaeb39328ceb4cb5e2adbfdcc7cfeb.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/c174af59572c0eeb2907937d739e2e8.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/0919113353bd746f90de790281f70e7.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/5355480caf47ad483fc560385315667.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/3419abd748248e5fb6ffde1ed646945.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/0912e92789fc9567443bef8464392b2.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/832b013378cbaaee61bd2b2654b8fe1.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/8d6a98dc6e7fe4c6dd324712646b263.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/7a555f8224de4c331c9d3613c9dffba.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/4e17da619a10548c846f68e72c922ec.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的小说创作阅读系统</title>
    <url>/2024/05/26/Java%E5%B0%8F%E8%AF%B4%E5%88%9B%E4%BD%9C%E9%98%85%E8%AF%BB%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot小说创作阅读系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件) + SpreadJS</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>管理员: 创作中心、我的书架、系统公告、作家管理、书籍管理、章节管理、图书点赞、书籍评论、用户关注、会员订单、会员价格、主题模板、用户管理、数据统计、文章统计、阅读排行、热门创作者</p>
</blockquote>
<blockquote>
<p>用户: 我的信息、会员购买、我的关注、我的评价、书籍点赞、作品书库、支付成功</p>
</blockquote>
<blockquote>
<p>创作者: 我的信息、我的书籍、章节管理</p>
</blockquote>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<p>[创作者]<br>sunxc<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713254017.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713438672.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713228264.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713418100.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713209726.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713370545.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713191236.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713361539.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713177495.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713348898.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713154162.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713335091.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716712989080.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713322062.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713524981.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713308555.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713511012.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713290464.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713481538.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713280003.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713471599.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1716713271319.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#110;&#49;&#x6b;&#101;&#x32;&#107;&#101;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;">&#x66;&#x61;&#110;&#49;&#x6b;&#101;&#x32;&#107;&#101;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>2024年答辩顺利通过</title>
    <url>/2024/06/06/2024%E5%B9%B4%E7%AD%94%E8%BE%A9%E9%A1%BA%E5%88%A9%E9%80%9A%E8%BF%87/</url>
    <content><![CDATA[<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/14%20-%20%E3%83%9D%EF%BD%9E%E3%83%B3%EF%BC%88%E5%87%BA%E6%B0%B4%E3%81%BD%E3%81%99%E3%81%8B%EF%BC%89%20-%20%E4%BA%BA%E9%96%93%E3%81%AF%E6%AF%92%E3%81%A0%5Bpid=91189152%5D.jpg"></p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote>
<p><a href="https://www.zhihu.com/question/31020988">计算机毕设答辩时都会问到哪些问题？</a></p>
</blockquote>
<blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/145911029">计算机专业毕业答辩小tips</a></p>
</blockquote>
<h2 id="现场提问"><a href="#现场提问" class="headerlink" title="现场提问"></a>现场提问</h2><p>首先一定是问你毕业设计的课题或者系统相关的问题，所以只要毕设是你自己做的，一般不会有问题的。一定要做到对课题或者系统做到熟悉，了如指掌，当老师让你展示某个部分的内容时要能及时准确的展示，并作出相关的讲解，给大家分享一些可能会问的问题，大家可以结合自己的项目试着回答一下</p>
<p><code>一定要注意不会不要瞎回答，诚实点，偶尔一个问题不会不影响什么的</code></p>
<ol>
<li>你这个系统所用到的新技术，它的优缺点，特点是什么？</li>
<li>你的论文价值是什么？</li>
<li>你数据库整体的设计是怎么样的？</li>
<li>某个表，某个字段作用是什么？</li>
<li>你系统核心功能怎么实现？</li>
<li>你的文献综述是如何形成的？</li>
<li>你整个系统的优缺点是什么?</li>
<li>功能还有什么地方需要完善?</li>
<li>你系统的整体设计是怎么样？</li>
<li>你系统用了什么技术,这些技术应用的好处是什么？</li>
<li>你的毕业论文进行的研究方法是什么？</li>
<li>你为什么要选这个题目，你对这个题目怎么理解的？</li>
<li>数据库的一些基础知识，三大范式是什么？</li>
<li>时序图，ER图你是怎么画的，有什么要注意的？</li>
</ol>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/42484573cae0fae70cb2731311810f5.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/8c894dd8c13775d8db8d007dc71a9c7.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/4849761ba7eb28b33a38992969e2f5c.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/7f251a2f653689c647599fd095ebe0b.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/582810d44ab838903013b863b44562a.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/7f3f3493749ba097233511975d6d79d.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/8685f5178b187aceeffdfeb5fbf7ce3.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/7c93456dc90b944478749731ba21648.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/3234c9eb1a6335330d4434a835c9bac.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/2d7543e5bed2660f5e3f17634840310.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/52d7688cca0793bcd3fc8e9fd23d7fe.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/2d9d1998b68a53d53ad73ecfc9f19cc.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/42b706563444101adcefab376c7f026.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/2b8f4055770e1aa74477b6d8ef85a63.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/36e420034c52ff11980a3276d2a77f7.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1a416938ab1f4dbd290cd6571391660.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/14e062cdf8a0a6c2d55252bf38d8c3f.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1a12cb02269197fc5d8fa60b33dc7e3.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/10a93347417e7684902ef7d77c6445f.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/d60db5f61f4afc1754f644214aa4407.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/9eaa19c32aca4e4658a851b5b5e3e63.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/b77f04780589b3b0f88107021233373.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/8d37eea526e1c0c211f2a2545887693.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/b5a4aec065f9e870678780b2ac1eb7c.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/01565645233a3cb180dbe281ff32260.jpg"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/0617c26b073597cde1792bf65321768.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/6886624dedbdd6c22d8a49560ffd4c2.jpg"></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>答辩通过</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2024/06/13/%E6%97%A5%E5%B8%B8240613/</url>
    <content><![CDATA[<blockquote>
<p>把属于我们的一切一定一并发号施令</p>
</blockquote>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/af9f5d1fe0e9e03bd7e8dd6ed5f9b5a.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/10163bda880505b44fabc4d32e6c84c.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/4318b050d04210a77683904d8a87801.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1210c6073b5ee53b3c99a7e475637bf.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/865c5725be19e5fae036e44a5b298eb.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/038dc914618f8bb773e956536562d9f.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/32ba1d453d683b0b91359716458ba49.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/015bede9aed7d41a0f1bb24a80886a6.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/3ea7cd7764ba3ac601b0e56aab50813.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/01b9518a922bc35c1d9cb6e00c67759.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/b5d23317095ab470c8b86ed92c1d33b.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的仓储管理系统</title>
    <url>/2024/07/07/Java%E4%BB%93%E5%82%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的仓储管理系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件) + DataV(大屏)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>库房管理，库房申请，采购管理，采购申请，物品审批，入库管理，库房物品，出库管理，出入库明细，用户管理，采购组合，公告信息，个人信息，报表统计，物资类别，出入库物品明细，数据大屏，库房盘库，审批管理，公告管理，供应商管理，管理员设置，计量单位，人脸识别登录</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[采购员]<br>caigou<br>1234qwer</p>
<p>[用户]<br>lisi<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720362134765.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361808758.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720362090923.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361786585.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720362079784.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361742660.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361964051.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361728040.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361927539.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361716264.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361904967.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361703707.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361890943.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361688801.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361854151.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361674818.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361841423.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361663466.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361826094.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1720361617192.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#110;&#x31;&#107;&#x65;&#x32;&#x6b;&#101;&#64;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;">&#x66;&#x61;&#110;&#x31;&#107;&#x65;&#x32;&#x6b;&#101;&#64;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的智能云医疗系统</title>
    <url>/2024/08/04/Java%E6%99%BA%E8%83%BD%E4%BA%91%E5%8C%BB%E7%96%97%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的智能云医疗系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件) + DataV(大屏)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<p>系统公告、医生管理、药品信息、问题求助、医院管理、库存统计、配送物流、医疗资讯、电子处方、科室管理、订单管理、订单评价、药店库存、医院采购、挂号记录、评论管理、医生排班、员工管理、用户管理、数据统计、医院统计、医院地图、销售统计、医生挂号统计、药品销售统计、个人信息、班次记录、挂号诊断、挂号开单、用户问题、业务大厅、我的信息、问题求助、医疗资讯、我的挂号、我的评论、我的订单、订单评价、供应商管理、库存预警、采购物流</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[医院管理员]<br>HPL-171<br>1234qwer</p>
<p>[医生]<br>DT-1718623180840<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722768645400.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771446127.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722768629465.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771410887.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722768609713.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771375833.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722768594332.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771357456.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722768539173.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771314077.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722768393232.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771289913.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722768372697.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771266006.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722768341085.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771250387.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722768305387.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771150827.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722768181670.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771124663.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722768112357.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771095965.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771664904.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722770888428.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771608112.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722770872679.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771595929.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722770851738.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771556391.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722770835866.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771533528.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722770819063.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771512468.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722770787834.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771491291.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722770763218.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771479824.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722768676563.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1722771461228.png"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#x61;&#110;&#49;&#x6b;&#101;&#x32;&#x6b;&#x65;&#64;&#103;&#x6d;&#97;&#x69;&#108;&#46;&#99;&#111;&#109;">&#102;&#x61;&#110;&#49;&#x6b;&#101;&#x32;&#x6b;&#x65;&#64;&#103;&#x6d;&#97;&#x69;&#108;&#46;&#99;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2024/08/04/%E6%97%A5%E5%B8%B80804/</url>
    <content><![CDATA[<blockquote>
<p>我想过改变、因为生命如同纸扎、我没有畏罪，只是我愧对我制定过的那个计划。我想过改变、在我渐渐遗失掉你的尖叫仿佛灵魂提示我该大声地尖叫</p>
</blockquote>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/02a79de2515594abd3e74eba87558a2.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/01c8c7e3493daacad5038a08c840c3c.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/e410518f4ec33cc11d8041564669a39.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/de7b28c84ea2afb83d5378c81c6f516.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/ba6f58b67e47648993a56956d6c6e60.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/b781cc0240ddbb608120b66b3c96794.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/af9e43358425dc9333cf3ca0feca14d.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/a844b3ac838f12985f16c0a7f43ae73.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/a24d69992dcff01a51a7ddd914111da.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/5530380498c7a9ab9d3283d84e0215b.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/3499f4ee475715f0911ba46d37cf6a0.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/946c9543f12449adc382f48e4fc05e0.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/81c76340f6f8cfc5b40f164579af0d8.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/72beac1600d32cc25cd3945faaa55ec.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/071b10b5fbe823ddb357b258fa5ffaf.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/61a5251f9094604fafc4b8599feb4aa.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/32c3910ec6845a1f6613e363d4c1f82.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/24f16c7a4bc93c67866a63d5d66a6eb.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/6c142420495dc75616defc1f4f92d91.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/4e2611c986bfd6bb355d842b9275b0b.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/3f76f036dcf5b2a60f96fda567169d4.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue前端代理</title>
    <url>/2024/08/30/Vue%E5%89%8D%E7%AB%AF%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<h2 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">proxyTable: &#123;</span><br><span class="line">  <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">    <span class="attr">target</span>: api_host,  <span class="comment">// 目标服务器地址</span></span><br><span class="line">    <span class="attr">changeOrigin</span>: <span class="literal">true</span>,  <span class="comment">// 允许跨域</span></span><br><span class="line">    <span class="attr">pathRewrite</span>: &#123; <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span> &#125;,  <span class="comment">// 重写路径</span></span><br><span class="line">    <span class="attr">secure</span>: <span class="literal">false</span>,  <span class="comment">// 如果是https接口，需要配置这个参数</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h2 id="axios统一配置"><a href="#axios统一配置" class="headerlink" title="axios统一配置"></a>axios统一配置</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 统一配置</span></span><br><span class="line"><span class="keyword">let</span> FEBS_REQUEST = axios.create(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">  <span class="attr">responseType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">  validateStatus (status) &#123;</span><br><span class="line">    <span class="comment">// 200 外的状态码都认定为失败</span></span><br><span class="line">    <span class="keyword">return</span> status === <span class="number">200</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的企业订货系统</title>
    <url>/2024/09/01/Java%E4%BC%81%E4%B8%9A%E8%AE%A2%E8%B4%A7%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的企业订货系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<h3 id="管理员："><a href="#管理员：" class="headerlink" title="管理员："></a>管理员：</h3><p>收货地址、预警配置、公告管理、商品管理、商品折扣、商品类型、配送物流、订单管理、库房出库、库房入库、库存预警、库房管理、库房记录、用户管理、数据统计、订单年统计、订单月统计</p>
<h3 id="用户（企业）："><a href="#用户（企业）：" class="headerlink" title="用户（企业）："></a>用户（企业）：</h3><p>个人信息、收货地址、订单物流、订单管理、商品选购、邮件通知</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724163842940.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724164056131.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724163823376.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724164024329.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724163813056.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724164012814.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724163770938.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724163997617.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724164442822.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724163964368.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724164427269.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724163941639.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724164199384.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724163915206.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724164177340.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724163904112.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724164120157.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724163889722.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724164105989.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724163873611.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724164095248.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724163854188.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1724164074310.png"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#x6e;&#x31;&#107;&#101;&#50;&#107;&#101;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#x6d;">&#x66;&#x61;&#x6e;&#x31;&#107;&#101;&#50;&#107;&#101;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的家具销售系统</title>
    <url>/2024/09/01/Java%E5%AE%B6%E5%85%B7%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的家具销售系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<h3 id="管理员："><a href="#管理员：" class="headerlink" title="管理员："></a>管理员：</h3><p>用户收货地址，公告管理，家具管理，家具类型，订单评价，积分兑换，物品积分，会员积分，商家管理，商家会员，订单管理，员工管理，用户管理，帖子审核，数据统计</p>
<h3 id="商家："><a href="#商家：" class="headerlink" title="商家："></a>商家：</h3><p>数据统计，家具管理，订单评价，订单管理，员工管理，商家会员，商家信息管理</p>
<h3 id="用户："><a href="#用户：" class="headerlink" title="用户："></a>用户：</h3><p>用户注册，个人信息修改，收货地址，订单下单，订单评价，商品收藏，帖子发布与评论，论坛发帖，支付为支付宝沙盒支付</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[商家管理员]<br>shangjia<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153101917.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153580458.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725154173768.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153562930.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153939901.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153548220.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153905308.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153504617.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153879407.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153468723.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153810745.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153450030.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153782847.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153434742.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153747060.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153415062.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153672982.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153404097.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153652662.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153362753.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153632512.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153310432.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725153603322.png"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#110;&#49;&#107;&#101;&#50;&#107;&#x65;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#111;&#x6d;">&#x66;&#x61;&#110;&#49;&#107;&#101;&#50;&#107;&#x65;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#111;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的博客论坛小程序</title>
    <url>/2024/10/09/Java%E5%8D%9A%E5%AE%A2%E8%AE%BA%E5%9D%9B%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的博客论坛小程序.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件) + DataV(大屏)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>管理员：</p>
</blockquote>
<p>公告管理、分类管理。文章管理，用户管理，评论管理，访问记录，消息管理，数据统计，用户对话聊天，用户关注，贴子收藏</p>
<blockquote>
<p>用户：</p>
</blockquote>
<p>用户注册登录、修改个人信息、搜索贴子，搜索用户，用户详情，贴子回复，系统消息，用户关注，贴子收藏，发布贴子，贴子管理</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin 1234qwer</p>
<p>[用户]<br>小程序登录</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478064534.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477962040.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478049824.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477952047.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478032184.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477942373.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478021718.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477931236.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478011574.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477915697.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477902429.png"></td>
<td></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478390351.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478195416.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478378099.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478258534.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478339094.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478248471.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478325471.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478235224.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478307241.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478222427.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478296456.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478207133.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478276850.png"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#110;&#49;&#x6b;&#x65;&#50;&#107;&#101;&#x40;&#103;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;">&#x66;&#x61;&#110;&#49;&#x6b;&#x65;&#50;&#107;&#101;&#x40;&#103;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的在线音乐播放小程序</title>
    <url>/2024/10/09/Java%E5%9C%A8%E7%BA%BF%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<p>基于SpringBoot的在线音乐播放小程序.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件) + DataV(大屏)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>管理员：</p>
</blockquote>
<p>专辑管理，系统通知，用户收藏，歌曲评价，歌词管理，消息通知，歌曲管理，播放历史，歌手管理，歌手订阅，歌曲类型，用户管理，数据统计</p>
<blockquote>
<p>用户：</p>
</blockquote>
<p>用户注册，用户登录，个人信息修改，音乐搜索，专辑搜索，歌手搜索，查看公告，我的收藏，我的关注，系统消息，添加音乐收藏，音乐在线播放，歌手详情，单曲详情，专辑详情</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin 1234qwer</p>
<p>[用户]<br>小程序登录</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478773331.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478753429.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478830650.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478888214.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478814797.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478877290.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478805540.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478868023.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478796415.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478855554.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478785129.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478845088.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728478908071.png"></td>
<td></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479413573.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479290764.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479400491.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479282209.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479383127.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479271798.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479368148.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479207970.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479353342.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479033334.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479343903.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479014818.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479300459.png"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#110;&#49;&#x6b;&#101;&#50;&#x6b;&#x65;&#64;&#103;&#109;&#97;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;">&#x66;&#x61;&#110;&#49;&#x6b;&#101;&#50;&#x6b;&#x65;&#64;&#103;&#109;&#97;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的智能家居系统</title>
    <url>/2024/10/09/Java%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的智能家居系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件) + DataV(大屏)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>管理员：</p>
</blockquote>
<p>公告管理、用户管理、设备管理、设备类型、事件记录、操作记录、设备在线统计、设备在线记录，数据统计</p>
<blockquote>
<p>用户：</p>
</blockquote>
<p>用户信息管理，设备管理，设备在线统计，事件记录，操作记录，设备在线记录</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin 1234qwer</p>
<p>[用户]<br>fank 1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479541679.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479646902.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479748539.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479634810.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479726722.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479624817.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479714724.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479616044.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479704571.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479605407.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479693293.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479596112.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479679524.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479583620.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479669347.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479572133.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479656470.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728479560350.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#97;&#110;&#x31;&#107;&#x65;&#x32;&#107;&#x65;&#64;&#103;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#109;">&#x66;&#97;&#110;&#x31;&#107;&#x65;&#x32;&#107;&#x65;&#64;&#103;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的毕业生就业信息系统</title>
    <url>/2024/10/09/Java%E6%AF%95%E4%B8%9A%E7%94%9F%E5%B0%B1%E4%B8%9A%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的毕业生就业信息系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件) + DataV(大屏)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>管理员：<br>公告管理、公司管理、学生管理、公司职位、学生简历、公司信息审核、招聘会管理、招聘会预约、岗位申请、消息管理、公司学生沟通、数据统计</p>
</blockquote>
<blockquote>
<p>公司：<br>公司注册、公司信息修改、公司职位、招聘会管理、招聘会预约、岗位审核、消息管理、公司学生沟通、数据统计</p>
</blockquote>
<blockquote>
<p>学生：<br>学生注册、学生信息修改，个人简历，招聘会查看预约、预约记录、岗位申请、消息管理、公司学生沟通</p>
</blockquote>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin 1234qwer</p>
<p>[公司]<br>enterprise 1234qwer</p>
<p>[学生]<br> fank 1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477337683.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477497506.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477715466.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477482568.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477702846.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477467370.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477630649.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477452144.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477603216.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477439422.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477585933.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477426360.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477571833.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477412801.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477556024.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477399243.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477542193.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477387634.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477511086.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1728477373245.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#97;&#110;&#49;&#107;&#x65;&#x32;&#107;&#x65;&#x40;&#103;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;">&#x66;&#97;&#110;&#49;&#107;&#x65;&#x32;&#107;&#x65;&#x40;&#103;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的高考志愿填报系统</title>
    <url>/2024/10/09/Java%E9%AB%98%E8%80%83%E5%BF%97%E6%84%BF%E5%A1%AB%E6%8A%A5%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的高考志愿填报系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios<br>报表：Spread.js</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件) + DataV(大屏)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>管理员：</p>
</blockquote>
<p>公告管理、学校管理、专业管理、学校专业绑定、学校评价、学校专业分数线、志愿信息、志愿申请、消息管理、学生管理、数据统计</p>
<blockquote>
<p>学校：</p>
</blockquote>
<p>校信息修改、学校专业绑定、学校评价管理、专业分数线变更、志愿审核、数据统计、帖子信息</p>
<blockquote>
<p>学生：</p>
</blockquote>
<p>用户注册、修改个人信息、个人志愿管理、志愿申请、学校评价、志愿推荐</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin 1234qwer</p>
<p>[学校]<br>school 1234qwer</p>
<p>[学生]<br>fank 1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879393958.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879527630.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725841407741.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879508089.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879633341.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879492094.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879617877.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879471554.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879591691.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879456818.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879577859.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879446178.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879568379.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879434903.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879555177.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879420137.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879545610.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1725879407528.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#97;&#x6e;&#x31;&#107;&#101;&#50;&#x6b;&#101;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;">&#x66;&#97;&#x6e;&#x31;&#107;&#101;&#50;&#x6b;&#101;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>PDF或其他文档类文件锚点控制方案</title>
    <url>/2024/11/28/PDF%E6%88%96%E5%85%B6%E4%BB%96%E6%96%87%E6%A1%A3%E7%B1%BB%E6%96%87%E4%BB%B6%E9%94%9A%E7%82%B9%E6%8E%A7%E5%88%B6%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<blockquote>
<p>当PDF或其他文档内容过多，需要进行目录功能规划，在查看文档时标注step位置或是点击step锚点自动跳转具体章节</p>
</blockquote>
<h3 id="标注文档REF引用"><a href="#标注文档REF引用" class="headerlink" title="标注文档REF引用"></a>标注文档REF引用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue-pdf-view&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;myRef&quot;</span> @<span class="attr">scroll</span>=<span class="string">&quot;scrollGet($event)&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a-spin</span> <span class="attr">:spinning</span>=<span class="string">&quot;spinning&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;page-view&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">vue-pdf-embed</span> <span class="attr">v-if</span>=<span class="string">&quot;pdfState.previewUrl != null&quot;</span> <span class="attr">:source</span>=<span class="string">&quot;pdfState.previewUrl&quot;</span> <span class="attr">textLayer</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">a-spin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="scrollGet设置step具体位置"><a href="#scrollGet设置step具体位置" class="headerlink" title="scrollGet设置step具体位置"></a>scrollGet设置step具体位置</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">scrollGet</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> scrollHeight = myRef.value.scrollHeight</span><br><span class="line">  <span class="keyword">let</span> clientHeight = myRef.value.clientHeight</span><br><span class="line">  <span class="keyword">let</span> scrollTop = myRef.value.scrollTop</span><br><span class="line">  <span class="keyword">let</span> scroll = (scrollTop / scrollHeight * <span class="number">100</span>).toFixed(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (scroll &gt;= <span class="number">17.5</span> &amp;&amp; scroll &lt; <span class="number">20.68</span>) &#123;</span><br><span class="line">    current.value = <span class="number">0</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scroll &gt;= <span class="number">20.68</span> &amp;&amp; scroll &lt; <span class="number">23.95</span>) &#123;</span><br><span class="line">    current.value = <span class="number">1</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scroll &gt;= <span class="number">23.95</span> &amp;&amp; scroll &lt; <span class="number">35</span>) &#123;</span><br><span class="line">    current.value = <span class="number">2</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scroll &gt;= <span class="number">35</span> &amp;&amp; scroll &lt; <span class="number">41.07</span>) &#123;</span><br><span class="line">    current.value = <span class="number">3</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scroll &gt;= <span class="number">41.07</span> &amp;&amp; scroll &lt; <span class="number">48.77</span>) &#123;</span><br><span class="line">    current.value = <span class="number">4</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scroll &gt;= <span class="number">48.77</span> &amp;&amp; scroll &lt; <span class="number">54.64</span>) &#123;</span><br><span class="line">    current.value = <span class="number">5</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scroll &gt;= <span class="number">54.64</span> &amp;&amp; scroll &lt; <span class="number">55.41</span>) &#123;</span><br><span class="line">    current.value = <span class="number">6</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scroll &gt;= <span class="number">55.41</span> &amp;&amp; scroll &lt; <span class="number">55.99</span>) &#123;</span><br><span class="line">    current.value = <span class="number">7</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scroll &gt;= <span class="number">55.99</span> &amp;&amp; scroll &lt; <span class="number">56.95</span>) &#123;</span><br><span class="line">    current.value = <span class="number">8</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scroll &gt;= <span class="number">56.95</span> &amp;&amp; scroll &lt; <span class="number">60.23</span>) &#123;</span><br><span class="line">    current.value = <span class="number">9</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scroll &gt;= <span class="number">60.23</span> &amp;&amp; scroll &lt; <span class="number">61.87</span>) &#123;</span><br><span class="line">    current.value = <span class="number">10</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scroll &gt;= <span class="number">61.87</span> &amp;&amp; scroll &lt; <span class="number">72.51</span>) &#123;</span><br><span class="line">    current.value = <span class="number">11</span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scroll &gt;= <span class="number">72.51</span>) &#123;</span><br><span class="line">    current.value = <span class="number">12</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="step变更设置文档具体位置"><a href="#step变更设置文档具体位置" class="headerlink" title="step变更设置文档具体位置"></a>step变更设置文档具体位置</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * step变更设置合同位置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="variable">stepNo</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pdfAnchor</span>(<span class="params">stepNo</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> scrollHeight = myRef.value.scrollHeight</span><br><span class="line"></span><br><span class="line">  <span class="keyword">switch</span> (stepNo) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">      myRef.value.scrollTop = scrollHeight * (<span class="number">17.5</span> / <span class="number">100</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      myRef.value.scrollTop = scrollHeight * (<span class="number">20.68</span> / <span class="number">100</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      myRef.value.scrollTop = scrollHeight * (<span class="number">23.95</span> / <span class="number">100</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">      myRef.value.scrollTop = scrollHeight * (<span class="number">35</span> / <span class="number">100</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">      myRef.value.scrollTop = scrollHeight * (<span class="number">41.07</span> / <span class="number">100</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">      myRef.value.scrollTop = scrollHeight * (<span class="number">48.77</span> / <span class="number">100</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">      myRef.value.scrollTop = scrollHeight * (<span class="number">54.64</span> / <span class="number">100</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">      myRef.value.scrollTop = scrollHeight * (<span class="number">55.41</span> / <span class="number">100</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">      myRef.value.scrollTop = scrollHeight * (<span class="number">55.99</span> / <span class="number">100</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">      myRef.value.scrollTop = scrollHeight * (<span class="number">56.95</span> / <span class="number">100</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">      myRef.value.scrollTop = scrollHeight * (<span class="number">60.23</span> / <span class="number">100</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">      myRef.value.scrollTop = scrollHeight * (<span class="number">61.87</span> / <span class="number">100</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">      myRef.value.scrollTop = scrollHeight * (<span class="number">72.51</span> / <span class="number">100</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot二手母婴用品交易平台</title>
    <url>/2024/12/07/Java%E4%BA%8C%E6%89%8B%E6%AF%8D%E5%A9%B4%E7%94%A8%E5%93%81%E4%BA%A4%E6%98%93%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<p>基于SpringBoot二手母婴用品交易平台.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>用户注册、密码修改、销售情况统计、交易市场、商品评论、公告管理、用户收藏、商品管理、评价管理、订单管理、商品类型、消息管理、用户管理、订单物流更新、商品购买、订单评价</p>
</blockquote>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户1]<br>fank<br>1234qwer</p>
<p>[用户2]<br>test2<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624477022.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624653616.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624448971.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624626950.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624835832.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624618357.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624824052.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624603807.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624782102.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624594295.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624771890.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624547178.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624728449.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624529373.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624689150.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624506470.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624679425.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624497638.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732624672413.png"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#97;&#110;&#49;&#x6b;&#101;&#x32;&#107;&#x65;&#64;&#x67;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#111;&#109;">&#102;&#97;&#110;&#49;&#x6b;&#101;&#x32;&#107;&#x65;&#64;&#x67;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的农产品销售系统</title>
    <url>/2024/12/17/Java%E5%86%9C%E4%BA%A7%E5%93%81%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的农产品销售系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<h3 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h3><p>公告管理，产品管理，库存统计，物流信息，订单详情，订单评价，订单信息，缴费记录，销售店管理，产店库存，员工管理，用户管理，数据统计，销售排行，员工统计，管理员管理，供应采购，供应商管理，产品答疑，产品采购，库房预警，销售统计，产品答疑，采购物流</p>
<h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><p>我的信息，个人信息，我的订单，缴费记录，订单评价，产品购买，支付结果，支付宝沙盒支付，修改密码</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734395740336.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734396234216.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734395722465.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734396225513.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734433810791.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734396214632.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734433802190.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734396206466.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734433792323.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734396197426.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734433777545.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734396188442.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734433767672.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734396180576.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734433753406.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734396169841.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734433741800.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734395932079.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734396280736.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734395836533.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734396268525.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734395813055.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734396254785.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734395801760.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734396246018.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734395750343.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#97;&#110;&#x31;&#107;&#101;&#50;&#x6b;&#x65;&#x40;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#109;">&#x66;&#97;&#110;&#x31;&#107;&#101;&#50;&#x6b;&#x65;&#x40;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的在线电子书阅读平台</title>
    <url>/2024/12/07/Java%E5%9C%A8%E7%BA%BF%E7%94%B5%E5%AD%90%E4%B9%A6%E9%98%85%E8%AF%BB%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<p>基于SpringBoot在线电子书阅读平台.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件) + SpreadJS</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>管理员: 创作中心、我的书架、系统公告、作家管理、书籍管理、章节管理、图书点赞、书籍评论、用户关注、会员订单、会员价格、主题模板、用户管理、数据统计、文章统计、阅读排行、热门创作者</p>
</blockquote>
<blockquote>
<p>用户: 我的信息、会员购买、我的关注、我的评价、书籍点赞、作品书库、支付成功</p>
</blockquote>
<blockquote>
<p>创作者: 我的信息、我的书籍、章节管理</p>
</blockquote>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<p>[创作者]<br>sunxc<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107024013.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107308085.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107653495.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107287279.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107639764.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107257895.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107626035.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107241650.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107604210.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107168903.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107589213.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107125845.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107576392.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107086576.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107555852.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107072310.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107531675.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107058679.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107325629.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732107044463.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#x61;&#110;&#49;&#x6b;&#x65;&#50;&#x6b;&#x65;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;">&#102;&#x61;&#110;&#49;&#x6b;&#x65;&#50;&#x6b;&#x65;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的城市社区食堂管理系统</title>
    <url>/2024/12/07/Java%E5%9F%8E%E5%B8%82%E7%A4%BE%E5%8C%BA%E9%A3%9F%E5%A0%82%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的城市社区食堂管理系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<h3 id="管理员："><a href="#管理员：" class="headerlink" title="管理员："></a>管理员：</h3><p>用户收货地址，公告管理，餐品管理，餐品类型，订单评价，积分兑换，物品积分，会员积分，商家管理，商家会员，订单管理，员工管理，用户管理，帖子审核，数据统计</p>
<h3 id="商家："><a href="#商家：" class="headerlink" title="商家："></a>商家：</h3><p>数据统计，餐品管理，订单评价，订单管理，员工管理，商家会员，商家信息管理</p>
<h3 id="用户："><a href="#用户：" class="headerlink" title="用户："></a>用户：</h3><p>用户注册，个人信息修改，收货地址，订单下单，订单评价，商品收藏，帖子发布与评论，论坛发帖，支付为支付宝沙盒支付</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[商家管理员]<br>shangjia<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733313905399.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314587984.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314887262.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314563947.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314869376.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314542997.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314846565.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314510235.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314831127.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314226601.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314797431.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314146503.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314769951.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314127351.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314734505.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314076924.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314712174.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314021800.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314671518.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314007255.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314630784.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733313986256.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733314604374.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733313964550.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#x6e;&#x31;&#x6b;&#101;&#50;&#x6b;&#101;&#x40;&#x67;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;">&#x66;&#x61;&#x6e;&#x31;&#x6b;&#101;&#50;&#x6b;&#101;&#x40;&#x67;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于微信小程序的家庭电器购买平台</title>
    <url>/2024/12/07/Java%E5%AE%B6%E5%BA%AD%E7%94%B5%E5%99%A8%E8%B4%AD%E4%B9%B0%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<p>基于SpringBoot微信小程序的家庭电器购买平台</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>商铺管理员<br>商铺信息、我的商品、商铺订单、订单评价、消息回复、商铺审核、用户沟通</p>
</blockquote>
<blockquote>
<p>系统管理员<br>收货地址管理、商铺审核管理、公告信息、商品管理、用户评价、消息管理、订单管理、贴子管理、商铺管理、用户管理、商品类型</p>
</blockquote>
<blockquote>
<p>用户<br>商铺详情、查看公告、搜索商品、系统论坛、发帖回复、用户订单、加入购物车、收货地址管理、订单评价、联系客服</p>
</blockquote>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[商家]<br>test1<br>1234qwer</p>
<p>[用户]<br>小程序登录</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733549748575.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733549731145.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550223773.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550336212.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550211655.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550298972.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733549791031.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550291987.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733549760604.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550257701.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550234984.png"></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550585193.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550528985.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550572824.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550521611.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550563720.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550513448.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550546591.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550500291.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733550537839.png"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#97;&#x6e;&#x31;&#107;&#x65;&#x32;&#107;&#x65;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;">&#x66;&#97;&#x6e;&#x31;&#107;&#x65;&#x32;&#107;&#x65;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的智能电子设备采购系统</title>
    <url>/2024/12/07/Java%E5%B0%8F%E6%99%BA%E8%83%BD%E7%94%B5%E5%AD%90%E8%AE%BE%E5%A4%87%E9%87%87%E8%B4%AD%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的智能电子设备采购系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、 前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表) + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>管理员：<br>收货地址、预警配置、公告管理、商品管理、商品折扣、商品类型、配送物流、订单管理、库房出库、库房入库、库存预警、库房管理、库房记录、用户管理、数据统计、订单年统计、订单月统计</p>
</blockquote>
<blockquote>
<p>用户（企业）：<br>个人信息、收货地址、订单物流、订单管理、商品选购、邮件通知</p>
</blockquote>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员] admin 1234qwer</p>
<p>[用户] fank 1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112168232.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112353127.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112151518.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112342520.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112143292.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112330104.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112105797.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112304603.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112454318.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112277711.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112437646.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112264617.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112405993.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112250564.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112395506.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112224493.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112374782.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112214986.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112367271.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112189532.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112359210.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732112179138.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#97;&#110;&#x31;&#x6b;&#101;&#50;&#107;&#x65;&#64;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;">&#x66;&#97;&#110;&#x31;&#x6b;&#101;&#50;&#107;&#x65;&#64;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的料理技巧分享平台</title>
    <url>/2024/12/07/Java%E6%96%99%E7%90%86%E6%8A%80%E5%B7%A7%E5%88%86%E4%BA%AB%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<p>基于SpringBoot的料理技巧分享平台.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<h3 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h3><p>公告管理，用户管理，消息管理，公告管理，敏感词管理，模块管理，消息回复，生鲜百科，留言板，首页管理</p>
<h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><p>用户登录注册，发布贴子，发布留言，发布贴子，贴子回复，贴子收藏，用户关注，消息通知</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733566191972.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733566415786.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733566599071.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733566404248.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733566477471.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733566397169.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733566460479.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733566390351.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733566452561.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733566382377.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733566435433.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733566373826.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733566425249.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733566363370.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#x6e;&#49;&#107;&#101;&#50;&#107;&#101;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#x6f;&#109;">&#x66;&#x61;&#x6e;&#49;&#107;&#101;&#50;&#107;&#101;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#x6f;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的美食论坛系统</title>
    <url>/2024/12/07/Java%E7%BE%8E%E9%A3%9F%E8%AE%BA%E5%9D%9B%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的美食论坛系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<h3 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h3><p>公告管理，用户管理，消息管理，公告管理，敏感词管理，模块管理，消息回复，生鲜百科，留言板，首页管理</p>
<h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><p>用户登录注册，发布贴子，发布留言，发布贴子，贴子回复，贴子收藏，用户关注，消息通知</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733400844129.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733401021156.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733400820246.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733401013100.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733401124820.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733400942472.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733401114923.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733400926662.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733401102668.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733400917183.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733401062664.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733400887620.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733401051563.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733400878537.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733401040012.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733400866409.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733401030388.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733400856557.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#97;&#x6e;&#49;&#x6b;&#x65;&#x32;&#x6b;&#101;&#x40;&#103;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#x6d;">&#x66;&#97;&#x6e;&#49;&#x6b;&#x65;&#x32;&#x6b;&#101;&#x40;&#103;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的社区桶装水配送平台</title>
    <url>/2024/12/07/Java%E7%A4%BE%E5%8C%BA%E6%A1%B6%E8%A3%85%E6%B0%B4%E9%85%8D%E9%80%81%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<p>基于SpringBoot的社区桶装水配送平台.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<h3 id="管理员："><a href="#管理员：" class="headerlink" title="管理员："></a>管理员：</h3><p>用户收货地址，公告管理，商品管理，商品类型，订单评价，积分兑换，物品积分，会员积分，商家管理，商家会员，订单管理，员工管理，用户管理，帖子审核，数据统计</p>
<h3 id="商家："><a href="#商家：" class="headerlink" title="商家："></a>商家：</h3><p>数据统计，商品管理，订单评价，订单管理，员工管理，商家会员，商家信息管理</p>
<h3 id="用户："><a href="#用户：" class="headerlink" title="用户："></a>用户：</h3><p>用户注册，个人信息修改，收货地址，订单下单，订单评价，商品收藏，帖子发布与评论，论坛发帖，支付为支付宝沙盒支付</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[商家管理员]<br>shangjia<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104177000.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104503080.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104136104.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104476523.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732103994145.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104462570.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732105031705.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104438732.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732105015491.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104427988.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104985203.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104405408.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104772141.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104393562.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104596981.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104379415.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104583080.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104367882.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104563023.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104289710.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104549613.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104207895.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104531699.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1732104191144.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#97;&#x6e;&#x31;&#x6b;&#101;&#50;&#107;&#101;&#64;&#103;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;">&#x66;&#97;&#x6e;&#x31;&#x6b;&#101;&#50;&#107;&#101;&#64;&#103;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于微信小程序的计算机配件购买平台</title>
    <url>/2024/12/07/Java%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%85%8D%E4%BB%B6%E8%B4%AD%E4%B9%B0%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<p>基于SpringBoot微信小程序的计算机配件购买平台</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<blockquote>
<p>商铺管理员<br>商铺信息、我的商品、商铺订单、订单评价、消息回复、商铺审核、用户沟通</p>
</blockquote>
<blockquote>
<p>系统管理员<br>收货地址管理、商铺审核管理、公告信息、商品管理、用户评价、消息管理、订单管理、贴子管理、商铺管理、用户管理、商品类型</p>
</blockquote>
<blockquote>
<p>用户<br>商铺详情、查看公告、搜索商品、系统论坛、发帖回复、用户订单、加入购物车、收货地址管理、订单评价、联系客服</p>
</blockquote>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[商家]<br>test1<br>1234qwer</p>
<p>[用户]<br>小程序登录</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733486564347.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733486456478.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733486548843.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733486431158.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733486525733.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733486413597.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733486506984.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733486399413.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733486490130.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733486379063.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733486468710.png"></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733484796733.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733484676820.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733484780924.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733484667620.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733484764760.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733484579710.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733484746086.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733484568568.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733484701584.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733484539246.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733486308010.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733484310133.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733486290210.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733484291183.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733484262993.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1733485631990.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#97;&#x6e;&#x31;&#x6b;&#x65;&#x32;&#x6b;&#101;&#x40;&#x67;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;">&#102;&#97;&#x6e;&#x31;&#x6b;&#x65;&#x32;&#x6b;&#101;&#x40;&#x67;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>2025年答辩顺利通过</title>
    <url>/2025/06/18/2025%E5%B9%B4%E7%AD%94%E8%BE%A9%E9%A1%BA%E5%88%A9%E9%80%9A%E8%BF%87/</url>
    <content><![CDATA[<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/photo_2021-07-17_11-50-07.jpg"></p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote>
<p><a href="https://www.zhihu.com/question/31020988">计算机毕设答辩时都会问到哪些问题？</a></p>
</blockquote>
<blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/145911029">计算机专业毕业答辩小tips</a></p>
</blockquote>
<h2 id="现场提问"><a href="#现场提问" class="headerlink" title="现场提问"></a>现场提问</h2><p>首先一定是问你毕业设计的课题或者系统相关的问题，所以只要毕设是你自己做的，一般不会有问题的。一定要做到对课题或者系统做到熟悉，了如指掌，当老师让你展示某个部分的内容时要能及时准确的展示，并作出相关的讲解，给大家分享一些可能会问的问题，大家可以结合自己的项目试着回答一下</p>
<p><code>一定要注意不会不要瞎回答，诚实点，偶尔一个问题不会不影响什么的</code></p>
<ol>
<li>你这个系统所用到的新技术，它的优缺点，特点是什么？</li>
<li>你的论文价值是什么？</li>
<li>你数据库整体的设计是怎么样的？</li>
<li>某个表，某个字段作用是什么？</li>
<li>你系统核心功能怎么实现？</li>
<li>你的文献综述是如何形成的？</li>
<li>你整个系统的优缺点是什么?</li>
<li>功能还有什么地方需要完善?</li>
<li>你系统的整体设计是怎么样？</li>
<li>你系统用了什么技术,这些技术应用的好处是什么？</li>
<li>你的毕业论文进行的研究方法是什么？</li>
<li>你为什么要选这个题目，你对这个题目怎么理解的？</li>
<li>数据库的一些基础知识，三大范式是什么？</li>
<li>时序图，ER图你是怎么画的，有什么要注意的？</li>
</ol>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/835caaa3-050d-4fe8-955c-bb299dec6ad6.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/da969fb2-6682-4990-9eaa-c2931b1eb66c.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/391e57d0-ff08-453c-9e55-7f3ee13073c0.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/d1b85523-8598-4ca6-8123-d28d9f02f477.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/58a2cb5f-b5dc-456f-a328-9aebb072a459.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/c11427d6-a6b5-4cc2-816b-0b8e4ee0c01b.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/54ee0b2d-a5fb-41a0-bdef-ddc954ce0adb.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/c2063b83-ef84-4363-8e1a-c4b3a1efabc5.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/46e82119-2117-49f3-a73b-bc775b80d37f.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/c9c216f1-0dd6-4962-bc19-cbc8803ab150.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/40f4130d-2115-403d-83ec-7a4651885b00.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/c2c65aa1-d370-4fd9-b116-cf7498f2d339.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/31dea3ea-982b-4b57-b00a-adc78c2a92c2.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/b20f6de1-4ef7-44ee-90f2-8ab8d3dc32be.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/9c3d754d-2d1b-4b20-8cfe-d964e6cd97bb.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/b7b73050-d727-46e6-a7da-b1b4b2a2c2e6.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/feb3db6c-f6c0-4495-9121-382bc55472fd.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/b0e20eef-abe5-4855-9ad3-2403ce9d044b.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/fe457e0a-a81e-4cf2-a9b5-07ee2bd28818.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/a21a6f0c-33c4-4b65-94ce-6e70b622e6dc.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/ecd425c1-f423-4084-9d50-84818a108f4a.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/57330488-ea7f-4e96-be90-a603bf1fec2d.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/ec0c7ec9-65f4-410f-8470-52be81750584.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/716478fb-5535-4df3-b861-f52ea305eae8.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/ebafd610-465c-4884-b578-288f1d7d0d77.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/9181c4d3-758f-423c-8a1f-46f7cfe6dfb6.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/e51b5379-9168-4827-96bf-e71758f81265.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/2473c30f-aca0-41b6-bb9d-4b3119966a31.png"></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>答辩通过</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的图书商城系统</title>
    <url>/2024/12/07/Java%E5%9B%BE%E4%B9%A6%E5%95%86%E5%9F%8E%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的图书商城系统</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<h3 id="管理员："><a href="#管理员：" class="headerlink" title="管理员："></a>管理员：</h3><p>用户收货地址，公告管理，图书管理，图书类型，订单评价，积分兑换，物品积分，会员积分，商家管理，商家会员，订单管理，员工管理，用户管理，帖子审核，数据统计</p>
<h3 id="商家："><a href="#商家：" class="headerlink" title="商家："></a>商家：</h3><p>数据统计，图书管理，订单评价，订单管理，员工管理，商家会员，商家信息管理</p>
<h3 id="用户："><a href="#用户：" class="headerlink" title="用户："></a>用户：</h3><p>用户注册，个人信息修改，收货地址，订单下单，订单评价，图书收藏，帖子发布与评论，论坛发帖，支付为支付宝沙盒支付</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[商家管理员]<br>shangjia<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609137789.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609621006.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609812940.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609606547.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609800803.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609591264.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609786260.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609576709.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609761043.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609496851.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609748528.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609461707.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609726179.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609435243.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609707930.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609421175.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609697004.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609389056.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609684387.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609198992.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609672996.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609184518.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609632240.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734609164759.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#97;&#110;&#49;&#x6b;&#101;&#x32;&#107;&#101;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;">&#102;&#97;&#110;&#49;&#x6b;&#101;&#x32;&#107;&#101;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>Java常用工具类</title>
    <url>/2025/05/23/Java%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<h3 id="Collections类"><a href="#Collections类" class="headerlink" title="Collections类"></a>Collections类</h3><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 看看使用Collections工具是如何实现升序和降序的</span></span><br><span class="line"> List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"> list.add(<span class="number">2</span>);</span><br><span class="line"> list.add(<span class="number">1</span>);</span><br><span class="line"> list.add(<span class="number">3</span>);</span><br><span class="line"> Collections.sort(list);<span class="comment">//升序</span></span><br><span class="line"> System.out.println(list);</span><br><span class="line"> Collections.reverse(list);<span class="comment">//降序</span></span><br><span class="line"> System.out.println(list);</span><br></pre></td></tr></table></figure>
<h4 id="获取最大或最小值"><a href="#获取最大或最小值" class="headerlink" title="获取最大或最小值"></a>获取最大或最小值</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 有时候需要找出集合中的最大值或者最小值，这时可以使用Collections的max和min方法</span></span><br><span class="line">List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(<span class="number">2</span>);</span><br><span class="line">list.add(<span class="number">1</span>);</span><br><span class="line">list.add(<span class="number">3</span>);</span><br><span class="line">Integer max = Collections.max(list);<span class="comment">//获取最大值</span></span><br><span class="line">Integer min = Collections.min(list);<span class="comment">//获取最小值</span></span><br><span class="line">System.out.println(max);</span><br><span class="line">System.out.println(min);</span><br></pre></td></tr></table></figure>

<h4 id="转换线程安全集合"><a href="#转换线程安全集合" class="headerlink" title="转换线程安全集合"></a>转换线程安全集合</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// java中的很多集合，比如：ArrayList、LinkedList、HashMap、HashSet等，都是线程不安全的 这些集合在多线程的环境中，添加数据会出现异常</span></span><br><span class="line">List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(<span class="number">2</span>);</span><br><span class="line">list.add(<span class="number">1</span>);</span><br><span class="line">list.add(<span class="number">3</span>);</span><br><span class="line">List&lt;Integer&gt; integers = Collections.synchronizedList(list);<span class="comment">//将ArrayList转换成线程安全集合</span></span><br><span class="line">System.out.println(integers);</span><br></pre></td></tr></table></figure>

<h4 id="返回空集合"><a href="#返回空集合" class="headerlink" title="返回空集合"></a>返回空集合</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 我们在判空之后，需要返回空集合，就可以使用emptyList方法</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> List&lt;Integer&gt; <span class="title">fun</span><span class="params">(List&lt;Integer&gt; list)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (list == <span class="keyword">null</span> || list.size() == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//业务处理</span></span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// binarySearch方法提供了一个非常好用的二分查找功能，只用传入指定集合和需要找到的key即可</span></span><br><span class="line">List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(<span class="number">2</span>);</span><br><span class="line">list.add(<span class="number">1</span>);</span><br><span class="line">list.add(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = Collections.binarySearch(list, <span class="number">3</span>);<span class="comment">//二分查找</span></span><br><span class="line">System.out.println(i );</span><br></pre></td></tr></table></figure>


<h4 id="转换成不可修改集合"><a href="#转换成不可修改集合" class="headerlink" title="转换成不可修改集合"></a>转换成不可修改集合</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 为了防止后续的程序把某个集合的结果修改了，有时候我们需要把某个集合定义成不可修改的，使用Collections的unmodifiablexxx方法就能轻松实现</span></span><br><span class="line">List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(<span class="number">2</span>);</span><br><span class="line">list.add(<span class="number">1</span>);</span><br><span class="line">list.add(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">List&lt;Integer&gt; integers = Collections.unmodifiableList(list);</span><br><span class="line">integers.add(<span class="number">4</span>);</span><br><span class="line">System.out.println(integers);</span><br></pre></td></tr></table></figure>


<h3 id="apache的CollectionUtils工具类"><a href="#apache的CollectionUtils工具类" class="headerlink" title="apache的CollectionUtils工具类"></a>apache的CollectionUtils工具类</h3><h4 id="集合判空"><a href="#集合判空" class="headerlink" title="集合判空"></a>集合判空</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 通过CollectionUtils工具类的isEmpty方法可以轻松判断集合是否为空，isNotEmpty方法判断集合不为空。</span></span><br><span class="line">List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(<span class="number">2</span>);</span><br><span class="line">list.add(<span class="number">1</span>);</span><br><span class="line">list.add(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (CollectionUtils.isEmpty(list)) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;集合为空&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (CollectionUtils.isNotEmpty(list)) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;集合不为空&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="对两个集合进行操作"><a href="#对两个集合进行操作" class="headerlink" title="对两个集合进行操作"></a>对两个集合进行操作</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 有时候我们需要对已有的两个集合进行操作，比如取交集或者并集</span></span><br><span class="line">List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(<span class="number">2</span>);</span><br><span class="line">list.add(<span class="number">1</span>);</span><br><span class="line">list.add(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">List&lt;Integer&gt; list2 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list2.add(<span class="number">2</span>);</span><br><span class="line">list2.add(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取并集</span></span><br><span class="line">Collection&lt;Integer&gt; unionList = CollectionUtils.union(list, list2);</span><br><span class="line">System.out.println(unionList);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取交集</span></span><br><span class="line">Collection&lt;Integer&gt; intersectionList = CollectionUtils.intersection(list, list2);</span><br><span class="line">System.out.println(intersectionList);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取交集的补集</span></span><br><span class="line">Collection&lt;Integer&gt; disjunctionList = CollectionUtils.disjunction(list, list2);</span><br><span class="line">System.out.println(disjunctionList);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取差集</span></span><br><span class="line">Collection&lt;Integer&gt; subtractList = CollectionUtils.subtract(list, list2);</span><br><span class="line">System.out.println(subtractList);</span><br></pre></td></tr></table></figure>

<h3 id="google-guava-Lists"><a href="#google-guava-Lists" class="headerlink" title="google.guava Lists"></a>google.guava Lists</h3><h4 id="创建空集合"><a href="#创建空集合" class="headerlink" title="创建空集合"></a>创建空集合</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;Integer&gt; list = Lists.newArrayList();</span><br></pre></td></tr></table></figure>

<h4 id="快速初始化集合"><a href="#快速初始化集合" class="headerlink" title="快速初始化集合"></a>快速初始化集合</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;Integer&gt; list = Lists.newArrayList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure>

<h4 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;Integer&gt; list1 = Lists.newArrayList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">List&lt;Integer&gt; list2 = Lists.newArrayList(<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line">List&lt;List&lt;Integer&gt;&gt; productList = Lists.cartesianProduct(list1,list2);</span><br><span class="line">System.out.println(productList);</span><br></pre></td></tr></table></figure>

<h4 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 如果你想将一个大集合分成若干个小集合，可以使用Lists的partition方法</span></span><br><span class="line">List&lt;Integer&gt; list = Lists.newArrayList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">List&lt;List&lt;Integer&gt;&gt; partitionList = Lists.partition(list, <span class="number">2</span>);</span><br><span class="line">System.out.println(partitionList);</span><br></pre></td></tr></table></figure>

<h4 id="流处理"><a href="#流处理" class="headerlink" title="流处理"></a>流处理</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 想把某个集合转换成另外一个接口，可以使用Lists的transform方法</span></span><br><span class="line">List&lt;String&gt; list = Lists.newArrayList(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>);</span><br><span class="line">List&lt;String&gt; transformList = Lists.transform(list, x -&gt; x.toUpperCase());</span><br><span class="line">System.out.println(transformList);</span><br></pre></td></tr></table></figure>

<h4 id="颠倒顺序"><a href="#颠倒顺序" class="headerlink" title="颠倒顺序"></a>颠倒顺序</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;Integer&gt; list = Lists.newArrayList(<span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">List&lt;Integer&gt; reverseList = Lists.reverse(list);</span><br><span class="line">System.out.println(reverseList);</span><br></pre></td></tr></table></figure>


<h3 id="Objects"><a href="#Objects" class="headerlink" title="Objects"></a>Objects</h3><h4 id="对象判空"><a href="#对象判空" class="headerlink" title="对象判空"></a>对象判空</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Objects的isNull方法判断对象是否为空，而nonNull方法判断对象是否不为空</span></span><br><span class="line">Integer integer = <span class="keyword">new</span> Integer(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Objects.isNull(integer)) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;对象为空&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Objects.nonNull(integer)) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;对象不为空&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="对象为空抛异常"><a href="#对象为空抛异常" class="headerlink" title="对象为空抛异常"></a>对象为空抛异常</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在对象为空时，抛出空指针异常，可以使用Objects的requireNonNull方法</span></span><br><span class="line">Integer integer1 = <span class="keyword">new</span> Integer(<span class="number">128</span>);</span><br><span class="line"></span><br><span class="line">Objects.requireNonNull(integer1);</span><br><span class="line">Objects.requireNonNull(integer1, <span class="string">&quot;参数不能为空&quot;</span>);</span><br><span class="line">Objects.requireNonNull(integer1, () -&gt; <span class="string">&quot;参数不能为空&quot;</span>);</span><br></pre></td></tr></table></figure>

<h4 id="判断两个对象是否相等"><a href="#判断两个对象是否相等" class="headerlink" title="判断两个对象是否相等"></a>判断两个对象是否相等</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 判断两个对象是否相等，Objects给我们提供了equals方法</span></span><br><span class="line">Integer integer1 = <span class="keyword">new</span> Integer(<span class="number">1</span>);</span><br><span class="line">Integer integer2 = <span class="keyword">new</span> Integer(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(Objects.equals(integer1, integer2));</span><br></pre></td></tr></table></figure>

<h3 id="BooleanUtils"><a href="#BooleanUtils" class="headerlink" title="BooleanUtils"></a>BooleanUtils</h3><h4 id="转换成数字"><a href="#转换成数字" class="headerlink" title="转换成数字"></a>转换成数字</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将true转换成数字1，false转换成数字0，可以使用toInteger方法</span></span><br><span class="line">Boolean aBoolean = <span class="keyword">new</span> Boolean(<span class="keyword">true</span>);</span><br><span class="line">Boolean aBoolean1 = <span class="keyword">new</span> Boolean(<span class="keyword">false</span>);</span><br><span class="line">System.out.println(BooleanUtils.toInteger(aBoolean));</span><br><span class="line">System.out.println(BooleanUtils.toInteger(aBoolean1));</span><br></pre></td></tr></table></figure>

<h4 id="Boolean转换成布尔值"><a href="#Boolean转换成布尔值" class="headerlink" title="Boolean转换成布尔值"></a>Boolean转换成布尔值</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将包装类Boolean对象，转换成原始的boolean对象，可以使用toBoolean方法</span></span><br><span class="line">Boolean aBoolean = <span class="keyword">new</span> Boolean(<span class="keyword">true</span>);</span><br><span class="line">Boolean aBoolean1 = <span class="keyword">null</span>;</span><br><span class="line">System.out.println(BooleanUtils.toBoolean(aBoolean));</span><br><span class="line">System.out.println(BooleanUtils.toBoolean(aBoolean1));</span><br><span class="line">System.out.println(BooleanUtils.toBooleanDefaultIfNull(aBoolean1, <span class="keyword">false</span>));</span><br></pre></td></tr></table></figure>

<h3 id="Assert"><a href="#Assert" class="headerlink" title="Assert"></a>Assert</h3><h4 id="断言参数是否为空"><a href="#断言参数是否为空" class="headerlink" title="断言参数是否为空"></a>断言参数是否为空</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 断言参数是否空，如果不满足条件，则直接抛异常</span></span><br><span class="line">String str = <span class="keyword">null</span>;</span><br><span class="line">Assert.isNull(str, <span class="string">&quot;str必须为空&quot;</span>);</span><br><span class="line">Assert.isNull(str, () -&gt; <span class="string">&quot;str必须为空&quot;</span>);</span><br><span class="line">Assert.notNull(str, <span class="string">&quot;str不能为空&quot;</span>);</span><br></pre></td></tr></table></figure>

<h4 id="断言集合是否为空"><a href="#断言集合是否为空" class="headerlink" title="断言集合是否为空"></a>断言集合是否为空</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 断言集合是否空，如果不满足条件，则直接抛异常</span></span><br><span class="line">List&lt;String&gt; list = <span class="keyword">null</span>;</span><br><span class="line">Map&lt;String, String&gt; map = <span class="keyword">null</span>;</span><br><span class="line">Assert.notEmpty(list, <span class="string">&quot;list不能为空&quot;</span>);</span><br><span class="line">Assert.notEmpty(list, () -&gt; <span class="string">&quot;list不能为空&quot;</span>);</span><br><span class="line">Assert.notEmpty(map, <span class="string">&quot;map不能为空&quot;</span>);</span><br></pre></td></tr></table></figure>

<h4 id="断言条件是否为空"><a href="#断言条件是否为空" class="headerlink" title="断言条件是否为空"></a>断言条件是否为空</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 断言是否满足某个条件，如果不满足条件，则直接抛异常</span></span><br><span class="line">List&lt;String&gt; list = <span class="keyword">null</span>;</span><br><span class="line">Assert.isTrue(CollectionUtils.isNotEmpty(list), <span class="string">&quot;list不能为空&quot;</span>);</span><br><span class="line">Assert.isTrue(CollectionUtils.isNotEmpty(list), () -&gt; <span class="string">&quot;list不能为空&quot;</span>);</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>技术分享</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的搬家小程序系统</title>
    <url>/2025/02/05/Java%E6%90%AC%E5%AE%B6%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的软件检测系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<h3 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h3><p>公告信息、公司审核、投诉记录、订单评价、公司管理、消息管理、优惠券管理、消息通知、订单信息、付款记录、价格规则、员工管理、客户管理、车辆管理、提现记录、数据统计、订单年统计、订单月统计、</p>
<h3 id="商家"><a href="#商家" class="headerlink" title="商家"></a>商家</h3><p>公司信息、订单评价、客户消息、订单信息、用户缴费、价格规则、员工管理、车辆管理、提现记录、贴子管理、公司审核、客户消息、接单中心、</p>
<h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><p>小程序注册登录、个人信息修改、我的订单、我的消息、优惠券管理、社区交流、我的贴子、贴子发布、投诉管理、订单下单、订单配置选择、商家联系、订单投诉、订单评价、查看订单详情</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[商家]<br>shangjia<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813745885.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813533972.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813738810.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813952346.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813705802.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813943403.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813698710.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813936267.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813673533.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813926597.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813660252.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813911850.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813654516.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813901437.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813645772.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813830292.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813629514.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813817458.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813623211.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813766202.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813616836.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813758441.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813610452.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813752284.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737813600962.png"></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737814147006.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737814067495.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737814140870.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737814048550.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737814125712.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737814042008.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737814116311.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737814023862.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737814107246.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737814015070.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737814098008.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737814002639.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737814082391.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1737814155847.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#x6e;&#49;&#x6b;&#101;&#50;&#x6b;&#101;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#46;&#99;&#x6f;&#x6d;">&#x66;&#x61;&#x6e;&#49;&#x6b;&#101;&#50;&#x6b;&#101;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#46;&#99;&#x6f;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的电脑维修服务系统</title>
    <url>/2024/09/01/Java%E7%94%B5%E8%84%91%E7%BB%B4%E4%BF%AE%E6%9C%8D%E5%8A%A1%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的电脑维修服务系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<h3 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h3><p>1、用户管理<br>2、员工管理<br>3、评价管理<br>4、服务类型<br>5、预约管理<br>6、维修信息<br>7、产品信息<br>8、缴费记录<br>9、工单管理<br>10、公告信息</p>
<h3 id="客户"><a href="#客户" class="headerlink" title="客户"></a>客户</h3><p>1.我的工单<br>2.个人信息<br>3.缴费记录<br>4.维修信息<br>5.支付宝工单缴费</p>
<h3 id="维修员"><a href="#维修员" class="headerlink" title="维修员"></a>维修员</h3><p>1.我的任务<br>2.任务日历<br>产品售后服务系统</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[客户]<br>fank<br>1234qwer</p>
<p>[维修员]<br>SF-1672552215871<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734771754856.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734771922052.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734772306097.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734771903954.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734772285205.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734771893950.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734772248025.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734771877077.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734772171418.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734771852876.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734772148483.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734771832163.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734772002793.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734771822934.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734771943090.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734771807134.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734771935393.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1734771791739.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#97;&#110;&#49;&#x6b;&#x65;&#x32;&#107;&#x65;&#x40;&#x67;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#x6d;">&#102;&#97;&#110;&#49;&#x6b;&#x65;&#x32;&#107;&#x65;&#x40;&#x67;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的软件检测系统</title>
    <url>/2025/01/26/Java%E8%BD%AF%E4%BB%B6%E6%A3%80%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的软件检测系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<h3 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h3><p>客户管理、检测项管理、检测模板、常见缺陷、项目模块、工单管理、员工管理、环境管理、检测机构、内部检测、外部检验、专家检验、系统管理、统计看板</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573535742.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573448407.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573529647.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573440230.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573513478.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573433552.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573504863.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573423902.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573495095.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573416496.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573485455.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573409005.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573478767.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573400113.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573470798.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573388355.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573458915.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573375511.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736573453577.png"></td>
<td></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#x66;&#x61;&#x6e;&#49;&#107;&#101;&#50;&#x6b;&#101;&#x40;&#x67;&#109;&#97;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;">&#x66;&#x61;&#x6e;&#49;&#107;&#101;&#50;&#x6b;&#101;&#x40;&#x67;&#109;&#97;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot的药房在线管理系统</title>
    <url>/2025/01/26/Java%E8%8D%AF%E6%88%BF%E5%9C%A8%E7%BA%BF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>基于SpringBoot的药房在线管理系统.</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<h3 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h3><p>公告管理、药品管理、库存统计、物流信息、订单详情、订单评价、订单信息、缴费记录、药店管理、药店库存、员工管理、用户管理、数据统计、销售排行、员工统计、管理员管理、供应采购、供应商管理、电子处方、药品采购、库房预警、销售统计、采购物流</p>
<h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><p>我的信息、个人信息、我的订单、缴费记录、订单评价、药品购买、支付结果、药品处方</p>
<h3 id="药店医生"><a href="#药店医生" class="headerlink" title="药店医生"></a>药店医生</h3><p>店内管理、电子处方、库存统计、订单物流、订单管理、订单评价、店内库存、员工管理</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<p>[药店医生]<br>fkkk<br>1234qwer</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727393476.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727550883.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727384092.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727521780.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727371419.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727514515.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727332742.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727506587.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727691571.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727495250.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727680883.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727487174.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727649083.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727473995.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727631042.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727456465.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727606844.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727444948.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727591795.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727437077.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727583084.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727418948.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727574101.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727410852.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727567429.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1736727403702.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#97;&#110;&#49;&#x6b;&#101;&#50;&#x6b;&#x65;&#64;&#x67;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#x6d;">&#102;&#97;&#110;&#49;&#x6b;&#101;&#50;&#x6b;&#x65;&#64;&#x67;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>因为要恰饭资源非免费，伸手党勿扰，谢谢理解</code></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
  <entry>
    <title>咸鱼小红书淘宝的坑与骗子</title>
    <url>/2025/06/18/%E5%92%B8%E9%B1%BC%E5%B0%8F%E7%BA%A2%E4%B9%A6%E6%B7%98%E5%AE%9D%E7%9A%84%E5%9D%91%E4%B8%8E%E9%AA%97%E5%AD%90/</url>
    <content><![CDATA[<blockquote>
<p>请勿轻易相信他人！！！</p>
</blockquote>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/fced326b-b9d8-47fc-8ec8-a300f85c2198.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/102a69f6-d8c1-4a52-92de-2a9d05376118.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/f4b02cb9-1dd0-4b4f-9a46-c36600a5ce54.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/66a236b1-5864-4bce-98ef-b5f03c297478.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/c0b34d3e-cd63-4fb9-9176-6bbb02c59964.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/46d3f03f-51b7-42b5-9f2e-af2e2e9103f7.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/ba813752-1c91-4490-9ca0-86630b376290.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/23c9dd13-8dac-4215-9357-b665576a837d.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/a12ad468-35ab-4eb3-9587-cd34b51d8e7f.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/8b32d2c75b40ae4c5cd04ca77ec977e2.jpg"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/335953c4-0b03-48a8-bcf4-9105fd6d542a.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/4ac578c3-b7da-4a7f-a945-39fba7410159.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/62084c30-5c76-4253-a5d2-00cb7e41c2e6.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/2aeafbfa-363c-40d0-a0c2-4c225ae600ae.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/7800cf2a-7149-42f1-ac77-42de6ebe8f9e.png"></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>答辩相关</tag>
      </tags>
  </entry>
  <entry>
    <title>日常</title>
    <url>/2025/06/18/%E6%97%A5%E5%B8%B8250618/</url>
    <content><![CDATA[<blockquote>
<p>Yukar</p>
</blockquote>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/02841ce5965c142f1bdeea72bb619e4f.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/397b7ed4061c76d71e7044b15c7b0eb8.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/101aaff853fb29d369b0016622b1dac8.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/52aef3c6330113aff9ca811ca3b5e900.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/9e9e4b7f836a97fca41cf153bd521bd7.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/7cfa4461cf6e9c60e5036b2e8033ed83.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/6ee5d60c18826a89fcaacb11e76988fa.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/4fb609dd1908a2c34c2fb99094697e4e.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/2a86b6e6dd0f823442742fa1efd14638.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/02d25bd517312d58cc873be5b7320c28.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/feb2d3babe60329e8e78f80a25b34079.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/e53695ac5e9e2870571447cfc0d45ee1.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/e7e3ff55d06e087a02fb8214b4361441.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/e0dc29ec0bdc8416e94e37344fccd918.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/d44272dc0fa62eacf922878a2c475025.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/c7ac325eb4bf3583518eb8bd0cc470e8.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/c5ebe282ac8e851cc60c731059a60091.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/a99bda3b20c1d72aed443746a3a75e57.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/a08a4f3b8345875ffc89bb3e8efd4fa5.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1818674921b2b320e9b73e4e0c8e700c.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/517783ca4d0eed5b2ce08fdb03d0997c.jpg"></p>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/9376ac448458835a86c66ce88b0af159.jpg"></p>
]]></content>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>2023年关键字总结：稳定&amp;骑行&amp;发展&amp;挣扎</title>
    <url>/2023/12/24/2023%E5%B9%B4%E6%80%BB%E7%BB%93%20/</url>
    <content><![CDATA[<blockquote>
<p>稳定&amp;骑行&amp;发展&amp;挣扎</p>
</blockquote>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/24%20-%20%E3%83%81%E3%83%A3%E3%82%A4%20-%20%E3%81%B2%E3%82%84%E3%81%96%E3%81%91%5Bpid=91176053%5D.png"></p>
]]></content>
      <tags>
        <tag>年度记录</tag>
      </tags>
  </entry>
  <entry>
    <title>2024年关键字总结：机会&amp;爱情&amp;蜕变&amp;副业&amp;平缓</title>
    <url>/2024/12/24/2024%E5%B9%B4%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<blockquote>
<p>机会&amp;爱情&amp;蜕变&amp;副业&amp;平缓</p>
</blockquote>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/24%20-%20%E3%83%81%E3%83%A3%E3%82%A4%20-%20%E3%83%96%E3%83%AB%E3%83%BC%E3%82%AB%E3%82%AF%E3%83%86%E3%83%AB%5Bpid=91241653%5D.png"></p>
]]></content>
      <tags>
        <tag>年度记录</tag>
      </tags>
  </entry>
  <entry>
    <title>给你康康好东西</title>
    <url>/2025/06/18/%E5%88%86%E4%BA%AB/</url>
    <content><![CDATA[<h1 id="前端组件库"><a href="#前端组件库" class="headerlink" title="前端组件库"></a>前端组件库</h1><blockquote>
<p>只针对好看的组件库 框架不同</p>
</blockquote>
<ol>
<li><a href="https://github.com/quasarframework/quasar" title="quasar">quasar</a></li>
<li><a href="https://github.com/vuetifyjs/vuetify">vuetify</a></li>
<li><a href="https://github.com/DataV-Team/DataV">DataV 大屏显示</a></li>
<li><a href="https://github.com/SimonZhangITer/DataVisualization">DataVisualization</a></li>
<li><a href="https://github.com/myliang/x-spreadsheet" title="web端表格在线编辑">x-spreadsheet</a></li>
<li><a href="https://github.com/alexfoxy/laxxx" title="垂直动画">laxxx</a></li>
<li><a href="https://github.com/EdernClemente/TypeLighterJS" title="键盘输入效果">TypeLighterJS</a></li>
<li><a href="https://github.com/ilkeryilmaz/timelinejs" title="一款高颜值的时间线插件">timelinejs</a></li>
<li><a href="https://github.com/shobhitsharma/embedo" title="通过特权将第三方内容嵌入DOM（6KB Gzip / Standalone）">embedo</a></li>
<li><a href="https://github.com/jaredreich/pell" title="有趣的富文本框插件">pell</a></li>
<li><a href="https://github.com/Varin6/Hover-Buttons" title="神奇的悬浮按钮">Hover-Buttons</a></li>
<li><a href="https://github.com/OfficeDev/office-ui-fabric-react" title="也有vue版本的">office-ui-fabric-react</a></li>
<li><a href="https://github.com/mui-org/material-ui">Material-UI</a></li>
<li><a href="https://github.com/myxvisual/react-uwp">react-uwp</a></li>
<li><a href="https://github.com/iview/iview-admin">iview-admin</a></li>
<li><a href="https://github.com/airyland/vux" title="移动端UI">vux</a></li>
<li><a href="https://github.com/phanan/vue-google-signin-button">vue-google-signin-button</a></li>
<li><a href="https://github.com/JosephusPaye/Keen-UI">Keen-UI</a></li>
<li><a href="https://github.com/iview/iview">iview</a></li>
<li><a href="https://github.com/fighting41love/funNLP" title="百科全库">funNLP</a></li>
<li><a href="https://github.com/stevenjoezhang/live2d-widget" title="看板娘">live2d-widget</a></li>
<li><a href="https://github.com/rumengkai/awesome-vue" title="Vue相关开源项目库汇总">awesome-vue</a></li>
<li><a href="https://github.com/mdbootstrap/Vue-Bootstrap-with-Material-Design" title="bootstrap谷歌组件！！！！">MDB</a></li>
<li><a href="https://github.com/vuematerial/vue-material" title="vue谷歌ui组件">vue-materual</a></li>
<li><a href="https://github.com/Tapadoo/Alerter" title="安卓弹出框">Alerter</a></li>
<li><a href="https://github.com/wasabeef/awesome-android-ui" title="高颜值安卓组件">Awesome-android</a></li>
<li><a href="https://github.com/Hack-with-Github/Awesome-Hacking" title="骇客，渗透测试人员和安全研究人员的精选清单">Awesome-Hacking</a></li>
<li><a href="https://github.com/doocs/advanced-java" title="互联网一线大厂面试+学习指南">JavaFamily</a></li>
</ol>
<h1 id="休闲"><a href="#休闲" class="headerlink" title="休闲"></a>休闲</h1><ol>
<li><a href="https://github.com/TheodoreKrypton/slacking-off-tools">上班摸鱼工具</a></li>
<li><a href="https://github.com/gaowanliang/NMSL">抽象化转换器</a></li>
<li><a href="https://github.com/tophubs/TopList">今日热榜</a></li>
</ol>
<h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><ol>
<li><a href="https://github.com/photopea/UPNG.js" title="快速和先进的PNG（APNG）解码器和编码器（有损/无损）">UPNG.js</a></li>
<li><a href="https://github.com/notifme/notifme-sdk" title="一个Node.js库，用于发送各种事务通知">notifme-sdk</a></li>
<li><a href="https://github.com/he426100/alipay-crawler" title="支付宝账单爬虫">alipay-crawler</a></li>
<li>npm run build –report 可视化文件包</li>
<li><a href="https://github.com/DIYgod/RSSHub">万物皆可RSS</a></li>
<li><a href="https://github.com/zhaoolee/ChromeAppHeroes">谷歌插件</a></li>
<li><a href="https://github.com/hoodiearon/w3-goto-world" title="冲出你的窗口">w3-goto-world</a></li>
</ol>
]]></content>
      <tags>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SpringBoot + Vue的在线杂志订阅系统</title>
    <url>/2025/08/10/%E5%9F%BA%E4%BA%8ESpringBoot%20+%20Vue%E7%9A%84%E5%9C%A8%E7%BA%BF%E6%9D%82%E5%BF%97%E8%AE%A2%E9%98%85%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="基于SpringBoot-Vue的在线杂志订阅系统"><a href="#基于SpringBoot-Vue的在线杂志订阅系统" class="headerlink" title="基于SpringBoot + Vue的在线杂志订阅系统."></a>基于SpringBoot + Vue的在线杂志订阅系统.</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>JAVA 环境 </p>
<p>Node.js环境 [<a href="https://nodejs.org/en/]">https://nodejs.org/en/]</a> 选择14.17</p>
<p>Yarn 打开cmd， 输入npm install -g yarn !!!必须安装完毕nodejs</p>
<p>Mysql 数据库 [<a href="https://blog.csdn.net/qq_40303031/article/details/88935262]">https://blog.csdn.net/qq_40303031/article/details/88935262]</a> 一定要把账户和密码记住</p>
<p>redis</p>
<p>Idea 编译器 [<a href="https://blog.csdn.net/weixin_44505194/article/details/104452880]">https://blog.csdn.net/weixin_44505194/article/details/104452880]</a></p>
<p>WebStorm OR VScode 编译器 [<a href="https://www.jianshu.com/p/d63b5bae9dff]">https://www.jianshu.com/p/d63b5bae9dff]</a></p>
<h2 id="采用技术及功能"><a href="#采用技术及功能" class="headerlink" title="采用技术及功能"></a>采用技术及功能</h2><p>后端：SpringBoot、MybatisPlus、MySQL、Redis、<br>前端：Vue、Apex、Antd、Axios</p>
<p>平台前端：vue(框架) + vuex(全局缓存) + rue-router(路由) + axios(请求插件) + apex(图表)  + antd-ui(ui组件)</p>
<p>平台后台：springboot(框架) + redis(缓存中间件) + shiro(权限中间件) + mybatisplus(orm) + restful风格接口 + mysql(数据库)</p>
<p>开发环境：windows10 or windows7 ， vscode or webstorm ， idea + lambok</p>
<h2 id="前台启动方式"><a href="#前台启动方式" class="headerlink" title="前台启动方式"></a>前台启动方式</h2><p>安装所需文件 yarn install<br>运行 yarn run dev</p>
<h2 id="默认后台账户密码"><a href="#默认后台账户密码" class="headerlink" title="默认后台账户密码"></a>默认后台账户密码</h2><p>[管理员]<br>admin<br>1234qwer</p>
<p>[用户]<br>fank<br>1234qwer</p>
<h3 id="管理员："><a href="#管理员：" class="headerlink" title="管理员："></a>管理员：</h3><p>公告信息、用户管理、杂志内容模块、用户订阅管理、订阅价格管理、用户消息通知、历史阅读记录、订阅收益记录、收益统计、阅读统计、工单管理、样式管理、文章评论。</p>
<h3 id="用户："><a href="#用户：" class="headerlink" title="用户："></a>用户：</h3><p>用户注册登录、修改密码、订单管理、杂志订阅、在线阅读、杂志推荐、支付宝在线支付、工单提交、杂志评论，杂志点赞，杂志关注。</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><p>暂无</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/61304ff1-34d9-4a70-9aeb-3fb3c5e75ee0.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/2faa3f79-def7-4133-8a21-e9a93fc34cd1.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/1990f439-1aa4-4db0-b7bb-7d705ce7ceec.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/f95e7ee1-5e7f-43b5-af81-f4f3c80279e4.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/953f706e-63d8-485d-b17b-5f8c8ebddd06.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/f3d0fe5c-6fdf-41af-b8ec-14f0d5e4afe6.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/920de269-5033-47c5-b41e-46336275004f.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/f1b1a9cd-5846-4cfe-aa58-fe7ba91bb5aa.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/097fc158-5a07-4928-9cb3-a487e6fdfc25.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/eeb32f06-e33e-4d83-82d8-73cd430cf7dd.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/96d7969b-e464-46f9-a3c8-a2ce819e2d20.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/d7d83a17-56fa-40ef-baf5-5f782dbc26da.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/68c9e1d7-540d-4797-a178-18e9f3fb76a6.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/bb2bd217-eb8b-4111-82fa-c88b32ec734f.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/8fdcbd2d-0ea6-469c-8532-f10b54da05dc.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/b0e4e2c0-1af3-4e73-ba22-eac7ea3bcae3.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/6b5c7bb2-0d22-44a3-8f71-d13723a4bddf.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/a9d9f7cb-07b9-484c-ae4a-ba17347281d7.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/4c9274d3-3b1e-43de-8069-7b936a7a683d.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/353434ba-cf34-4072-9c8c-62eca001aeb0.png"></td>
</tr>
<tr>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/3ad234d1-5cd5-4633-8872-d5c9ce098901.png"></td>
<td><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/work/936e9baf53eb9a217af4f89c616dc19.png"></td>
</tr>
</tbody></table>
<h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p>暂无</p>
<h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>Email: <a href="mailto:&#102;&#x61;&#110;&#x31;&#x6b;&#x65;&#50;&#x6b;&#x65;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;">&#102;&#x61;&#110;&#x31;&#x6b;&#x65;&#50;&#x6b;&#x65;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;</a></p>
<p>WeChat: <code>Storm_Berserker</code></p>
<p><code>附带部署与讲解服务，因为要恰饭资源非免费，伸手党勿扰，谢谢理解😭</code></p>
<blockquote>
<p>1.项目纯原创，不做二手贩子 2.一次购买终身有效 3.项目讲解持续到答辩结束 4.非常负责的答辩指导 5.黑奴价格</p>
</blockquote>
<blockquote>
<p>项目部署调试不好包退！功能逻辑没讲明白包退！</p>
</blockquote>
<p><img src="https://fank-bucket-oss.oss-cn-beijing.aliyuncs.com/img/%E5%90%88%E4%BD%9C%E7%89%A9%E6%96%99%E6%A0%B7%E5%BC%8F%20(3).png"></p>
<h2 id="其它资源"><a href="#其它资源" class="headerlink" title="其它资源"></a>其它资源</h2><p><a href="https://berserker287.github.io/2024/06/06/2024%E5%B9%B4%E7%AD%94%E8%BE%A9%E9%A1%BA%E5%88%A9%E9%80%9A%E8%BF%87/">2024年-答辩顺利通过-客户评价👻</a></p>
<p><a href="https://berserker287.github.io/2023/06/14/2023%E5%B9%B4%E7%AD%94%E8%BE%A9%E9%A1%BA%E5%88%A9%E9%80%9A%E8%BF%87/">2023年-答辩顺利通过-客户评价🐢</a></p>
<p><a href="https://berserker287.github.io/2022/05/25/%E9%A1%B9%E7%9B%AE%E4%BA%A4%E6%98%93%E8%AE%B0%E5%BD%95/">2022年-答辩通过率100%-客户评价🐣</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/%E6%AF%95%E4%B8%9A%E7%AD%94%E8%BE%A9%E5%AF%BC%E5%B8%88%E6%8F%90%E9%97%AE%E7%9A%84%E9%AB%98%E9%A2%91%E9%97%AE%E9%A2%98/">毕业答辩导师提问的高频问题</a></p>
<p><a href="https://berserker287.github.io/2023/06/13/50%E4%B8%AA%E9%AB%98%E9%A2%91%E7%AD%94%E8%BE%A9%E9%97%AE%E9%A2%98-%E6%8A%80%E6%9C%AF%E7%AF%87/">50个高频答辩问题-技术篇</a></p>
<p><a href="https://www.zhihu.com/question/31020988">计算机毕设答辩时都会问到哪些问题？</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/145911029">计算机专业毕业答辩小tips</a></p>
<h2 id="接JAVAWEB毕设，纯原创，价格公道，诚信第一"><a href="#接JAVAWEB毕设，纯原创，价格公道，诚信第一" class="headerlink" title="接JAVAWEB毕设，纯原创，价格公道，诚信第一"></a>接JAVAWEB毕设，纯原创，价格公道，诚信第一</h2><p><code>网站建设、小程序、H5、APP、各种系统 选题+开题报告+任务书+程序定制+安装调试+项目讲解+论文+答辩PPT</code></p>
<p>More info: <a href="https://berserker287.github.io/">悲伤的橘子树</a></p>
]]></content>
      <tags>
        <tag>毕设源码</tag>
      </tags>
  </entry>
</search>
